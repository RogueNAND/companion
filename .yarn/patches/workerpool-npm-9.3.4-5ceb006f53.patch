diff --git a/dist/worker.js b/dist/worker.js
index 254cd410b1de5b8547ba4d7f82e5a828f7a2763f..dc9affa77bc4b1c124dbab8d651ab15549bac9ac 100644
--- a/dist/worker.js
+++ b/dist/worker.js
@@ -5,7 +5,7 @@
  * Offload tasks to a pool of workers on node.js and in the browser.
  *
  * @version 9.3.4
- * @date    2025-09-10
+ * @date    2025-09-28
  *
  * @license
  * Copyright (C) 2014-2022 Jos de Jong <wjosdejong@gmail.com>
diff --git a/dist/workerpool.js b/dist/workerpool.js
index e921486eb914b7899c2dc082a71f55a61f2c2d56..23499f73e1c80f1e7d4c4e0c3b6e09e0f3892c0e 100644
--- a/dist/workerpool.js
+++ b/dist/workerpool.js
@@ -5,7 +5,7 @@
  * Offload tasks to a pool of workers on node.js and in the browser.
  *
  * @version 9.3.4
- * @date    2025-09-10
+ * @date    2025-09-28
  *
  * @license
  * Copyright (C) 2014-2022 Jos de Jong <wjosdejong@gmail.com>
@@ -31,7 +31,7 @@
 
   var src = {};
 
-  var environment = {exports: {}};
+  var environment$1 = {exports: {}};
 
   (function (module) {
     // source: https://github.com/flexdinesh/browser-or-node
@@ -51,8 +51,209 @@
 
     // determines the number of cpus available
     module.exports.cpus = module.exports.platform === 'browser' ? self.navigator.hardwareConcurrency : require('os').cpus().length;
-  })(environment);
-  var environmentExports = environment.exports;
+  })(environment$1);
+  var environmentExports = environment$1.exports;
+
+  function _arrayLikeToArray(r, a) {
+    (null == a || a > r.length) && (a = r.length);
+    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
+    return n;
+  }
+  function _assertThisInitialized(e) {
+    if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
+    return e;
+  }
+  function _callSuper(t, o, e) {
+    return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));
+  }
+  function _classCallCheck(a, n) {
+    if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function");
+  }
+  function _construct(t, e, r) {
+    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);
+    var o = [null];
+    o.push.apply(o, e);
+    var p = new (t.bind.apply(t, o))();
+    return r && _setPrototypeOf(p, r.prototype), p;
+  }
+  function _createClass(e, r, t) {
+    return Object.defineProperty(e, "prototype", {
+      writable: false
+    }), e;
+  }
+  function _createForOfIteratorHelper(r, e) {
+    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
+    if (!t) {
+      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {
+        t && (r = t);
+        var n = 0,
+          F = function () {};
+        return {
+          s: F,
+          n: function () {
+            return n >= r.length ? {
+              done: true
+            } : {
+              done: false,
+              value: r[n++]
+            };
+          },
+          e: function (r) {
+            throw r;
+          },
+          f: F
+        };
+      }
+      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
+    }
+    var o,
+      a = true,
+      u = false;
+    return {
+      s: function () {
+        t = t.call(r);
+      },
+      n: function () {
+        var r = t.next();
+        return a = r.done, r;
+      },
+      e: function (r) {
+        u = true, o = r;
+      },
+      f: function () {
+        try {
+          a || null == t.return || t.return();
+        } finally {
+          if (u) throw o;
+        }
+      }
+    };
+  }
+  function _defineProperty(e, r, t) {
+    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
+      value: t,
+      enumerable: true,
+      configurable: true,
+      writable: true
+    }) : e[r] = t, e;
+  }
+  function _getPrototypeOf(t) {
+    return _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function (t) {
+      return t.__proto__ || Object.getPrototypeOf(t);
+    }, _getPrototypeOf(t);
+  }
+  function _inherits(t, e) {
+    if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function");
+    t.prototype = Object.create(e && e.prototype, {
+      constructor: {
+        value: t,
+        writable: true,
+        configurable: true
+      }
+    }), Object.defineProperty(t, "prototype", {
+      writable: false
+    }), e && _setPrototypeOf(t, e);
+  }
+  function _isNativeFunction(t) {
+    try {
+      return -1 !== Function.toString.call(t).indexOf("[native code]");
+    } catch (n) {
+      return "function" == typeof t;
+    }
+  }
+  function _isNativeReflectConstruct() {
+    try {
+      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));
+    } catch (t) {}
+    return (_isNativeReflectConstruct = function () {
+      return !!t;
+    })();
+  }
+  function ownKeys(e, r) {
+    var t = Object.keys(e);
+    if (Object.getOwnPropertySymbols) {
+      var o = Object.getOwnPropertySymbols(e);
+      r && (o = o.filter(function (r) {
+        return Object.getOwnPropertyDescriptor(e, r).enumerable;
+      })), t.push.apply(t, o);
+    }
+    return t;
+  }
+  function _objectSpread2(e) {
+    for (var r = 1; r < arguments.length; r++) {
+      var t = null != arguments[r] ? arguments[r] : {};
+      r % 2 ? ownKeys(Object(t), true).forEach(function (r) {
+        _defineProperty(e, r, t[r]);
+      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
+        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
+      });
+    }
+    return e;
+  }
+  function _possibleConstructorReturn(t, e) {
+    if (e && ("object" == typeof e || "function" == typeof e)) return e;
+    if (void 0 !== e) throw new TypeError("Derived constructors may only return object or undefined");
+    return _assertThisInitialized(t);
+  }
+  function _setPrototypeOf(t, e) {
+    return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {
+      return t.__proto__ = e, t;
+    }, _setPrototypeOf(t, e);
+  }
+  function _toPrimitive(t, r) {
+    if ("object" != typeof t || !t) return t;
+    var e = t[Symbol.toPrimitive];
+    if (void 0 !== e) {
+      var i = e.call(t, r);
+      if ("object" != typeof i) return i;
+      throw new TypeError("@@toPrimitive must return a primitive value.");
+    }
+    return ("string" === r ? String : Number)(t);
+  }
+  function _toPropertyKey(t) {
+    var i = _toPrimitive(t, "string");
+    return "symbol" == typeof i ? i : i + "";
+  }
+  function _typeof(o) {
+    "@babel/helpers - typeof";
+
+    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
+      return typeof o;
+    } : function (o) {
+      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
+    }, _typeof(o);
+  }
+  function _unsupportedIterableToArray(r, a) {
+    if (r) {
+      if ("string" == typeof r) return _arrayLikeToArray(r, a);
+      var t = {}.toString.call(r).slice(8, -1);
+      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
+    }
+  }
+  function _wrapNativeSuper(t) {
+    var r = "function" == typeof Map ? new Map() : void 0;
+    return _wrapNativeSuper = function (t) {
+      if (null === t || !_isNativeFunction(t)) return t;
+      if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
+      if (void 0 !== r) {
+        if (r.has(t)) return r.get(t);
+        r.set(t, Wrapper);
+      }
+      function Wrapper() {
+        return _construct(t, arguments, _getPrototypeOf(this).constructor);
+      }
+      return Wrapper.prototype = Object.create(t.prototype, {
+        constructor: {
+          value: Wrapper,
+          enumerable: false,
+          writable: true,
+          configurable: true
+        }
+      }), _setPrototypeOf(Wrapper, t);
+    }, _wrapNativeSuper(t);
+  }
+
+  var WorkerHandler$1 = {exports: {}};
 
   var _Promise$1 = {};
 
@@ -347,122 +548,7 @@
     return _Promise$1;
   }
 
-  function _arrayLikeToArray(r, a) {
-    (null == a || a > r.length) && (a = r.length);
-    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
-    return n;
-  }
-  function _createForOfIteratorHelper(r, e) {
-    var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
-    if (!t) {
-      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {
-        t && (r = t);
-        var n = 0,
-          F = function () {};
-        return {
-          s: F,
-          n: function () {
-            return n >= r.length ? {
-              done: true
-            } : {
-              done: false,
-              value: r[n++]
-            };
-          },
-          e: function (r) {
-            throw r;
-          },
-          f: F
-        };
-      }
-      throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
-    }
-    var o,
-      a = true,
-      u = false;
-    return {
-      s: function () {
-        t = t.call(r);
-      },
-      n: function () {
-        var r = t.next();
-        return a = r.done, r;
-      },
-      e: function (r) {
-        u = true, o = r;
-      },
-      f: function () {
-        try {
-          a || null == t.return || t.return();
-        } finally {
-          if (u) throw o;
-        }
-      }
-    };
-  }
-  function _defineProperty(e, r, t) {
-    return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
-      value: t,
-      enumerable: true,
-      configurable: true,
-      writable: true
-    }) : e[r] = t, e;
-  }
-  function ownKeys(e, r) {
-    var t = Object.keys(e);
-    if (Object.getOwnPropertySymbols) {
-      var o = Object.getOwnPropertySymbols(e);
-      r && (o = o.filter(function (r) {
-        return Object.getOwnPropertyDescriptor(e, r).enumerable;
-      })), t.push.apply(t, o);
-    }
-    return t;
-  }
-  function _objectSpread2(e) {
-    for (var r = 1; r < arguments.length; r++) {
-      var t = null != arguments[r] ? arguments[r] : {};
-      r % 2 ? ownKeys(Object(t), true).forEach(function (r) {
-        _defineProperty(e, r, t[r]);
-      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {
-        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
-      });
-    }
-    return e;
-  }
-  function _toPrimitive(t, r) {
-    if ("object" != typeof t || !t) return t;
-    var e = t[Symbol.toPrimitive];
-    if (void 0 !== e) {
-      var i = e.call(t, r);
-      if ("object" != typeof i) return i;
-      throw new TypeError("@@toPrimitive must return a primitive value.");
-    }
-    return ("string" === r ? String : Number)(t);
-  }
-  function _toPropertyKey(t) {
-    var i = _toPrimitive(t, "string");
-    return "symbol" == typeof i ? i : i + "";
-  }
-  function _typeof(o) {
-    "@babel/helpers - typeof";
-
-    return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
-      return typeof o;
-    } : function (o) {
-      return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
-    }, _typeof(o);
-  }
-  function _unsupportedIterableToArray(r, a) {
-    if (r) {
-      if ("string" == typeof r) return _arrayLikeToArray(r, a);
-      var t = {}.toString.call(r).slice(8, -1);
-      return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
-    }
-  }
-
-  var WorkerHandler = {exports: {}};
-
-  var validateOptions = {};
+  var validateOptions$1 = {};
 
   /**
    * Validate that the object only contains known option names
@@ -473,44 +559,38 @@
    * @param {string} objectName
    * @retrun {Object} Returns the original options
    */
-  var hasRequiredValidateOptions;
-  function requireValidateOptions() {
-    if (hasRequiredValidateOptions) return validateOptions;
-    hasRequiredValidateOptions = 1;
-    validateOptions.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {
-      if (!options) {
-        return;
-      }
-      var optionNames = options ? Object.keys(options) : [];
-
-      // check for unknown properties
-      var unknownOptionName = optionNames.find(function (optionName) {
-        return !allowedOptionNames.includes(optionName);
-      });
-      if (unknownOptionName) {
-        throw new Error('Object "' + objectName + '" contains an unknown option "' + unknownOptionName + '"');
-      }
+  validateOptions$1.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {
+    if (!options) {
+      return;
+    }
+    var optionNames = options ? Object.keys(options) : [];
+
+    // check for unknown properties
+    var unknownOptionName = optionNames.find(function (optionName) {
+      return !allowedOptionNames.includes(optionName);
+    });
+    if (unknownOptionName) {
+      throw new Error('Object "' + objectName + '" contains an unknown option "' + unknownOptionName + '"');
+    }
 
-      // check for inherited properties which are not present on the object itself
-      var illegalOptionName = allowedOptionNames.find(function (allowedOptionName) {
-        return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName);
-      });
-      if (illegalOptionName) {
-        throw new Error('Object "' + objectName + '" contains an inherited option "' + illegalOptionName + '" which is ' + 'not defined in the object itself but in its prototype. Only plain objects are allowed. ' + 'Please remove the option from the prototype or override it with a value "undefined".');
-      }
-      return options;
-    };
+    // check for inherited properties which are not present on the object itself
+    var illegalOptionName = allowedOptionNames.find(function (allowedOptionName) {
+      return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName);
+    });
+    if (illegalOptionName) {
+      throw new Error('Object "' + objectName + '" contains an inherited option "' + illegalOptionName + '" which is ' + 'not defined in the object itself but in its prototype. Only plain objects are allowed. ' + 'Please remove the option from the prototype or override it with a value "undefined".');
+    }
+    return options;
+  };
 
-    // source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker
-    validateOptions.workerOptsNames = ['credentials', 'name', 'type'];
+  // source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker
+  validateOptions$1.workerOptsNames = ['credentials', 'name', 'type'];
 
-    // source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options
-    validateOptions.forkOptsNames = ['cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization', 'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments', 'timeout'];
+  // source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options
+  validateOptions$1.forkOptsNames = ['cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization', 'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments', 'timeout'];
 
-    // source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options
-    validateOptions.workerThreadOptsNames = ['argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData', 'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'];
-    return validateOptions;
-  }
+  // source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options
+  validateOptions$1.workerThreadOptsNames = ['argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData', 'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'];
 
   /**
    * embeddedWorker.js contains an embedded version of worker.js.
@@ -526,626 +606,639 @@
     return embeddedWorker;
   }
 
-  var hasRequiredWorkerHandler;
-  function requireWorkerHandler() {
-    if (hasRequiredWorkerHandler) return WorkerHandler.exports;
-    hasRequiredWorkerHandler = 1;
-    var _require$$ = require_Promise(),
-      Promise = _require$$.Promise;
-    var environment = environmentExports;
-    var _require$$2 = requireValidateOptions(),
-      validateOptions = _require$$2.validateOptions,
-      forkOptsNames = _require$$2.forkOptsNames,
-      workerThreadOptsNames = _require$$2.workerThreadOptsNames,
-      workerOptsNames = _require$$2.workerOptsNames;
+  var _require$$$1 = require_Promise(),
+    Promise$2 = _require$$$1.Promise;
+  var environment = environmentExports;
+  var validateOptions = validateOptions$1.validateOptions,
+    forkOptsNames = validateOptions$1.forkOptsNames,
+    workerThreadOptsNames = validateOptions$1.workerThreadOptsNames,
+    workerOptsNames = validateOptions$1.workerOptsNames;
 
-    /**
-     * Special message sent by parent which causes a child process worker to terminate itself.
-     * Not a "message object"; this string is the entire message.
-     */
-    var TERMINATE_METHOD_ID = '__workerpool-terminate__';
+  /**
+   * Special message sent by parent which causes a child process worker to terminate itself.
+   * Not a "message object"; this string is the entire message.
+   */
+  var TERMINATE_METHOD_ID = '__workerpool-terminate__';
 
-    /**
-     * Special message by parent which causes a child process worker to perform cleaup
-     * steps before determining if the child process worker should be terminated.
-     */
-    var CLEANUP_METHOD_ID = '__workerpool-cleanup__';
-    function ensureWorkerThreads() {
-      var WorkerThreads = tryRequireWorkerThreads();
-      if (!WorkerThreads) {
-        throw new Error('WorkerPool: workerType = \'thread\' is not supported, Node >= 11.7.0 required');
-      }
-      return WorkerThreads;
+  /**
+   * Special message by parent which causes a child process worker to perform cleaup
+   * steps before determining if the child process worker should be terminated.
+   */
+  var CLEANUP_METHOD_ID = '__workerpool-cleanup__';
+  function ensureWorkerThreads() {
+    var WorkerThreads = tryRequireWorkerThreads();
+    if (!WorkerThreads) {
+      throw new Error('WorkerPool: workerType = \'thread\' is not supported, Node >= 11.7.0 required');
     }
+    return WorkerThreads;
+  }
 
-    // check whether Worker is supported by the browser
-    function ensureWebWorker() {
-      // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534
-      if (typeof Worker !== 'function' && ((typeof Worker === "undefined" ? "undefined" : _typeof(Worker)) !== 'object' || typeof Worker.prototype.constructor !== 'function')) {
-        throw new Error('WorkerPool: Web Workers not supported');
-      }
+  // check whether Worker is supported by the browser
+  function ensureWebWorker() {
+    // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534
+    if (typeof Worker !== 'function' && ((typeof Worker === "undefined" ? "undefined" : _typeof(Worker)) !== 'object' || typeof Worker.prototype.constructor !== 'function')) {
+      throw new Error('WorkerPool: Web Workers not supported');
     }
-    function tryRequireWorkerThreads() {
-      try {
-        return require('worker_threads');
-      } catch (error) {
-        if (_typeof(error) === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {
-          // no worker_threads available (old version of node.js)
-          return null;
-        } else {
-          throw error;
-        }
+  }
+  function tryRequireWorkerThreads() {
+    try {
+      return require('worker_threads');
+    } catch (error) {
+      if (_typeof(error) === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {
+        // no worker_threads available (old version of node.js)
+        return null;
+      } else {
+        throw error;
       }
     }
+  }
 
-    // get the default worker script
-    function getDefaultWorker() {
-      if (environment.platform === 'browser') {
-        // test whether the browser supports all features that we need
-        if (typeof Blob === 'undefined') {
-          throw new Error('Blob not supported by the browser');
-        }
-        if (!window.URL || typeof window.URL.createObjectURL !== 'function') {
-          throw new Error('URL.createObjectURL not supported by the browser');
-        }
-
-        // use embedded worker.js
-        var blob = new Blob([requireEmbeddedWorker()], {
-          type: 'text/javascript'
-        });
-        return window.URL.createObjectURL(blob);
-      } else {
-        // use external worker.js in current directory
-        return __dirname + '/worker.js';
+  // get the default worker script
+  function getDefaultWorker() {
+    if (environment.platform === 'browser') {
+      // test whether the browser supports all features that we need
+      if (typeof Blob === 'undefined') {
+        throw new Error('Blob not supported by the browser');
+      }
+      if (!window.URL || typeof window.URL.createObjectURL !== 'function') {
+        throw new Error('URL.createObjectURL not supported by the browser');
       }
+
+      // use embedded worker.js
+      var blob = new Blob([requireEmbeddedWorker()], {
+        type: 'text/javascript'
+      });
+      return window.URL.createObjectURL(blob);
+    } else {
+      // use external worker.js in current directory
+      return __dirname + '/worker.js';
     }
-    function setupWorker(script, options) {
-      if (options.workerType === 'web') {
-        // browser only
+  }
+  function setupWorker(script, options) {
+    if (options.workerType === 'web') {
+      // browser only
+      ensureWebWorker();
+      return setupBrowserWorker(script, options.workerOpts, Worker);
+    } else if (options.workerType === 'thread') {
+      // node.js only
+      WorkerThreads = ensureWorkerThreads();
+      return setupWorkerThreadWorker(script, WorkerThreads, options);
+    } else if (options.workerType === 'process' || !options.workerType) {
+      // node.js only
+      return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));
+    } else {
+      // options.workerType === 'auto' or undefined
+      if (environment.platform === 'browser') {
         ensureWebWorker();
         return setupBrowserWorker(script, options.workerOpts, Worker);
-      } else if (options.workerType === 'thread') {
-        // node.js only
-        WorkerThreads = ensureWorkerThreads();
-        return setupWorkerThreadWorker(script, WorkerThreads, options);
-      } else if (options.workerType === 'process' || !options.workerType) {
-        // node.js only
-        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));
       } else {
-        // options.workerType === 'auto' or undefined
-        if (environment.platform === 'browser') {
-          ensureWebWorker();
-          return setupBrowserWorker(script, options.workerOpts, Worker);
+        // environment.platform === 'node'
+        var WorkerThreads = tryRequireWorkerThreads();
+        if (WorkerThreads) {
+          return setupWorkerThreadWorker(script, WorkerThreads, options);
         } else {
-          // environment.platform === 'node'
-          var WorkerThreads = tryRequireWorkerThreads();
-          if (WorkerThreads) {
-            return setupWorkerThreadWorker(script, WorkerThreads, options);
-          } else {
-            return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));
-          }
+          return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));
         }
       }
     }
-    function setupBrowserWorker(script, workerOpts, Worker) {
-      // validate the options right before creating the worker (not when creating the pool)
-      validateOptions(workerOpts, workerOptsNames, 'workerOpts');
-
-      // create the web worker
-      var worker = new Worker(script, workerOpts);
-      worker.isBrowserWorker = true;
-      // add node.js API to the web worker
-      worker.on = function (event, callback) {
-        this.addEventListener(event, function (message) {
-          callback(message.data);
-        });
-      };
-      worker.send = function (message, transfer) {
-        this.postMessage(message, transfer);
-      };
-      return worker;
-    }
-    function setupWorkerThreadWorker(script, WorkerThreads, options) {
-      var _options$emitStdStrea, _options$emitStdStrea2;
-      // validate the options right before creating the worker thread (not when creating the pool)
-      validateOptions(options === null || options === void 0 ? void 0 : options.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts');
-      var worker = new WorkerThreads.Worker(script, _objectSpread2({
-        stdout: (_options$emitStdStrea = options === null || options === void 0 ? void 0 : options.emitStdStreams) !== null && _options$emitStdStrea !== void 0 ? _options$emitStdStrea : false,
-        // pipe worker.STDOUT to process.STDOUT if not requested
-        stderr: (_options$emitStdStrea2 = options === null || options === void 0 ? void 0 : options.emitStdStreams) !== null && _options$emitStdStrea2 !== void 0 ? _options$emitStdStrea2 : false
-      }, options === null || options === void 0 ? void 0 : options.workerThreadOpts));
-      worker.isWorkerThread = true;
-      worker.send = function (message, transfer) {
-        this.postMessage(message, transfer);
-      };
-      worker.kill = function () {
-        this.terminate();
-        return true;
-      };
-      worker.disconnect = function () {
-        this.terminate();
-      };
-      if (options !== null && options !== void 0 && options.emitStdStreams) {
-        worker.stdout.on('data', function (data) {
-          return worker.emit("stdout", data);
-        });
-        worker.stderr.on('data', function (data) {
-          return worker.emit("stderr", data);
-        });
-      }
-      return worker;
+  }
+  function setupBrowserWorker(script, workerOpts, Worker) {
+    // validate the options right before creating the worker (not when creating the pool)
+    validateOptions(workerOpts, workerOptsNames, 'workerOpts');
+
+    // create the web worker
+    var worker = new Worker(script, workerOpts);
+    worker.isBrowserWorker = true;
+    // add node.js API to the web worker
+    worker.on = function (event, callback) {
+      this.addEventListener(event, function (message) {
+        callback(message.data);
+      });
+    };
+    worker.send = function (message, transfer) {
+      this.postMessage(message, transfer);
+    };
+    return worker;
+  }
+  function setupWorkerThreadWorker(script, WorkerThreads, options) {
+    var _options$emitStdStrea, _options$emitStdStrea2;
+    // validate the options right before creating the worker thread (not when creating the pool)
+    validateOptions(options === null || options === void 0 ? void 0 : options.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts');
+    var worker = new WorkerThreads.Worker(script, _objectSpread2({
+      stdout: (_options$emitStdStrea = options === null || options === void 0 ? void 0 : options.emitStdStreams) !== null && _options$emitStdStrea !== void 0 ? _options$emitStdStrea : false,
+      // pipe worker.STDOUT to process.STDOUT if not requested
+      stderr: (_options$emitStdStrea2 = options === null || options === void 0 ? void 0 : options.emitStdStreams) !== null && _options$emitStdStrea2 !== void 0 ? _options$emitStdStrea2 : false
+    }, options === null || options === void 0 ? void 0 : options.workerThreadOpts));
+    worker.isWorkerThread = true;
+    worker.send = function (message, transfer) {
+      this.postMessage(message, transfer);
+    };
+    worker.kill = function () {
+      this.terminate();
+      return true;
+    };
+    worker.disconnect = function () {
+      this.terminate();
+    };
+    if (options !== null && options !== void 0 && options.emitStdStreams) {
+      worker.stdout.on('data', function (data) {
+        return worker.emit("stdout", data);
+      });
+      worker.stderr.on('data', function (data) {
+        return worker.emit("stderr", data);
+      });
     }
-    function setupProcessWorker(script, options, child_process) {
-      // validate the options right before creating the child process (not when creating the pool)
-      validateOptions(options.forkOpts, forkOptsNames, 'forkOpts');
-
-      // no WorkerThreads, fallback to sub-process based workers
-      var worker = child_process.fork(script, options.forkArgs, options.forkOpts);
+    return worker;
+  }
+  function setupProcessWorker(script, options, child_process) {
+    // validate the options right before creating the child process (not when creating the pool)
+    validateOptions(options.forkOpts, forkOptsNames, 'forkOpts');
 
-      // ignore transfer argument since it is not supported by process
-      var send = worker.send;
-      worker.send = function (message) {
-        return send.call(worker, message);
-      };
-      if (options.emitStdStreams) {
-        worker.stdout.on('data', function (data) {
-          return worker.emit("stdout", data);
-        });
-        worker.stderr.on('data', function (data) {
-          return worker.emit("stderr", data);
-        });
-      }
-      worker.isChildProcess = true;
-      return worker;
-    }
+    // no WorkerThreads, fallback to sub-process based workers
+    var worker = child_process.fork(script, options.forkArgs, options.forkOpts);
 
-    // add debug flags to child processes if the node inspector is active
-    function resolveForkOptions(opts) {
-      opts = opts || {};
-      var processExecArgv = process.execArgv.join(' ');
-      var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;
-      var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;
-      var execArgv = [];
-      if (inspectorActive) {
-        execArgv.push('--inspect=' + opts.debugPort);
-        if (debugBrk) {
-          execArgv.push('--debug-brk');
-        }
-      }
-      process.execArgv.forEach(function (arg) {
-        if (arg.indexOf('--max-old-space-size') > -1) {
-          execArgv.push(arg);
-        }
+    // ignore transfer argument since it is not supported by process
+    var send = worker.send;
+    worker.send = function (message) {
+      return send.call(worker, message);
+    };
+    if (options.emitStdStreams) {
+      worker.stdout.on('data', function (data) {
+        return worker.emit("stdout", data);
       });
-      return Object.assign({}, opts, {
-        forkArgs: opts.forkArgs,
-        forkOpts: Object.assign({}, opts.forkOpts, {
-          execArgv: (opts.forkOpts && opts.forkOpts.execArgv || []).concat(execArgv),
-          stdio: opts.emitStdStreams ? "pipe" : undefined
-        })
+      worker.stderr.on('data', function (data) {
+        return worker.emit("stderr", data);
       });
     }
+    worker.isChildProcess = true;
+    return worker;
+  }
 
-    /**
-     * Converts a serialized error to Error
-     * @param {Object} obj Error that has been serialized and parsed to object
-     * @return {Error} The equivalent Error.
-     */
-    function objectToError(obj) {
-      var temp = new Error('');
-      var props = Object.keys(obj);
-      for (var i = 0; i < props.length; i++) {
-        temp[props[i]] = obj[props[i]];
+  // add debug flags to child processes if the node inspector is active
+  function resolveForkOptions(opts) {
+    opts = opts || {};
+    var processExecArgv = process.execArgv.join(' ');
+    var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;
+    var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;
+    var execArgv = [];
+    if (inspectorActive) {
+      execArgv.push('--inspect=' + opts.debugPort);
+      if (debugBrk) {
+        execArgv.push('--debug-brk');
       }
-      return temp;
     }
-    function handleEmittedStdPayload(handler, payload) {
-      // TODO: refactor if parallel task execution gets added
-      Object.values(handler.processing).forEach(function (task) {
-        var _task$options;
-        return task === null || task === void 0 || (_task$options = task.options) === null || _task$options === void 0 ? void 0 : _task$options.on(payload);
-      });
-      Object.values(handler.tracking).forEach(function (task) {
-        var _task$options2;
-        return task === null || task === void 0 || (_task$options2 = task.options) === null || _task$options2 === void 0 ? void 0 : _task$options2.on(payload);
-      });
+    process.execArgv.forEach(function (arg) {
+      if (arg.indexOf('--max-old-space-size') > -1) {
+        execArgv.push(arg);
+      }
+    });
+    return Object.assign({}, opts, {
+      forkArgs: opts.forkArgs,
+      forkOpts: Object.assign({}, opts.forkOpts, {
+        execArgv: (opts.forkOpts && opts.forkOpts.execArgv || []).concat(execArgv),
+        stdio: opts.emitStdStreams ? "pipe" : undefined
+      })
+    });
+  }
+
+  /**
+   * Converts a serialized error to Error
+   * @param {Object} obj Error that has been serialized and parsed to object
+   * @return {Error} The equivalent Error.
+   */
+  function objectToError(obj) {
+    var temp = new Error('');
+    var props = Object.keys(obj);
+    for (var i = 0; i < props.length; i++) {
+      temp[props[i]] = obj[props[i]];
     }
+    return temp;
+  }
+  function handleEmittedStdPayload(handler, payload) {
+    // TODO: refactor if parallel task execution gets added
+    Object.values(handler.processing).forEach(function (task) {
+      var _task$options;
+      return task === null || task === void 0 || (_task$options = task.options) === null || _task$options === void 0 ? void 0 : _task$options.on(payload);
+    });
+    Object.values(handler.tracking).forEach(function (task) {
+      var _task$options2;
+      return task === null || task === void 0 || (_task$options2 = task.options) === null || _task$options2 === void 0 ? void 0 : _task$options2.on(payload);
+    });
+  }
 
-    /**
-     * A WorkerHandler controls a single worker. This worker can be a child process
-     * on node.js or a WebWorker in a browser environment.
-     * @param {String} [script] If no script is provided, a default worker with a
-     *                          function run will be created.
-     * @param {import('./types.js').WorkerPoolOptions} [_options] See docs
-     * @constructor
-     */
-    function WorkerHandler$1(script, _options) {
-      var me = this;
-      var options = _options || {};
-      this.script = script || getDefaultWorker();
-      this.worker = setupWorker(this.script, options);
-      this.debugPort = options.debugPort;
-      this.forkOpts = options.forkOpts;
-      this.forkArgs = options.forkArgs;
-      this.workerOpts = options.workerOpts;
-      this.workerThreadOpts = options.workerThreadOpts;
-      this.workerTerminateTimeout = options.workerTerminateTimeout;
-
-      // The ready message is only sent if the worker.add method is called (And the default script is not used)
-      if (!script) {
-        this.worker.ready = true;
-      }
+  /**
+   * A WorkerHandler controls a single worker. This worker can be a child process
+   * on node.js or a WebWorker in a browser environment.
+   * @param {String} [script] If no script is provided, a default worker with a
+   *                          function run will be created.
+   * @param {import('./types.js').WorkerPoolOptions} [_options] See docs
+   * @constructor
+   */
+  function WorkerHandler(script, _options) {
+    var me = this;
+    var options = _options || {};
+    this.script = script || getDefaultWorker();
+    this.worker = setupWorker(this.script, options);
+    this.debugPort = options.debugPort;
+    this.forkOpts = options.forkOpts;
+    this.forkArgs = options.forkArgs;
+    this.workerOpts = options.workerOpts;
+    this.workerThreadOpts = options.workerThreadOpts;
+    this.workerTerminateTimeout = options.workerTerminateTimeout;
+
+    // The ready message is only sent if the worker.add method is called (And the default script is not used)
+    if (!script) {
+      this.worker.ready = true;
+    }
 
-      // queue for requests that are received before the worker is ready
-      this.requestQueue = [];
-      this.worker.on("stdout", function (data) {
-        handleEmittedStdPayload(me, {
-          "stdout": data.toString()
-        });
+    // queue for requests that are received before the worker is ready
+    this.requestQueue = [];
+    this.worker.on("stdout", function (data) {
+      handleEmittedStdPayload(me, {
+        "stdout": data.toString()
       });
-      this.worker.on("stderr", function (data) {
-        handleEmittedStdPayload(me, {
-          "stderr": data.toString()
-        });
+    });
+    this.worker.on("stderr", function (data) {
+      handleEmittedStdPayload(me, {
+        "stderr": data.toString()
       });
-      this.worker.on('message', function (response) {
-        if (me.terminated) {
-          return;
-        }
-        if (typeof response === 'string' && response === 'ready') {
-          me.worker.ready = true;
-          dispatchQueuedRequests();
+    });
+    this.worker.on('message', function (response) {
+      if (me.terminated) {
+        return;
+      }
+      if (typeof response === 'string' && response === 'ready') {
+        me.worker.ready = true;
+        dispatchQueuedRequests();
+      } else {
+        // find the task from the processing queue, and run the tasks callback
+        var id = response.id;
+        var task = me.processing[id];
+        if (task !== undefined) {
+          if (response.isEvent) {
+            if (task.options && typeof task.options.on === 'function') {
+              task.options.on(response.payload);
+            }
+          } else {
+            // remove the task from the queue
+            delete me.processing[id];
+
+            // test if we need to terminate
+            if (me.terminating === true) {
+              // complete worker termination if all tasks are finished
+              me.terminate();
+            }
+
+            // resolve the task's promise
+            if (response.error) {
+              task.resolver.reject(objectToError(response.error));
+            } else {
+              task.resolver.resolve(response.result);
+            }
+          }
         } else {
-          // find the task from the processing queue, and run the tasks callback
-          var id = response.id;
-          var task = me.processing[id];
+          // if the task is not the current, it might be tracked for cleanup
+          var task = me.tracking[id];
           if (task !== undefined) {
             if (response.isEvent) {
               if (task.options && typeof task.options.on === 'function') {
                 task.options.on(response.payload);
               }
-            } else {
-              // remove the task from the queue
-              delete me.processing[id];
-
-              // test if we need to terminate
-              if (me.terminating === true) {
-                // complete worker termination if all tasks are finished
-                me.terminate();
-              }
-
-              // resolve the task's promise
-              if (response.error) {
-                task.resolver.reject(objectToError(response.error));
-              } else {
-                task.resolver.resolve(response.result);
-              }
-            }
-          } else {
-            // if the task is not the current, it might be tracked for cleanup
-            var task = me.tracking[id];
-            if (task !== undefined) {
-              if (response.isEvent) {
-                if (task.options && typeof task.options.on === 'function') {
-                  task.options.on(response.payload);
-                }
-              }
             }
           }
-          if (response.method === CLEANUP_METHOD_ID) {
-            var trackedTask = me.tracking[response.id];
-            if (trackedTask !== undefined) {
-              if (response.error) {
-                clearTimeout(trackedTask.timeoutId);
-                trackedTask.resolver.reject(objectToError(response.error));
-              } else {
-                me.tracking && clearTimeout(trackedTask.timeoutId);
-                // if we do not encounter an error wrap the the original timeout error and reject
-                trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));
-              }
+        }
+        if (response.method === CLEANUP_METHOD_ID) {
+          var trackedTask = me.tracking[response.id];
+          if (trackedTask !== undefined) {
+            if (response.error) {
+              clearTimeout(trackedTask.timeoutId);
+              trackedTask.resolver.reject(objectToError(response.error));
+            } else {
+              me.tracking && clearTimeout(trackedTask.timeoutId);
+              // if we do not encounter an error wrap the the original timeout error and reject
+              trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));
             }
-            delete me.tracking[id];
           }
+          delete me.tracking[id];
         }
-      });
-
-      // reject all running tasks on worker error
-      function onError(error) {
-        me.terminated = true;
-        for (var id in me.processing) {
-          if (me.processing[id] !== undefined) {
-            me.processing[id].resolver.reject(error);
-          }
+      }
+    });
+
+    // reject all running tasks on worker error
+    function onError(error) {
+      me.terminated = true;
+      for (var id in me.processing) {
+        if (me.processing[id] !== undefined) {
+          me.processing[id].resolver.reject(error);
         }
-        me.processing = Object.create(null);
       }
+      me.processing = Object.create(null);
+    }
 
-      // send all queued requests to worker
-      function dispatchQueuedRequests() {
-        var _iterator = _createForOfIteratorHelper(me.requestQueue.splice(0)),
-          _step;
-        try {
-          for (_iterator.s(); !(_step = _iterator.n()).done;) {
-            var request = _step.value;
-            me.worker.send(request.message, request.transfer);
-          }
-        } catch (err) {
-          _iterator.e(err);
-        } finally {
-          _iterator.f();
+    // send all queued requests to worker
+    function dispatchQueuedRequests() {
+      var _iterator = _createForOfIteratorHelper(me.requestQueue.splice(0)),
+        _step;
+      try {
+        for (_iterator.s(); !(_step = _iterator.n()).done;) {
+          var request = _step.value;
+          me.worker.send(request.message, request.transfer);
         }
+      } catch (err) {
+        _iterator.e(err);
+      } finally {
+        _iterator.f();
       }
-      var worker = this.worker;
-      // listen for worker messages error and exit
-      this.worker.on('error', onError);
-      this.worker.on('exit', function (exitCode, signalCode) {
-        var message = 'Workerpool Worker terminated Unexpectedly\n';
-        message += '    exitCode: `' + exitCode + '`\n';
-        message += '    signalCode: `' + signalCode + '`\n';
-        message += '    workerpool.script: `' + me.script + '`\n';
-        message += '    spawnArgs: `' + worker.spawnargs + '`\n';
-        message += '    spawnfile: `' + worker.spawnfile + '`\n';
-        message += '    stdout: `' + worker.stdout + '`\n';
-        message += '    stderr: `' + worker.stderr + '`\n';
-        onError(new Error(message));
-      });
-      this.processing = Object.create(null); // queue with tasks currently in progress
-      this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status
-      this.terminating = false;
-      this.terminated = false;
-      this.cleaning = false;
-      this.terminationHandler = null;
-      this.lastId = 0;
     }
+    var worker = this.worker;
+    // listen for worker messages error and exit
+    this.worker.on('error', function (error) {
+      onError(new TerminateError$1('Workerpool Worker error: ' + error.message, error));
+    });
+    this.worker.on('exit', function (exitCode, signalCode) {
+      var message = 'Workerpool Worker terminated Unexpectedly\n';
+      message += '    exitCode: `' + exitCode + '`\n';
+      message += '    signalCode: `' + signalCode + '`\n';
+      message += '    workerpool.script: `' + me.script + '`\n';
+      message += '    spawnArgs: `' + worker.spawnargs + '`\n';
+      message += '    spawnfile: `' + worker.spawnfile + '`\n';
+      message += '    stdout: `' + worker.stdout + '`\n';
+      message += '    stderr: `' + worker.stderr + '`\n';
+      onError(new TerminateError$1(message));
+    });
+    this.processing = Object.create(null); // queue with tasks currently in progress
+    this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status
+    this.terminating = false;
+    this.terminated = false;
+    this.cleaning = false;
+    this.terminationHandler = null;
+    this.lastId = 0;
+  }
 
-    /**
-     * Get a list with methods available on the worker.
-     * @return {Promise.<String[], Error>} methods
-     */
-    WorkerHandler$1.prototype.methods = function () {
-      return this.exec('methods');
-    };
+  /**
+   * Get a list with methods available on the worker.
+   * @return {Promise.<String[], Error>} methods
+   */
+  WorkerHandler.prototype.methods = function () {
+    return this.exec('methods');
+  };
 
-    /**
-     * Execute a method with given parameters on the worker
-     * @param {String} method
-     * @param {Array} [params]
-     * @param {{resolve: Function, reject: Function}} [resolver]
-     * @param {import('./types.js').ExecOptions}  [options]
-     * @return {Promise.<*, Error>} result
-     */
-    WorkerHandler$1.prototype.exec = function (method, params, resolver, options) {
-      if (!resolver) {
-        resolver = Promise.defer();
-      }
+  /**
+   * Execute a method with given parameters on the worker
+   * @param {String} method
+   * @param {Array} [params]
+   * @param {{resolve: Function, reject: Function}} [resolver]
+   * @param {import('./types.js').ExecOptions}  [options]
+   * @return {Promise.<*, Error>} result
+   */
+  WorkerHandler.prototype.exec = function (method, params, resolver, options) {
+    if (!resolver) {
+      resolver = Promise$2.defer();
+    }
 
-      // generate a unique id for the task
-      var id = ++this.lastId;
+    // generate a unique id for the task
+    var id = ++this.lastId;
+
+    // register a new task as being in progress
+    this.processing[id] = {
+      id: id,
+      resolver: resolver,
+      options: options
+    };
 
-      // register a new task as being in progress
-      this.processing[id] = {
+    // build a JSON-RPC request
+    var request = {
+      message: {
         id: id,
-        resolver: resolver,
-        options: options
-      };
+        method: method,
+        params: params
+      },
+      transfer: options && options.transfer
+    };
+    if (this.terminated) {
+      resolver.reject(new TerminateError$1('Worker is terminated'));
+    } else if (this.worker.ready) {
+      // send the request to the worker
+      this.worker.send(request.message, request.transfer);
+    } else {
+      this.requestQueue.push(request);
+    }
 
-      // build a JSON-RPC request
-      var request = {
-        message: {
+    // on cancellation, force the worker to terminate
+    var me = this;
+    return resolver.promise.catch(function (error) {
+      if (error instanceof Promise$2.CancellationError || error instanceof Promise$2.TimeoutError) {
+        me.tracking[id] = {
           id: id,
-          method: method,
-          params: params
-        },
-        transfer: options && options.transfer
-      };
-      if (this.terminated) {
-        resolver.reject(new Error('Worker is terminated'));
-      } else if (this.worker.ready) {
-        // send the request to the worker
-        this.worker.send(request.message, request.transfer);
-      } else {
-        this.requestQueue.push(request);
-      }
-
-      // on cancellation, force the worker to terminate
-      var me = this;
-      return resolver.promise.catch(function (error) {
-        if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {
-          me.tracking[id] = {
-            id: id,
-            resolver: Promise.defer(),
-            options: options,
-            error: error
-          };
+          resolver: Promise$2.defer(),
+          options: options,
+          error: error
+        };
 
-          // remove this task from the queue. It is already rejected (hence this
-          // catch event), and else it will be rejected again when terminating
-          delete me.processing[id];
-          me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function (err) {
-            delete me.tracking[id];
-
-            // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination
-            // as the response from the worker did not contain an error. We still wish to throw the original timeout error
-            // to the caller.
-            if (err instanceof WrappedTimeoutError) {
-              throw err.error;
-            }
-            var promise = me.terminateAndNotify(true).then(function () {
-              throw err;
-            }, function (err) {
-              throw err;
-            });
-            return promise;
-          });
-          me.worker.send({
-            id: id,
-            method: CLEANUP_METHOD_ID
+        // remove this task from the queue. It is already rejected (hence this
+        // catch event), and else it will be rejected again when terminating
+        delete me.processing[id];
+        me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function (err) {
+          delete me.tracking[id];
+
+          // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination
+          // as the response from the worker did not contain an error. We still wish to throw the original timeout error
+          // to the caller.
+          if (err instanceof WrappedTimeoutError) {
+            throw err.error;
+          }
+          var promise = me.terminateAndNotify(true).then(function () {
+            throw err;
+          }, function (err) {
+            throw err;
           });
+          return promise;
+        });
+        me.worker.send({
+          id: id,
+          method: CLEANUP_METHOD_ID
+        });
 
-          /**
-            * Sets a timeout to reject the cleanup operation if the message sent to the worker
-            * does not receive a response. see worker.tryCleanup for worker cleanup operations.
-            * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.
-            * 
-            * We need this timeout in either case of a Timeout or Cancellation Error as if
-            * the worker does not send a message we still need to give a window of time for a response.
-            * 
-            * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup
-            * operations will occure.
-          */
-          me.tracking[id].timeoutId = setTimeout(function () {
-            me.tracking[id].resolver.reject(error);
-          }, me.workerTerminateTimeout);
-          return me.tracking[id].resolver.promise;
-        } else {
-          throw error;
-        }
-      });
-    };
+        /**
+          * Sets a timeout to reject the cleanup operation if the message sent to the worker
+          * does not receive a response. see worker.tryCleanup for worker cleanup operations.
+          * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.
+          * 
+          * We need this timeout in either case of a Timeout or Cancellation Error as if
+          * the worker does not send a message we still need to give a window of time for a response.
+          * 
+          * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup
+          * operations will occure.
+        */
+        me.tracking[id].timeoutId = setTimeout(function () {
+          me.tracking[id].resolver.reject(error);
+        }, me.workerTerminateTimeout);
+        return me.tracking[id].resolver.promise;
+      } else {
+        throw error;
+      }
+    });
+  };
 
-    /**
-     * Test whether the worker is processing any tasks or cleaning up before termination.
-     * @return {boolean} Returns true if the worker is busy
-     */
-    WorkerHandler$1.prototype.busy = function () {
-      return this.cleaning || Object.keys(this.processing).length > 0;
-    };
+  /**
+   * Test whether the worker is processing any tasks or cleaning up before termination.
+   * @return {boolean} Returns true if the worker is busy
+   */
+  WorkerHandler.prototype.busy = function () {
+    return this.cleaning || Object.keys(this.processing).length > 0;
+  };
 
-    /**
-     * Terminate the worker.
-     * @param {boolean} [force=false]   If false (default), the worker is terminated
-     *                                  after finishing all tasks currently in
-     *                                  progress. If true, the worker will be
-     *                                  terminated immediately.
-     * @param {function} [callback=null] If provided, will be called when process terminates.
-     */
-    WorkerHandler$1.prototype.terminate = function (force, callback) {
-      var me = this;
-      if (force) {
-        // cancel all tasks in progress
-        for (var id in this.processing) {
-          if (this.processing[id] !== undefined) {
-            this.processing[id].resolver.reject(new Error('Worker terminated'));
-          }
+  /**
+   * Terminate the worker.
+   * @param {boolean} [force=false]   If false (default), the worker is terminated
+   *                                  after finishing all tasks currently in
+   *                                  progress. If true, the worker will be
+   *                                  terminated immediately.
+   * @param {function} [callback=null] If provided, will be called when process terminates.
+   */
+  WorkerHandler.prototype.terminate = function (force, callback) {
+    var me = this;
+    if (force) {
+      // cancel all tasks in progress
+      for (var id in this.processing) {
+        if (this.processing[id] !== undefined) {
+          this.processing[id].resolver.reject(new Error('Worker terminated'));
         }
-        this.processing = Object.create(null);
       }
+      this.processing = Object.create(null);
+    }
 
-      // If we are terminating, cancel all tracked task for cleanup
-      for (var _i = 0, _Object$values = Object.values(me.tracking); _i < _Object$values.length; _i++) {
-        var task = _Object$values[_i];
-        clearTimeout(task.timeoutId);
-        task.resolver.reject(new Error('Worker Terminating'));
-      }
-      me.tracking = Object.create(null);
-      if (typeof callback === 'function') {
-        this.terminationHandler = callback;
-      }
-      if (!this.busy()) {
-        // all tasks are finished. kill the worker
-        var cleanup = function cleanup(err) {
-          me.terminated = true;
-          me.cleaning = false;
-          if (me.worker != null && me.worker.removeAllListeners) {
-            // removeAllListeners is only available for child_process
-            me.worker.removeAllListeners('message');
-          }
-          me.worker = null;
-          me.terminating = false;
-          if (me.terminationHandler) {
-            me.terminationHandler(err, me);
-          } else if (err) {
-            throw err;
+    // If we are terminating, cancel all tracked task for cleanup
+    for (var _i = 0, _Object$values = Object.values(me.tracking); _i < _Object$values.length; _i++) {
+      var task = _Object$values[_i];
+      clearTimeout(task.timeoutId);
+      task.resolver.reject(new Error('Worker Terminating'));
+    }
+    me.tracking = Object.create(null);
+    if (typeof callback === 'function') {
+      this.terminationHandler = callback;
+    }
+    if (!this.busy()) {
+      // all tasks are finished. kill the worker
+      var cleanup = function cleanup(err) {
+        me.terminated = true;
+        me.cleaning = false;
+        if (me.worker != null && me.worker.removeAllListeners) {
+          // removeAllListeners is only available for child_process
+          me.worker.removeAllListeners('message');
+        }
+        me.worker = null;
+        me.terminating = false;
+        if (me.terminationHandler) {
+          me.terminationHandler(err, me);
+        } else if (err) {
+          throw err;
+        }
+      };
+      if (this.worker) {
+        if (typeof this.worker.kill === 'function') {
+          if (this.worker.killed) {
+            cleanup(new Error('worker already killed!'));
+            return;
           }
-        };
-        if (this.worker) {
-          if (typeof this.worker.kill === 'function') {
-            if (this.worker.killed) {
-              cleanup(new Error('worker already killed!'));
-              return;
-            }
 
-            // child process and worker threads
-            var cleanExitTimeout = setTimeout(function () {
-              if (me.worker) {
-                me.worker.kill();
-              }
-            }, this.workerTerminateTimeout);
-            this.worker.once('exit', function () {
-              clearTimeout(cleanExitTimeout);
-              if (me.worker) {
-                me.worker.killed = true;
-              }
-              cleanup();
-            });
-            if (this.worker.ready) {
-              this.worker.send(TERMINATE_METHOD_ID);
-            } else {
-              this.requestQueue.push({
-                message: TERMINATE_METHOD_ID
-              });
+          // child process and worker threads
+          var cleanExitTimeout = setTimeout(function () {
+            if (me.worker) {
+              me.worker.kill();
             }
-
-            // mark that the worker is cleaning up resources
-            // to prevent new tasks from being executed
-            this.cleaning = true;
-            return;
-          } else if (typeof this.worker.terminate === 'function') {
-            this.worker.terminate(); // web worker
-            this.worker.killed = true;
+          }, this.workerTerminateTimeout);
+          this.worker.once('exit', function () {
+            clearTimeout(cleanExitTimeout);
+            if (me.worker) {
+              me.worker.killed = true;
+            }
+            cleanup();
+          });
+          if (this.worker.ready) {
+            this.worker.send(TERMINATE_METHOD_ID);
           } else {
-            throw new Error('Failed to terminate worker');
+            this.requestQueue.push({
+              message: TERMINATE_METHOD_ID
+            });
           }
+
+          // mark that the worker is cleaning up resources
+          // to prevent new tasks from being executed
+          this.cleaning = true;
+          return;
+        } else if (typeof this.worker.terminate === 'function') {
+          this.worker.terminate(); // web worker
+          this.worker.killed = true;
+        } else {
+          throw new Error('Failed to terminate worker');
         }
-        cleanup();
-      } else {
-        // we can't terminate immediately, there are still tasks being executed
-        this.terminating = true;
       }
-    };
+      cleanup();
+    } else {
+      // we can't terminate immediately, there are still tasks being executed
+      this.terminating = true;
+    }
+  };
 
-    /**
-     * Terminate the worker, returning a Promise that resolves when the termination has been done.
-     * @param {boolean} [force=false]   If false (default), the worker is terminated
-     *                                  after finishing all tasks currently in
-     *                                  progress. If true, the worker will be
-     *                                  terminated immediately.
-     * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected
-     *                                  after timeout if worker process has not been terminated.
-     * @return {Promise.<WorkerHandler, Error>}
-     */
-    WorkerHandler$1.prototype.terminateAndNotify = function (force, timeout) {
-      var resolver = Promise.defer();
-      if (timeout) {
-        resolver.promise.timeout(timeout);
+  /**
+   * Terminate the worker, returning a Promise that resolves when the termination has been done.
+   * @param {boolean} [force=false]   If false (default), the worker is terminated
+   *                                  after finishing all tasks currently in
+   *                                  progress. If true, the worker will be
+   *                                  terminated immediately.
+   * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected
+   *                                  after timeout if worker process has not been terminated.
+   * @return {Promise.<WorkerHandler, Error>}
+   */
+  WorkerHandler.prototype.terminateAndNotify = function (force, timeout) {
+    var resolver = Promise$2.defer();
+    if (timeout) {
+      resolver.promise.timeout(timeout);
+    }
+    this.terminate(force, function (err, worker) {
+      if (err) {
+        resolver.reject(err);
+      } else {
+        resolver.resolve(worker);
       }
-      this.terminate(force, function (err, worker) {
-        if (err) {
-          resolver.reject(err);
-        } else {
-          resolver.resolve(worker);
-        }
-      });
-      return resolver.promise;
-    };
+    });
+    return resolver.promise;
+  };
 
+  /**
+  * Wrapper error type to denote that a TimeoutError has already been proceesed
+  * and we should skip cleanup operations
+  * @param {Promise.TimeoutError} timeoutError
+  */
+  function WrappedTimeoutError(timeoutError) {
+    this.error = timeoutError;
+    this.stack = new Error().stack;
+  }
+  var TerminateError$1 = /*#__PURE__*/function (_Error) {
     /**
-    * Wrapper error type to denote that a TimeoutError has already been proceesed
-    * and we should skip cleanup operations
-    * @param {Promise.TimeoutError} timeoutError
-    */
-    function WrappedTimeoutError(timeoutError) {
-      this.error = timeoutError;
-      this.stack = new Error().stack;
+     * Create a timeout error
+     * @param {String} [message]
+     * @param {Error=} [cause]
+     */
+    function TerminateError(message, cause) {
+      var _this;
+      _classCallCheck(this, TerminateError);
+      _this = _callSuper(this, TerminateError, [message || 'worker terminated']);
+      _this.cause = cause;
+      return _this;
     }
-    WorkerHandler.exports = WorkerHandler$1;
-    WorkerHandler.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;
-    WorkerHandler.exports._setupProcessWorker = setupProcessWorker;
-    WorkerHandler.exports._setupBrowserWorker = setupBrowserWorker;
-    WorkerHandler.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;
-    WorkerHandler.exports.ensureWorkerThreads = ensureWorkerThreads;
-    return WorkerHandler.exports;
-  }
+    _inherits(TerminateError, _Error);
+    return _createClass(TerminateError);
+  }(/*#__PURE__*/_wrapNativeSuper(Error));
+  WorkerHandler$1.exports = WorkerHandler;
+  WorkerHandler$1.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;
+  WorkerHandler$1.exports._setupProcessWorker = setupProcessWorker;
+  WorkerHandler$1.exports._setupBrowserWorker = setupBrowserWorker;
+  WorkerHandler$1.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;
+  WorkerHandler$1.exports.ensureWorkerThreads = ensureWorkerThreads;
+  WorkerHandler$1.exports.TerminateError = TerminateError$1;
+  var WorkerHandlerExports = WorkerHandler$1.exports;
 
   var debugPortAllocator;
   var hasRequiredDebugPortAllocator;
@@ -1183,7 +1276,7 @@
     hasRequiredPool = 1;
     var _require$$ = require_Promise(),
       Promise = _require$$.Promise;
-    var WorkerHandler = requireWorkerHandler();
+    var WorkerHandler = WorkerHandlerExports;
     var environment = environmentExports;
     var DebugPortAllocator = requireDebugPortAllocator();
     var DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();
@@ -2014,6 +2107,7 @@
   var platform = environmentExports.platform,
     isMainThread = environmentExports.isMainThread,
     cpus = environmentExports.cpus;
+  var TerminateError = WorkerHandlerExports.TerminateError;
 
   /** @typedef {import("./Pool")} Pool */
   /** @typedef {import("./types.js").WorkerPoolOptions} WorkerPoolOptions */
@@ -2070,8 +2164,10 @@
   var platform_1 = src.platform = platform;
   var isMainThread_1 = src.isMainThread = isMainThread;
   var cpus_1 = src.cpus = cpus;
+  var TerminateError_1 = src.TerminateError = TerminateError;
 
   exports.Promise = _Promise;
+  exports.TerminateError = TerminateError_1;
   exports.Transfer = Transfer;
   exports.cpus = cpus_1;
   exports.default = src;
diff --git a/dist/workerpool.js.map b/dist/workerpool.js.map
index dff072ca2455bc7938fd3e1a2ce1785c98c09c85..3e159e62918957bc65742d04834ba61cac7e42c9 100644
--- a/dist/workerpool.js.map
+++ b/dist/workerpool.js.map
@@ -1 +1 @@
-{"version":3,"file":"workerpool.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/generated/embeddedWorker.js","../src/WorkerHandler.js","../src/debug-port-allocator.js","../src/Pool.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n  /**\n   * @readonly\n   */\n  this[Symbol.toStringTag] = 'Promise';\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n  * Execute given callback when the promise either resolves or rejects.\n  * Same semantics as Node's Promise.finally()\n  * @param {Function | null | undefined} [fn]\n  * @returns {Promise} promise\n  */\nPromise.prototype.finally = function (fn) {\n  const me = this;\n\n  const final = function() {\n    return new Promise((resolve) => resolve())\n      .then(fn)\n      .then(() => me);\n  };\n\n  return this.then(final, final);\n}\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError(\\\"Constructor must be called with the new operator\\\");if(\\\"function\\\"!=typeof e)throw new SyntaxError(\\\"Function parameter handler(resolve, reject) missing\\\");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]=\\\"Promise\\\";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c(\\\"Promise timed out after \\\"+e+\\\" ms\\\"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&\\\"function\\\"==typeof o.then&&\\\"function\\\"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||\\\"promise cancelled\\\",this.stack=(new Error).stack}function c(e){this.message=e||\\\"timeout exceeded\\\",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name=\\\"CancellationError\\\",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name=\\\"TimeoutError\\\",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s=\\\"__workerpool-cleanup__\\\",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var a;try{a=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on(\\\"disconnect\\\",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(this, arguments);\\\");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error(\\\"Worker terminating\\\"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error(\\\"Worker terminating\\\"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error(\\\"Timeout occured waiting for abort handler, killing worker\\\"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send(\\\"ready\\\")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n */\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  Object.values(handler.processing)\n    .forEach(task => task?.options?.on(payload));\n  \n  Object.values(handler.tracking)\n    .forEach(task => task?.options?.on(payload)); \n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      } else {\n        // if the task is not the current, it might be tracked for cleanup\n        var task = me.tracking[id];\n        if (task !== undefined) {\n          if (response.isEvent) {\n            if (task.options && typeof task.options.on === 'function') {\n              task.options.on(response.payload);\n            }\n          }\n        } \n      }\n\n      if (response.method === CLEANUP_METHOD_ID) {\n        var trackedTask = me.tracking[response.id];\n        if (trackedTask !== undefined) {\n          if (response.error) {\n            clearTimeout(trackedTask.timeoutId);\n            trackedTask.resolver.reject(objectToError(response.error))\n          } else {\n            me.tracking && clearTimeout(trackedTask.timeoutId);\n            // if we do not encounter an error wrap the the original timeout error and reject\n            trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));\n          }\n        }\n        delete me.tracking[id];\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    \n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n  this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      me.tracking[id] = {\n        id,\n        resolver: Promise.defer(),\n        options: options,\n        error,\n      };\n      \n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function(err) {\n        delete me.tracking[id];\n\n        // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination\n        // as the response from the worker did not contain an error. We still wish to throw the original timeout error\n        // to the caller.\n        if (err instanceof WrappedTimeoutError) {\n          throw err.error;\n        }\n\n        var promise = me.terminateAndNotify(true)\n          .then(function() { \n            throw err;\n          }, function(err) {\n            throw err;\n          });\n\n        return promise;\n      });\n \n      me.worker.send({\n        id,\n        method: CLEANUP_METHOD_ID \n      });\n      \n      \n      /**\n        * Sets a timeout to reject the cleanup operation if the message sent to the worker\n        * does not receive a response. see worker.tryCleanup for worker cleanup operations.\n        * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.\n        * \n        * We need this timeout in either case of a Timeout or Cancellation Error as if\n        * the worker does not send a message we still need to give a window of time for a response.\n        * \n        * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup\n        * operations will occure.\n      */\n      me.tracking[id].timeoutId = setTimeout(function() {\n          me.tracking[id].resolver.reject(error);\n      }, me.workerTerminateTimeout);\n\n      return me.tracking[id].resolver.promise;\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  // If we are terminating, cancel all tracked task for cleanup\n  for (var task of Object.values(me.tracking)) {\n    clearTimeout(task.timeoutId);\n    task.resolver.reject(new Error('Worker Terminating'));\n  }\n\n  me.tracking = Object.create(null);\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\n/**\n* Wrapper error type to denote that a TimeoutError has already been proceesed\n* and we should skip cleanup operations\n* @param {Promise.TimeoutError} timeoutError\n*/\nfunction WrappedTimeoutError(timeoutError) {\n  this.error = timeoutError;\n  this.stack = (new Error()).stack;\n}\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\nvar Transfer = require('./transfer');\n\n/**\n * worker must handle async cleanup handlers. Use custom Promise implementation. \n*/\nvar Promise = require('./Promise').Promise;\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n*/\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n\nvar TIMEOUT_DEFAULT = 1_000;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\n\n// api for in worker communication with parent process\n// works in both node.js and the browser\nvar publicWorker = {\n  /**\n   * Registers listeners which will trigger when a task is timed out or cancled. If all listeners resolve, the worker executing the given task will not be terminated.\n   * *Note*: If there is a blocking operation within a listener, the worker will be terminated.\n   * @param {() => Promise<void>} listener\n  */\n  addAbortListener: function(listener) {\n    worker.abortListeners.push(listener);\n  },\n\n  /**\n    * Emit an event from the worker thread to the main thread.\n    * @param {any} payload\n  */\n  emit: worker.emit\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  if (error && error.toJSON) {\n    return JSON.parse(JSON.stringify(error));\n  }\n\n  // turn a class like Error (having non-enumerable properties) into a plain object\n  return JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(this, arguments);');\n  f.worker = publicWorker;\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\nworker.abortListenerTimeout = TIMEOUT_DEFAULT;\n\n/**\n * Abort handlers for resolving errors which may cause a timeout or cancellation\n * to occur from a worker context\n */\nworker.abortListeners = [];\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns {Promise<void>}\n */\nworker.terminateAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n  \n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n\n    return result;\n  } else {\n    _exit();\n    return new Promise(function (_resolve, reject) {\n      reject(new Error(\"Worker terminating\"));\n    });\n  }\n}\n\n\n\n/**\n  * Called within the worker message handler to run abort handlers if registered to perform cleanup operations.\n  * @param {Integer} [requestId] id of task which is currently executing in the worker\n  * @return {Promise<void>}\n*/\nworker.cleanup = function(requestId) {\n\n  if (!worker.abortListeners.length) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: convertError(new Error('Worker terminating')),\n    });\n\n    // If there are no handlers registered, reject the promise with an error as we want the handler to be notified\n    // that cleanup should begin and the handler should be GCed.\n    return new Promise(function(resolve) { resolve(); });\n  }\n  \n\n  var _exit = function() {\n    worker.exit();\n  }\n\n  var _abort = function() {\n    if (!worker.abortListeners.length) {\n      worker.abortListeners = [];\n    }\n  }\n\n  const promises = worker.abortListeners.map(listener => listener());\n  let timerId;\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    timerId = setTimeout(function () { \n      reject(new Error('Timeout occured waiting for abort handler, killing worker'));\n    }, worker.abortListenerTimeout);\n  });\n\n  // Once a promise settles we need to clear the timeout to prevet fulfulling the promise twice \n  const settlePromise = Promise.all(promises).then(function() {\n    clearTimeout(timerId);\n    _abort();\n  }, function() {\n    clearTimeout(timerId);\n    _exit();\n  });\n\n  // Returns a promise which will result in one of the following cases\n  // - Resolve once all handlers resolve\n  // - Reject if one or more handlers exceed the 'abortListenerTimeout' interval\n  // - Reject if one or more handlers reject\n  // Upon one of the above cases a message will be sent to the handler with the result of the handler execution\n  // which will either kill the worker if the result contains an error, or keep it in the pool if the result\n  // does not contain an error.\n  return new Promise(function(resolve, reject) {\n    settlePromise.then(resolve, reject);\n    timeoutPromise.then(resolve, reject);\n  }).then(function() {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: null,\n    });\n  }, function(err) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: err ? convertError(err) : null,\n    });\n  });\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.terminateAndExit(0);\n  }\n\n  if (request.method === CLEANUP_METHOD_ID) {\n    return worker.cleanup(request.id);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err),\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n        worker.methods[name].worker = publicWorker;\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n    // register listener timeout or default to 1 second\n    worker.abortListenerTimeout = options.abortListenerTimeout || TIMEOUT_DEFAULT;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\n"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","Symbol","toStringTag","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","prototype","finally","final","all","promises","remaining","results","p","i","defer","resolver","promise","message","stack","Error","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","embeddedWorker","_require$$","require$$0","environment","require$$1","_require$$2","require$$2","TERMINATE_METHOD_ID","CLEANUP_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","getDefaultWorker","Blob","window","URL","createObjectURL","blob","require$$3","type","__dirname","setupWorker","script","workerType","setupBrowserWorker","workerOpts","setupWorkerThreadWorker","setupProcessWorker","resolveForkOptions","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","child_process","forkOpts","fork","forkArgs","call","isChildProcess","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","values","processing","task","_task$options","tracking","_task$options2","WorkerHandler","_options","workerTerminateTimeout","ready","requestQueue","toString","response","terminated","dispatchQueuedRequests","id","isEvent","terminating","method","trackedTask","timeoutId","WrappedTimeoutError","onError","create","_iterator","_createForOfIteratorHelper","splice","_step","n","done","request","value","err","e","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","methods","exec","params","catch","terminateAndNotify","busy","force","_i","_Object$values","cleanup","removeAllListeners","killed","cleanExitTimeout","once","timeoutError","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","MAX_PORTS","debugPortAllocator","DebugPortAllocator","ports","nextAvailableStartingAt","starting","releasePort","port","DEBUG_PORT_ALLOCATOR","Pool","workers","tasks","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","validateMaxWorkers","maxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","Array","isArray","TypeError","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","shift","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","isNumber","isInteger","round","Pool_1","Transfer","TIMEOUT_DEFAULT","exit","publicWorker","addAbortListener","listener","abortListeners","parentPort","convertError","toJSON","JSON","parse","stringify","getOwnPropertyNames","isPromise","run","args","Function","apply","abortListenerTimeout","terminateAndExit","_exit","requestId","_abort","map","timerId","timeoutPromise","settlePromise","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit","workerEmit_1","require$$4","platform_1","isMainThread_1","cpus_1"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"workerpool.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/generated/embeddedWorker.js","../src/WorkerHandler.js","../src/debug-port-allocator.js","../src/Pool.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n  /**\n   * @readonly\n   */\n  this[Symbol.toStringTag] = 'Promise';\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n  * Execute given callback when the promise either resolves or rejects.\n  * Same semantics as Node's Promise.finally()\n  * @param {Function | null | undefined} [fn]\n  * @returns {Promise} promise\n  */\nPromise.prototype.finally = function (fn) {\n  const me = this;\n\n  const final = function() {\n    return new Promise((resolve) => resolve())\n      .then(fn)\n      .then(() => me);\n  };\n\n  return this.then(final, final);\n}\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError(\\\"Constructor must be called with the new operator\\\");if(\\\"function\\\"!=typeof e)throw new SyntaxError(\\\"Function parameter handler(resolve, reject) missing\\\");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]=\\\"Promise\\\";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c(\\\"Promise timed out after \\\"+e+\\\" ms\\\"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&\\\"function\\\"==typeof o.then&&\\\"function\\\"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||\\\"promise cancelled\\\",this.stack=(new Error).stack}function c(e){this.message=e||\\\"timeout exceeded\\\",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name=\\\"CancellationError\\\",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name=\\\"TimeoutError\\\",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s=\\\"__workerpool-cleanup__\\\",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var a;try{a=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on(\\\"disconnect\\\",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(this, arguments);\\\");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error(\\\"Worker terminating\\\"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error(\\\"Worker terminating\\\"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error(\\\"Timeout occured waiting for abort handler, killing worker\\\"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send(\\\"ready\\\")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n */\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  Object.values(handler.processing)\n    .forEach(task => task?.options?.on(payload));\n  \n  Object.values(handler.tracking)\n    .forEach(task => task?.options?.on(payload)); \n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      } else {\n        // if the task is not the current, it might be tracked for cleanup\n        var task = me.tracking[id];\n        if (task !== undefined) {\n          if (response.isEvent) {\n            if (task.options && typeof task.options.on === 'function') {\n              task.options.on(response.payload);\n            }\n          }\n        } \n      }\n\n      if (response.method === CLEANUP_METHOD_ID) {\n        var trackedTask = me.tracking[response.id];\n        if (trackedTask !== undefined) {\n          if (response.error) {\n            clearTimeout(trackedTask.timeoutId);\n            trackedTask.resolver.reject(objectToError(response.error))\n          } else {\n            me.tracking && clearTimeout(trackedTask.timeoutId);\n            // if we do not encounter an error wrap the the original timeout error and reject\n            trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));\n          }\n        }\n        delete me.tracking[id];\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    \n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error',function (error) {\n    onError(new TerminateError('Workerpool Worker error: ' + error.message, error))\n  });\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new TerminateError(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n  this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new TerminateError('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      me.tracking[id] = {\n        id,\n        resolver: Promise.defer(),\n        options: options,\n        error,\n      };\n      \n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function(err) {\n        delete me.tracking[id];\n\n        // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination\n        // as the response from the worker did not contain an error. We still wish to throw the original timeout error\n        // to the caller.\n        if (err instanceof WrappedTimeoutError) {\n          throw err.error;\n        }\n\n        var promise = me.terminateAndNotify(true)\n          .then(function() { \n            throw err;\n          }, function(err) {\n            throw err;\n          });\n\n        return promise;\n      });\n \n      me.worker.send({\n        id,\n        method: CLEANUP_METHOD_ID \n      });\n      \n      \n      /**\n        * Sets a timeout to reject the cleanup operation if the message sent to the worker\n        * does not receive a response. see worker.tryCleanup for worker cleanup operations.\n        * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.\n        * \n        * We need this timeout in either case of a Timeout or Cancellation Error as if\n        * the worker does not send a message we still need to give a window of time for a response.\n        * \n        * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup\n        * operations will occure.\n      */\n      me.tracking[id].timeoutId = setTimeout(function() {\n          me.tracking[id].resolver.reject(error);\n      }, me.workerTerminateTimeout);\n\n      return me.tracking[id].resolver.promise;\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  // If we are terminating, cancel all tracked task for cleanup\n  for (var task of Object.values(me.tracking)) {\n    clearTimeout(task.timeoutId);\n    task.resolver.reject(new Error('Worker Terminating'));\n  }\n\n  me.tracking = Object.create(null);\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\n/**\n* Wrapper error type to denote that a TimeoutError has already been proceesed\n* and we should skip cleanup operations\n* @param {Promise.TimeoutError} timeoutError\n*/\nfunction WrappedTimeoutError(timeoutError) {\n  this.error = timeoutError;\n  this.stack = (new Error()).stack;\n}\n\nclass TerminateError extends Error {\n  /**\n   * Create a timeout error\n   * @param {String} [message]\n   * @param {Error=} [cause]\n   */\n  constructor(message, cause) {\n    super(message || 'worker terminated');\n    this.cause = cause;\n  }\n}\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\nmodule.exports.TerminateError = TerminateError\n\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\nvar Transfer = require('./transfer');\n\n/**\n * worker must handle async cleanup handlers. Use custom Promise implementation. \n*/\nvar Promise = require('./Promise').Promise;\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n*/\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n\nvar TIMEOUT_DEFAULT = 1_000;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\n\n// api for in worker communication with parent process\n// works in both node.js and the browser\nvar publicWorker = {\n  /**\n   * Registers listeners which will trigger when a task is timed out or cancled. If all listeners resolve, the worker executing the given task will not be terminated.\n   * *Note*: If there is a blocking operation within a listener, the worker will be terminated.\n   * @param {() => Promise<void>} listener\n  */\n  addAbortListener: function(listener) {\n    worker.abortListeners.push(listener);\n  },\n\n  /**\n    * Emit an event from the worker thread to the main thread.\n    * @param {any} payload\n  */\n  emit: worker.emit\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  if (error && error.toJSON) {\n    return JSON.parse(JSON.stringify(error));\n  }\n\n  // turn a class like Error (having non-enumerable properties) into a plain object\n  return JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(this, arguments);');\n  f.worker = publicWorker;\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\nworker.abortListenerTimeout = TIMEOUT_DEFAULT;\n\n/**\n * Abort handlers for resolving errors which may cause a timeout or cancellation\n * to occur from a worker context\n */\nworker.abortListeners = [];\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns {Promise<void>}\n */\nworker.terminateAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n  \n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n\n    return result;\n  } else {\n    _exit();\n    return new Promise(function (_resolve, reject) {\n      reject(new Error(\"Worker terminating\"));\n    });\n  }\n}\n\n\n\n/**\n  * Called within the worker message handler to run abort handlers if registered to perform cleanup operations.\n  * @param {Integer} [requestId] id of task which is currently executing in the worker\n  * @return {Promise<void>}\n*/\nworker.cleanup = function(requestId) {\n\n  if (!worker.abortListeners.length) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: convertError(new Error('Worker terminating')),\n    });\n\n    // If there are no handlers registered, reject the promise with an error as we want the handler to be notified\n    // that cleanup should begin and the handler should be GCed.\n    return new Promise(function(resolve) { resolve(); });\n  }\n  \n\n  var _exit = function() {\n    worker.exit();\n  }\n\n  var _abort = function() {\n    if (!worker.abortListeners.length) {\n      worker.abortListeners = [];\n    }\n  }\n\n  const promises = worker.abortListeners.map(listener => listener());\n  let timerId;\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    timerId = setTimeout(function () { \n      reject(new Error('Timeout occured waiting for abort handler, killing worker'));\n    }, worker.abortListenerTimeout);\n  });\n\n  // Once a promise settles we need to clear the timeout to prevet fulfulling the promise twice \n  const settlePromise = Promise.all(promises).then(function() {\n    clearTimeout(timerId);\n    _abort();\n  }, function() {\n    clearTimeout(timerId);\n    _exit();\n  });\n\n  // Returns a promise which will result in one of the following cases\n  // - Resolve once all handlers resolve\n  // - Reject if one or more handlers exceed the 'abortListenerTimeout' interval\n  // - Reject if one or more handlers reject\n  // Upon one of the above cases a message will be sent to the handler with the result of the handler execution\n  // which will either kill the worker if the result contains an error, or keep it in the pool if the result\n  // does not contain an error.\n  return new Promise(function(resolve, reject) {\n    settlePromise.then(resolve, reject);\n    timeoutPromise.then(resolve, reject);\n  }).then(function() {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: null,\n    });\n  }, function(err) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: err ? convertError(err) : null,\n    });\n  });\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.terminateAndExit(0);\n  }\n\n  if (request.method === CLEANUP_METHOD_ID) {\n    return worker.cleanup(request.id);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err),\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n        worker.methods[name].worker = publicWorker;\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n    // register listener timeout or default to 1 second\n    worker.abortListenerTimeout = options.abortListenerTimeout || TIMEOUT_DEFAULT;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\nconst {TerminateError} = require('./WorkerHandler');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\nexports.TerminateError = TerminateError;"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","Symbol","toStringTag","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","prototype","finally","final","all","promises","remaining","results","p","i","defer","resolver","promise","message","stack","Error","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","embeddedWorker","_require$$","require$$0","environment","require$$1","require$$2","TERMINATE_METHOD_ID","CLEANUP_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","getDefaultWorker","Blob","window","URL","createObjectURL","blob","require$$3","type","__dirname","setupWorker","script","workerType","setupBrowserWorker","workerOpts","setupWorkerThreadWorker","setupProcessWorker","resolveForkOptions","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","child_process","forkOpts","fork","forkArgs","call","isChildProcess","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","values","processing","task","_task$options","tracking","_task$options2","WorkerHandler","_options","workerTerminateTimeout","ready","requestQueue","toString","response","terminated","dispatchQueuedRequests","id","isEvent","terminating","method","trackedTask","timeoutId","WrappedTimeoutError","onError","create","_iterator","_createForOfIteratorHelper","splice","_step","n","done","request","value","err","e","TerminateError","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","methods","exec","params","catch","terminateAndNotify","busy","force","_i","_Object$values","cleanup","removeAllListeners","killed","cleanExitTimeout","once","timeoutError","_Error","cause","_this","_classCallCheck","_callSuper","_inherits","_createClass","_wrapNativeSuper","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","MAX_PORTS","debugPortAllocator","DebugPortAllocator","ports","nextAvailableStartingAt","starting","releasePort","port","DEBUG_PORT_ALLOCATOR","Pool","workers","tasks","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","validateMaxWorkers","maxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","Array","isArray","TypeError","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","shift","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","isNumber","isInteger","round","Pool_1","Transfer","TIMEOUT_DEFAULT","exit","publicWorker","addAbortListener","listener","abortListeners","parentPort","convertError","toJSON","JSON","parse","stringify","getOwnPropertyNames","isPromise","run","args","Function","apply","abortListenerTimeout","terminateAndExit","_exit","requestId","_abort","map","timerId","timeoutPromise","settlePromise","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit","workerEmit_1","require$$4","require$$5","platform_1","isMainThread_1","cpus_1","TerminateError_1"],"mappings":"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"}
\ No newline at end of file
diff --git a/dist/workerpool.min.js b/dist/workerpool.min.js
index db3bc33b6ebbdf0697e82d4efa92f0a7e250314a..6843199bfa699e0b800fac330a9bb0ba9b610645 100644
--- a/dist/workerpool.min.js
+++ b/dist/workerpool.min.js
@@ -1,3 +1,3 @@
 /*! For license information please see workerpool.min.js.LICENSE.txt */
-!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).workerpool={})}(this,(function(e){"use strict";var r={},t={exports:{}};!function(e){var r=function(e){return void 0!==e&&null!=e.versions&&null!=e.versions.node&&e+""=="[object process]"};e.exports.isNode=r,e.exports.platform="undefined"!=typeof process&&r(process)?"node":"browser";var t="node"===e.exports.platform&&require("worker_threads");e.exports.isMainThread="node"===e.exports.platform?(!t||t.isMainThread)&&!process.connected:"undefined"!=typeof Window,e.exports.cpus="browser"===e.exports.platform?self.navigator.hardwareConcurrency:require("os").cpus().length}(t);var n,o=t.exports,i={};function s(){if(n)return i;function e(n,i){var s=this;if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof n)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var u=[],a=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]="Promise";var c=function(e,r){u.push(e),a.push(r)};this.then=function(t,n){return new e((function(e,o){var i=t?r(t,e,o):e,s=n?r(n,e,o):o;c(i,s)}),s)};var f=function(e){return s.resolved=!0,s.rejected=!1,s.pending=!1,u.forEach((function(r){r(e)})),c=function(r,t){r(e)},f=d=function(){},s},d=function(e){return s.resolved=!1,s.rejected=!0,s.pending=!1,a.forEach((function(r){r(e)})),c=function(r,t){t(e)},f=d=function(){},s};this.cancel=function(){return i?i.cancel():d(new t),s},this.timeout=function(e){if(i)i.timeout(e);else{var r=setTimeout((function(){d(new o("Promise timed out after "+e+" ms"))}),e);s.always((function(){clearTimeout(r)}))}return s},n((function(e){f(e)}),(function(e){d(e)}))}function r(e,r,t){return function(n){try{var o=e(n);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(r,t):r(o)}catch(e){t(e)}}}function t(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function o(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return n=1,e.prototype.catch=function(e){return this.then(null,e)},e.prototype.always=function(e){return this.then(e,e)},e.prototype.finally=function(r){var t=this,n=function(){return new e((function(e){return e()})).then(r).then((function(){return t}))};return this.then(n,n)},e.all=function(r){return new e((function(e,t){var n=r.length,o=[];n?r.forEach((function(r,i){r.then((function(r){o[i]=r,0==--n&&e(o)}),(function(e){n=0,t(e)}))})):e(o)}))},e.defer=function(){var r={};return r.promise=new e((function(e,t){r.resolve=e,r.reject=t})),r},t.prototype=new Error,t.prototype.constructor=Error,t.prototype.name="CancellationError",e.CancellationError=t,o.prototype=new Error,o.prototype.constructor=Error,o.prototype.name="TimeoutError",e.TimeoutError=o,i.Promise=e,i}function u(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=Array(r);t<r;t++)n[t]=e[t];return n}function a(e,r){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=function(e,r){if(e){if("string"==typeof e)return u(e,r);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?u(e,r):void 0}}(e))||r){t&&(e=t);var n=0,o=function(){};return{s:o,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,s=!0,a=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return s=e.done,e},e:function(e){a=!0,i=e},f:function(){try{s||null==t.return||t.return()}finally{if(a)throw i}}}}function c(e,r,t){return(r=function(e){var r=function(e,r){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,r);if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(e,"string");return"symbol"==typeof r?r:r+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function f(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}var p,l,h,m,k,w,y,v,g={exports:{}},b={};function O(){return p||(p=1,b.validateOptions=function(e,r,t){if(e){var n=e?Object.keys(e):[],o=n.find((function(e){return!r.includes(e)}));if(o)throw new Error('Object "'+t+'" contains an unknown option "'+o+'"');var i=r.find((function(e){return Object.prototype[e]&&!n.includes(e)}));if(i)throw new Error('Object "'+t+'" contains an inherited option "'+i+'" which is not defined in the object itself but in its prototype. Only plain objects are allowed. Please remove the option from the prototype or override it with a value "undefined".');return e}},b.workerOptsNames=["credentials","name","type"],b.forkOptsNames=["cwd","detached","env","execPath","execArgv","gid","serialization","signal","killSignal","silent","stdio","uid","windowsVerbatimArguments","timeout"],b.workerThreadOptsNames=["argv","env","eval","execArgv","stdin","stdout","stderr","workerData","trackUnmanagedFds","transferList","resourceLimits","name"]),b}function T(){if(m)return g.exports;m=1;var e=s().Promise,r=o,t=O(),n=t.validateOptions,i=t.forkOptsNames,u=t.workerThreadOptsNames,p=t.workerOptsNames,k="__workerpool-terminate__",w="__workerpool-cleanup__";function y(){var e=b();if(!e)throw new Error("WorkerPool: workerType = 'thread' is not supported, Node >= 11.7.0 required");return e}function v(){if("function"!=typeof Worker&&("object"!==("undefined"==typeof Worker?"undefined":d(Worker))||"function"!=typeof Worker.prototype.constructor))throw new Error("WorkerPool: Web Workers not supported")}function b(){try{return require("worker_threads")}catch(e){if("object"===d(e)&&null!==e&&"MODULE_NOT_FOUND"===e.code)return null;throw e}}function T(e,r,t){n(r,p,"workerOpts");var o=new t(e,r);return o.isBrowserWorker=!0,o.on=function(e,r){this.addEventListener(e,(function(e){r(e.data)}))},o.send=function(e,r){this.postMessage(e,r)},o}function x(e,r,t){var o,i;n(null==t?void 0:t.workerThreadOpts,u,"workerThreadOpts");var s=new r.Worker(e,function(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?f(Object(t),!0).forEach((function(r){c(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({stdout:null!==(o=null==t?void 0:t.emitStdStreams)&&void 0!==o&&o,stderr:null!==(i=null==t?void 0:t.emitStdStreams)&&void 0!==i&&i},null==t?void 0:t.workerThreadOpts));return s.isWorkerThread=!0,s.send=function(e,r){this.postMessage(e,r)},s.kill=function(){return this.terminate(),!0},s.disconnect=function(){this.terminate()},null!=t&&t.emitStdStreams&&(s.stdout.on("data",(function(e){return s.emit("stdout",e)})),s.stderr.on("data",(function(e){return s.emit("stderr",e)}))),s}function E(e,r,t){n(r.forkOpts,i,"forkOpts");var o=t.fork(e,r.forkArgs,r.forkOpts),s=o.send;return o.send=function(e){return s.call(o,e)},r.emitStdStreams&&(o.stdout.on("data",(function(e){return o.emit("stdout",e)})),o.stderr.on("data",(function(e){return o.emit("stderr",e)}))),o.isChildProcess=!0,o}function j(e){e=e||{};var r=process.execArgv.join(" "),t=-1!==r.indexOf("--inspect"),n=-1!==r.indexOf("--debug-brk"),o=[];return t&&(o.push("--inspect="+e.debugPort),n&&o.push("--debug-brk")),process.execArgv.forEach((function(e){e.indexOf("--max-old-space-size")>-1&&o.push(e)})),Object.assign({},e,{forkArgs:e.forkArgs,forkOpts:Object.assign({},e.forkOpts,{execArgv:(e.forkOpts&&e.forkOpts.execArgv||[]).concat(o),stdio:e.emitStdStreams?"pipe":void 0})})}function W(e){for(var r=new Error(""),t=Object.keys(e),n=0;n<t.length;n++)r[t[n]]=e[t[n]];return r}function S(e,r){Object.values(e.processing).forEach((function(e){var t;return null==e||null===(t=e.options)||void 0===t?void 0:t.on(r)})),Object.values(e.tracking).forEach((function(e){var t;return null==e||null===(t=e.options)||void 0===t?void 0:t.on(r)}))}function _(e,t){var n=this,o=t||{};function i(e){for(var r in n.terminated=!0,n.processing)void 0!==n.processing[r]&&n.processing[r].resolver.reject(e);n.processing=Object.create(null)}this.script=e||function(){if("browser"===r.platform){if("undefined"==typeof Blob)throw new Error("Blob not supported by the browser");if(!window.URL||"function"!=typeof window.URL.createObjectURL)throw new Error("URL.createObjectURL not supported by the browser");var e=new Blob([h?l:(h=1,l='!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){"use strict";function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof e)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]="Promise";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c("Promise timed out after "+e+" ms"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function c(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name="CancellationError",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name="TimeoutError",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s="__workerpool-cleanup__",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var a;try{a=require("worker_threads")}catch(n){if("object"!==e(n)||null===n||"MODULE_NOT_FOUND"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on("disconnect",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error("Worker terminating"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error("Worker terminating"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on("message",(function(e){if("__workerpool-terminate__"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error(\'Unknown method "\'+e.method+\'"\');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send("ready")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\n//# sourceMappingURL=worker.min.js.map\n')],{type:"text/javascript"});return window.URL.createObjectURL(e)}return __dirname+"/worker.js"}(),this.worker=function(e,t){if("web"===t.workerType)return v(),T(e,t.workerOpts,Worker);if("thread"===t.workerType)return x(e,n=y(),t);if("process"!==t.workerType&&t.workerType){if("browser"===r.platform)return v(),T(e,t.workerOpts,Worker);var n=b();return n?x(e,n,t):E(e,j(t),require("child_process"))}return E(e,j(t),require("child_process"))}(this.script,o),this.debugPort=o.debugPort,this.forkOpts=o.forkOpts,this.forkArgs=o.forkArgs,this.workerOpts=o.workerOpts,this.workerThreadOpts=o.workerThreadOpts,this.workerTerminateTimeout=o.workerTerminateTimeout,e||(this.worker.ready=!0),this.requestQueue=[],this.worker.on("stdout",(function(e){S(n,{stdout:e.toString()})})),this.worker.on("stderr",(function(e){S(n,{stderr:e.toString()})})),this.worker.on("message",(function(e){if(!n.terminated)if("string"==typeof e&&"ready"===e)n.worker.ready=!0,function(){var e,r=a(n.requestQueue.splice(0));try{for(r.s();!(e=r.n()).done;){var t=e.value;n.worker.send(t.message,t.transfer)}}catch(e){r.e(e)}finally{r.f()}}();else{var r,t=e.id;if(void 0!==(r=n.processing[t]))e.isEvent?r.options&&"function"==typeof r.options.on&&r.options.on(e.payload):(delete n.processing[t],!0===n.terminating&&n.terminate(),e.error?r.resolver.reject(W(e.error)):r.resolver.resolve(e.result));else void 0!==(r=n.tracking[t])&&e.isEvent&&r.options&&"function"==typeof r.options.on&&r.options.on(e.payload);if(e.method===w){var o=n.tracking[e.id];void 0!==o&&(e.error?(clearTimeout(o.timeoutId),o.resolver.reject(W(e.error))):(n.tracking&&clearTimeout(o.timeoutId),o.resolver.reject(new P(o.error)))),delete n.tracking[t]}}}));var s=this.worker;this.worker.on("error",i),this.worker.on("exit",(function(e,r){var t="Workerpool Worker terminated Unexpectedly\n";t+="    exitCode: `"+e+"`\n",t+="    signalCode: `"+r+"`\n",t+="    workerpool.script: `"+n.script+"`\n",t+="    spawnArgs: `"+s.spawnargs+"`\n",t+="    spawnfile: `"+s.spawnfile+"`\n",t+="    stdout: `"+s.stdout+"`\n",t+="    stderr: `"+s.stderr+"`\n",i(new Error(t))})),this.processing=Object.create(null),this.tracking=Object.create(null),this.terminating=!1,this.terminated=!1,this.cleaning=!1,this.terminationHandler=null,this.lastId=0}function P(e){this.error=e,this.stack=(new Error).stack}return _.prototype.methods=function(){return this.exec("methods")},_.prototype.exec=function(r,t,n,o){n||(n=e.defer());var i=++this.lastId;this.processing[i]={id:i,resolver:n,options:o};var s={message:{id:i,method:r,params:t},transfer:o&&o.transfer};this.terminated?n.reject(new Error("Worker is terminated")):this.worker.ready?this.worker.send(s.message,s.transfer):this.requestQueue.push(s);var u=this;return n.promise.catch((function(r){if(r instanceof e.CancellationError||r instanceof e.TimeoutError)return u.tracking[i]={id:i,resolver:e.defer(),options:o,error:r},delete u.processing[i],u.tracking[i].resolver.promise=u.tracking[i].resolver.promise.catch((function(e){if(delete u.tracking[i],e instanceof P)throw e.error;var r=u.terminateAndNotify(!0).then((function(){throw e}),(function(e){throw e}));return r})),u.worker.send({id:i,method:w}),u.tracking[i].timeoutId=setTimeout((function(){u.tracking[i].resolver.reject(r)}),u.workerTerminateTimeout),u.tracking[i].resolver.promise;throw r}))},_.prototype.busy=function(){return this.cleaning||Object.keys(this.processing).length>0},_.prototype.terminate=function(e,r){var t=this;if(e){for(var n in this.processing)void 0!==this.processing[n]&&this.processing[n].resolver.reject(new Error("Worker terminated"));this.processing=Object.create(null)}for(var o=0,i=Object.values(t.tracking);o<i.length;o++){var s=i[o];clearTimeout(s.timeoutId),s.resolver.reject(new Error("Worker Terminating"))}if(t.tracking=Object.create(null),"function"==typeof r&&(this.terminationHandler=r),this.busy())this.terminating=!0;else{var u=function(e){if(t.terminated=!0,t.cleaning=!1,null!=t.worker&&t.worker.removeAllListeners&&t.worker.removeAllListeners("message"),t.worker=null,t.terminating=!1,t.terminationHandler)t.terminationHandler(e,t);else if(e)throw e};if(this.worker){if("function"==typeof this.worker.kill){if(this.worker.killed)return void u(new Error("worker already killed!"));var a=setTimeout((function(){t.worker&&t.worker.kill()}),this.workerTerminateTimeout);return this.worker.once("exit",(function(){clearTimeout(a),t.worker&&(t.worker.killed=!0),u()})),this.worker.ready?this.worker.send(k):this.requestQueue.push({message:k}),void(this.cleaning=!0)}if("function"!=typeof this.worker.terminate)throw new Error("Failed to terminate worker");this.worker.terminate(),this.worker.killed=!0}u()}},_.prototype.terminateAndNotify=function(r,t){var n=e.defer();return t&&n.promise.timeout(t),this.terminate(r,(function(e,r){e?n.reject(e):n.resolve(r)})),n.promise},g.exports=_,g.exports._tryRequireWorkerThreads=b,g.exports._setupProcessWorker=E,g.exports._setupBrowserWorker=T,g.exports._setupWorkerThreadWorker=x,g.exports.ensureWorkerThreads=y,g.exports}function x(){if(v)return y;v=1;var e=s().Promise,r=T(),t=o,n=new(function(){if(w)return k;function e(){this.ports=Object.create(null),this.length=0}return w=1,k=e,e.prototype.nextAvailableStartingAt=function(e){for(;!0===this.ports[e];)e++;if(e>=65535)throw new Error("WorkerPool debug port limit reached: "+e+">= 65535");return this.ports[e]=!0,this.length++,e},e.prototype.releasePort=function(e){delete this.ports[e],this.length--},k}());function i(e,n){"string"==typeof e?this.script=e||null:(this.script=null,n=e),this.workers=[],this.tasks=[],n=n||{},this.forkArgs=Object.freeze(n.forkArgs||[]),this.forkOpts=Object.freeze(n.forkOpts||{}),this.workerOpts=Object.freeze(n.workerOpts||{}),this.workerThreadOpts=Object.freeze(n.workerThreadOpts||{}),this.debugPortStart=n.debugPortStart||43210,this.nodeWorker=n.nodeWorker,this.workerType=n.workerType||n.nodeWorker||"auto",this.maxQueueSize=n.maxQueueSize||1/0,this.workerTerminateTimeout=n.workerTerminateTimeout||1e3,this.onCreateWorker=n.onCreateWorker||function(){return null},this.onTerminateWorker=n.onTerminateWorker||function(){return null},this.emitStdStreams=n.emitStdStreams||!1,n&&"maxWorkers"in n?(!function(e){if(!u(e)||!a(e)||e<1)throw new TypeError("Option maxWorkers must be an integer number >= 1")}(n.maxWorkers),this.maxWorkers=n.maxWorkers):this.maxWorkers=Math.max((t.cpus||4)-1,1),n&&"minWorkers"in n&&("max"===n.minWorkers?this.minWorkers=this.maxWorkers:(!function(e){if(!u(e)||!a(e)||e<0)throw new TypeError("Option minWorkers must be an integer number >= 0")}(n.minWorkers),this.minWorkers=n.minWorkers,this.maxWorkers=Math.max(this.minWorkers,this.maxWorkers)),this._ensureMinWorkers()),this._boundNext=this._next.bind(this),"thread"===this.workerType&&r.ensureWorkerThreads()}function u(e){return"number"==typeof e}function a(e){return Math.round(e)==e}return i.prototype.exec=function(r,t,n){if(t&&!Array.isArray(t))throw new TypeError('Array expected as argument "params"');if("string"==typeof r){var o=e.defer();if(this.tasks.length>=this.maxQueueSize)throw new Error("Max queue size of "+this.maxQueueSize+" reached");var i=this.tasks,s={method:r,params:t,resolver:o,timeout:null,options:n};i.push(s);var u=o.promise.timeout;return o.promise.timeout=function(e){return-1!==i.indexOf(s)?(s.timeout=e,o.promise):u.call(o.promise,e)},this._next(),o.promise}if("function"==typeof r)return this.exec("run",[String(r),t],n);throw new TypeError('Function or string expected as argument "method"')},i.prototype.proxy=function(){if(arguments.length>0)throw new Error("No arguments expected");var e=this;return this.exec("methods").then((function(r){var t={};return r.forEach((function(r){t[r]=function(){return e.exec(r,Array.prototype.slice.call(arguments))}})),t}))},i.prototype._next=function(){if(this.tasks.length>0){var e=this._getWorker();if(e){var r=this,t=this.tasks.shift();if(t.resolver.promise.pending){var n=e.exec(t.method,t.params,t.resolver,t.options).then(r._boundNext).catch((function(){if(e.terminated)return r._removeWorker(e)})).then((function(){r._next()}));"number"==typeof t.timeout&&n.timeout(t.timeout)}else r._next()}}},i.prototype._getWorker=function(){for(var e=this.workers,r=0;r<e.length;r++){var t=e[r];if(!1===t.busy())return t}return e.length<this.maxWorkers?(t=this._createWorkerHandler(),e.push(t),t):null},i.prototype._removeWorker=function(r){var t=this;return n.releasePort(r.debugPort),this._removeWorkerFromList(r),this._ensureMinWorkers(),new e((function(e,n){r.terminate(!1,(function(o){t.onTerminateWorker({forkArgs:r.forkArgs,forkOpts:r.forkOpts,workerThreadOpts:r.workerThreadOpts,script:r.script}),o?n(o):e(r)}))}))},i.prototype._removeWorkerFromList=function(e){var r=this.workers.indexOf(e);-1!==r&&this.workers.splice(r,1)},i.prototype.terminate=function(r,t){var o=this;this.tasks.forEach((function(e){e.resolver.reject(new Error("Pool terminated"))})),this.tasks.length=0;var i=function(e){n.releasePort(e.debugPort),this._removeWorkerFromList(e)}.bind(this),s=[];return this.workers.slice().forEach((function(e){var n=e.terminateAndNotify(r,t).then(i).always((function(){o.onTerminateWorker({forkArgs:e.forkArgs,forkOpts:e.forkOpts,workerThreadOpts:e.workerThreadOpts,script:e.script})}));s.push(n)})),e.all(s)},i.prototype.stats=function(){var e=this.workers.length,r=this.workers.filter((function(e){return e.busy()})).length;return{totalWorkers:e,busyWorkers:r,idleWorkers:e-r,pendingTasks:this.tasks.length,activeTasks:r}},i.prototype._ensureMinWorkers=function(){if(this.minWorkers)for(var e=this.workers.length;e<this.minWorkers;e++)this.workers.push(this._createWorkerHandler())},i.prototype._createWorkerHandler=function(){var e=this.onCreateWorker({forkArgs:this.forkArgs,forkOpts:this.forkOpts,workerOpts:this.workerOpts,workerThreadOpts:this.workerThreadOpts,script:this.script})||{};return new r(e.script||this.script,{forkArgs:e.forkArgs||this.forkArgs,forkOpts:e.forkOpts||this.forkOpts,workerOpts:e.workerOpts||this.workerOpts,workerThreadOpts:e.workerThreadOpts||this.workerThreadOpts,debugPort:n.nextAvailableStartingAt(this.debugPortStart),workerType:this.workerType,workerTerminateTimeout:this.workerTerminateTimeout,emitStdStreams:this.emitStdStreams})},y=i}var E,j,W,S={};function _(){if(j)return E;return j=1,E=function(e,r){this.message=e,this.transfer=r}}function P(){return W||(W=1,function(e){var r=_(),t=s().Promise,n="__workerpool-cleanup__",o={exit:function(){}},i={addAbortListener:function(e){o.abortListeners.push(e)},emit:o.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)o.on=function(e,r){addEventListener(e,(function(e){r(e.data)}))},o.send=function(e,r){r?postMessage(e,r):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var u;try{u=require("worker_threads")}catch(e){if("object"!==d(e)||null===e||"MODULE_NOT_FOUND"!==e.code)throw e}if(u&&null!==u.parentPort){var a=u.parentPort;o.send=a.postMessage.bind(a),o.on=a.on.bind(a),o.exit=process.exit.bind(process)}else o.on=process.on.bind(process),o.send=function(e){process.send(e)},o.on("disconnect",(function(){process.exit(1)})),o.exit=process.exit.bind(process)}function c(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function f(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}o.methods={},o.methods.run=function(e,r){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=i,t.apply(t,r)},o.methods.methods=function(){return Object.keys(o.methods)},o.terminationHandler=void 0,o.abortListenerTimeout=1e3,o.abortListeners=[],o.terminateAndExit=function(e){var r=function(){o.exit(e)};if(!o.terminationHandler)return r();var n=o.terminationHandler(e);return f(n)?(n.then(r,r),n):(r(),new t((function(e,r){r(new Error("Worker terminating"))})))},o.cleanup=function(e){if(!o.abortListeners.length)return o.send({id:e,method:n,error:c(new Error("Worker terminating"))}),new t((function(e){e()}));var r,i=o.abortListeners.map((function(e){return e()})),s=new t((function(e,t){r=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),o.abortListenerTimeout)})),u=t.all(i).then((function(){clearTimeout(r),o.abortListeners.length||(o.abortListeners=[])}),(function(){clearTimeout(r),o.exit()}));return new t((function(e,r){u.then(e,r),s.then(e,r)})).then((function(){o.send({id:e,method:n,error:null})}),(function(r){o.send({id:e,method:n,error:r?c(r):null})}))};var p=null;o.on("message",(function(e){if("__workerpool-terminate__"===e)return o.terminateAndExit(0);if(e.method===n)return o.cleanup(e.id);try{var t=o.methods[e.method];if(!t)throw new Error('Unknown method "'+e.method+'"');p=e.id;var i=t.apply(t,e.params);f(i)?i.then((function(t){t instanceof r?o.send({id:e.id,result:t.message,error:null},t.transfer):o.send({id:e.id,result:t,error:null}),p=null})).catch((function(r){o.send({id:e.id,result:null,error:c(r)}),p=null})):(i instanceof r?o.send({id:e.id,result:i.message,error:null},i.transfer):o.send({id:e.id,result:i,error:null}),p=null)}catch(r){o.send({id:e.id,result:null,error:c(r)})}})),o.register=function(e,r){if(e)for(var t in e)e.hasOwnProperty(t)&&(o.methods[t]=e[t],o.methods[t].worker=i);r&&(o.terminationHandler=r.onTerminate,o.abortListenerTimeout=r.abortListenerTimeout||1e3),o.send("ready")},o.emit=function(e){if(p){if(e instanceof r)return void o.send({id:p,isEvent:!0,payload:e.message},e.transfer);o.send({id:p,isEvent:!0,payload:e})}},e.add=o.register,e.emit=o.emit}(S)),S}var A=o.platform,L=o.isMainThread,N=o.cpus;var M=r.pool=function(e,r){return new(x())(e,r)};var U=r.worker=function(e,r){P().add(e,r)};var C=r.workerEmit=function(e){P().emit(e)},H=s().Promise,q=r.Promise=H,F=r.Transfer=_(),z=r.platform=A,D=r.isMainThread=L,J=r.cpus=N;e.Promise=q,e.Transfer=F,e.cpus=J,e.default=r,e.isMainThread=D,e.platform=z,e.pool=M,e.worker=U,e.workerEmit=C,Object.defineProperty(e,"__esModule",{value:!0})}));
+!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports):"function"==typeof define&&define.amd?define(["exports"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).workerpool={})}(this,(function(e){"use strict";var r={},t={exports:{}};!function(e){var r=function(e){return void 0!==e&&null!=e.versions&&null!=e.versions.node&&e+""=="[object process]"};e.exports.isNode=r,e.exports.platform="undefined"!=typeof process&&r(process)?"node":"browser";var t="node"===e.exports.platform&&require("worker_threads");e.exports.isMainThread="node"===e.exports.platform?(!t||t.isMainThread)&&!process.connected:"undefined"!=typeof Window,e.exports.cpus="browser"===e.exports.platform?self.navigator.hardwareConcurrency:require("os").cpus().length}(t);var n=t.exports;function o(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=Array(r);t<r;t++)n[t]=e[t];return n}function i(e,r,t){return r=a(r),function(e,r){if(r&&("object"==typeof r||"function"==typeof r))return r;if(void 0!==r)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,c()?Reflect.construct(r,t||[],a(e).constructor):r.apply(e,t))}function s(e,r){var t="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!t){if(Array.isArray(e)||(t=function(e,r){if(e){if("string"==typeof e)return o(e,r);var t={}.toString.call(e).slice(8,-1);return"Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t?Array.from(e):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?o(e,r):void 0}}(e))||r){t&&(e=t);var n=0,i=function(){};return{s:i,n:function(){return n>=e.length?{done:!0}:{done:!1,value:e[n++]}},e:function(e){throw e},f:i}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,u=!0,a=!1;return{s:function(){t=t.call(e)},n:function(){var e=t.next();return u=e.done,e},e:function(e){a=!0,s=e},f:function(){try{u||null==t.return||t.return()}finally{if(a)throw s}}}}function u(e,r,t){return(r=function(e){var r=function(e,r){if("object"!=typeof e||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,r);if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===r?String:Number)(e)}(e,"string");return"symbol"==typeof r?r:r+""}(r))in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e){return a=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},a(e)}function c(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(c=function(){return!!e})()}function f(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function p(e,r){return p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,r){return e.__proto__=r,e},p(e,r)}function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function l(e){var r="function"==typeof Map?new Map:void 0;return l=function(e){if(null===e||!function(e){try{return-1!==Function.toString.call(e).indexOf("[native code]")}catch(r){return"function"==typeof e}}(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==r){if(r.has(e))return r.get(e);r.set(e,t)}function t(){return function(e,r,t){if(c())return Reflect.construct.apply(null,arguments);var n=[null];n.push.apply(n,r);var o=new(e.bind.apply(e,n));return t&&p(o,t.prototype),o}(e,arguments,a(this).constructor)}return t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),p(t,e)},l(e)}var h,m={exports:{}},w={};function k(){if(h)return w;function e(o,i){var s=this;if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof o)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var u=[],a=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]="Promise";var c=function(e,r){u.push(e),a.push(r)};this.then=function(t,n){return new e((function(e,o){var i=t?r(t,e,o):e,s=n?r(n,e,o):o;c(i,s)}),s)};var f=function(e){return s.resolved=!0,s.rejected=!1,s.pending=!1,u.forEach((function(r){r(e)})),c=function(r,t){r(e)},f=p=function(){},s},p=function(e){return s.resolved=!1,s.rejected=!0,s.pending=!1,a.forEach((function(r){r(e)})),c=function(r,t){t(e)},f=p=function(){},s};this.cancel=function(){return i?i.cancel():p(new t),s},this.timeout=function(e){if(i)i.timeout(e);else{var r=setTimeout((function(){p(new n("Promise timed out after "+e+" ms"))}),e);s.always((function(){clearTimeout(r)}))}return s},o((function(e){f(e)}),(function(e){p(e)}))}function r(e,r,t){return function(n){try{var o=e(n);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(r,t):r(o)}catch(e){t(e)}}}function t(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function n(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return h=1,e.prototype.catch=function(e){return this.then(null,e)},e.prototype.always=function(e){return this.then(e,e)},e.prototype.finally=function(r){var t=this,n=function(){return new e((function(e){return e()})).then(r).then((function(){return t}))};return this.then(n,n)},e.all=function(r){return new e((function(e,t){var n=r.length,o=[];n?r.forEach((function(r,i){r.then((function(r){o[i]=r,0==--n&&e(o)}),(function(e){n=0,t(e)}))})):e(o)}))},e.defer=function(){var r={};return r.promise=new e((function(e,t){r.resolve=e,r.reject=t})),r},t.prototype=new Error,t.prototype.constructor=Error,t.prototype.name="CancellationError",e.CancellationError=t,n.prototype=new Error,n.prototype.constructor=Error,n.prototype.name="TimeoutError",e.TimeoutError=n,w.Promise=e,w}var y,v,g={};g.validateOptions=function(e,r,t){if(e){var n=e?Object.keys(e):[],o=n.find((function(e){return!r.includes(e)}));if(o)throw new Error('Object "'+t+'" contains an unknown option "'+o+'"');var i=r.find((function(e){return Object.prototype[e]&&!n.includes(e)}));if(i)throw new Error('Object "'+t+'" contains an inherited option "'+i+'" which is not defined in the object itself but in its prototype. Only plain objects are allowed. Please remove the option from the prototype or override it with a value "undefined".');return e}},g.workerOptsNames=["credentials","name","type"],g.forkOptsNames=["cwd","detached","env","execPath","execArgv","gid","serialization","signal","killSignal","silent","stdio","uid","windowsVerbatimArguments","timeout"],g.workerThreadOptsNames=["argv","env","eval","execArgv","stdin","stdout","stderr","workerData","trackUnmanagedFds","transferList","resourceLimits","name"];var b=k().Promise,O=n,T=g.validateOptions,x=g.forkOptsNames,E=g.workerThreadOptsNames,j=g.workerOptsNames,W="__workerpool-terminate__",_="__workerpool-cleanup__";function S(){var e=A();if(!e)throw new Error("WorkerPool: workerType = 'thread' is not supported, Node >= 11.7.0 required");return e}function P(){if("function"!=typeof Worker&&("object"!==("undefined"==typeof Worker?"undefined":d(Worker))||"function"!=typeof Worker.prototype.constructor))throw new Error("WorkerPool: Web Workers not supported")}function A(){try{return require("worker_threads")}catch(e){if("object"===d(e)&&null!==e&&"MODULE_NOT_FOUND"===e.code)return null;throw e}}function L(e,r,t){T(r,j,"workerOpts");var n=new t(e,r);return n.isBrowserWorker=!0,n.on=function(e,r){this.addEventListener(e,(function(e){r(e.data)}))},n.send=function(e,r){this.postMessage(e,r)},n}function N(e,r,t){var n,o;T(null==t?void 0:t.workerThreadOpts,E,"workerThreadOpts");var i=new r.Worker(e,function(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?f(Object(t),!0).forEach((function(r){u(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):f(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}({stdout:null!==(n=null==t?void 0:t.emitStdStreams)&&void 0!==n&&n,stderr:null!==(o=null==t?void 0:t.emitStdStreams)&&void 0!==o&&o},null==t?void 0:t.workerThreadOpts));return i.isWorkerThread=!0,i.send=function(e,r){this.postMessage(e,r)},i.kill=function(){return this.terminate(),!0},i.disconnect=function(){this.terminate()},null!=t&&t.emitStdStreams&&(i.stdout.on("data",(function(e){return i.emit("stdout",e)})),i.stderr.on("data",(function(e){return i.emit("stderr",e)}))),i}function M(e,r,t){T(r.forkOpts,x,"forkOpts");var n=t.fork(e,r.forkArgs,r.forkOpts),o=n.send;return n.send=function(e){return o.call(n,e)},r.emitStdStreams&&(n.stdout.on("data",(function(e){return n.emit("stdout",e)})),n.stderr.on("data",(function(e){return n.emit("stderr",e)}))),n.isChildProcess=!0,n}function U(e){e=e||{};var r=process.execArgv.join(" "),t=-1!==r.indexOf("--inspect"),n=-1!==r.indexOf("--debug-brk"),o=[];return t&&(o.push("--inspect="+e.debugPort),n&&o.push("--debug-brk")),process.execArgv.forEach((function(e){e.indexOf("--max-old-space-size")>-1&&o.push(e)})),Object.assign({},e,{forkArgs:e.forkArgs,forkOpts:Object.assign({},e.forkOpts,{execArgv:(e.forkOpts&&e.forkOpts.execArgv||[]).concat(o),stdio:e.emitStdStreams?"pipe":void 0})})}function C(e){for(var r=new Error(""),t=Object.keys(e),n=0;n<t.length;n++)r[t[n]]=e[t[n]];return r}function H(e,r){Object.values(e.processing).forEach((function(e){var t;return null==e||null===(t=e.options)||void 0===t?void 0:t.on(r)})),Object.values(e.tracking).forEach((function(e){var t;return null==e||null===(t=e.options)||void 0===t?void 0:t.on(r)}))}function q(e,r){var t=this,n=r||{};function o(e){for(var r in t.terminated=!0,t.processing)void 0!==t.processing[r]&&t.processing[r].resolver.reject(e);t.processing=Object.create(null)}this.script=e||function(){if("browser"===O.platform){if("undefined"==typeof Blob)throw new Error("Blob not supported by the browser");if(!window.URL||"function"!=typeof window.URL.createObjectURL)throw new Error("URL.createObjectURL not supported by the browser");var e=new Blob([v?y:(v=1,y='!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):(e="undefined"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){"use strict";function e(n){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError("Constructor must be called with the new operator");if("function"!=typeof e)throw new SyntaxError("Function parameter handler(resolve, reject) missing");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]="Promise";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c("Promise timed out after "+e+" ms"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&"function"==typeof o.then&&"function"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||"promise cancelled",this.stack=(new Error).stack}function c(e){this.message=e||"timeout exceeded",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name="CancellationError",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name="TimeoutError",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s="__workerpool-cleanup__",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var a;try{a=require("worker_threads")}catch(n){if("object"!==e(n)||null===n||"MODULE_NOT_FOUND"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on("disconnect",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error("Worker terminating"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error("Worker terminating"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on("message",(function(e){if("__workerpool-terminate__"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error(\'Unknown method "\'+e.method+\'"\');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send("ready")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\n//# sourceMappingURL=worker.min.js.map\n')],{type:"text/javascript"});return window.URL.createObjectURL(e)}return __dirname+"/worker.js"}(),this.worker=function(e,r){if("web"===r.workerType)return P(),L(e,r.workerOpts,Worker);if("thread"===r.workerType)return N(e,t=S(),r);if("process"!==r.workerType&&r.workerType){if("browser"===O.platform)return P(),L(e,r.workerOpts,Worker);var t=A();return t?N(e,t,r):M(e,U(r),require("child_process"))}return M(e,U(r),require("child_process"))}(this.script,n),this.debugPort=n.debugPort,this.forkOpts=n.forkOpts,this.forkArgs=n.forkArgs,this.workerOpts=n.workerOpts,this.workerThreadOpts=n.workerThreadOpts,this.workerTerminateTimeout=n.workerTerminateTimeout,e||(this.worker.ready=!0),this.requestQueue=[],this.worker.on("stdout",(function(e){H(t,{stdout:e.toString()})})),this.worker.on("stderr",(function(e){H(t,{stderr:e.toString()})})),this.worker.on("message",(function(e){if(!t.terminated)if("string"==typeof e&&"ready"===e)t.worker.ready=!0,function(){var e,r=s(t.requestQueue.splice(0));try{for(r.s();!(e=r.n()).done;){var n=e.value;t.worker.send(n.message,n.transfer)}}catch(e){r.e(e)}finally{r.f()}}();else{var r,n=e.id;if(void 0!==(r=t.processing[n]))e.isEvent?r.options&&"function"==typeof r.options.on&&r.options.on(e.payload):(delete t.processing[n],!0===t.terminating&&t.terminate(),e.error?r.resolver.reject(C(e.error)):r.resolver.resolve(e.result));else void 0!==(r=t.tracking[n])&&e.isEvent&&r.options&&"function"==typeof r.options.on&&r.options.on(e.payload);if(e.method===_){var o=t.tracking[e.id];void 0!==o&&(e.error?(clearTimeout(o.timeoutId),o.resolver.reject(C(e.error))):(t.tracking&&clearTimeout(o.timeoutId),o.resolver.reject(new F(o.error)))),delete t.tracking[n]}}}));var i=this.worker;this.worker.on("error",(function(e){o(new R("Workerpool Worker error: "+e.message,e))})),this.worker.on("exit",(function(e,r){var n="Workerpool Worker terminated Unexpectedly\n";n+="    exitCode: `"+e+"`\n",n+="    signalCode: `"+r+"`\n",n+="    workerpool.script: `"+t.script+"`\n",n+="    spawnArgs: `"+i.spawnargs+"`\n",n+="    spawnfile: `"+i.spawnfile+"`\n",n+="    stdout: `"+i.stdout+"`\n",n+="    stderr: `"+i.stderr+"`\n",o(new R(n))})),this.processing=Object.create(null),this.tracking=Object.create(null),this.terminating=!1,this.terminated=!1,this.cleaning=!1,this.terminationHandler=null,this.lastId=0}function F(e){this.error=e,this.stack=(new Error).stack}q.prototype.methods=function(){return this.exec("methods")},q.prototype.exec=function(e,r,t,n){t||(t=b.defer());var o=++this.lastId;this.processing[o]={id:o,resolver:t,options:n};var i={message:{id:o,method:e,params:r},transfer:n&&n.transfer};this.terminated?t.reject(new R("Worker is terminated")):this.worker.ready?this.worker.send(i.message,i.transfer):this.requestQueue.push(i);var s=this;return t.promise.catch((function(e){if(e instanceof b.CancellationError||e instanceof b.TimeoutError)return s.tracking[o]={id:o,resolver:b.defer(),options:n,error:e},delete s.processing[o],s.tracking[o].resolver.promise=s.tracking[o].resolver.promise.catch((function(e){if(delete s.tracking[o],e instanceof F)throw e.error;var r=s.terminateAndNotify(!0).then((function(){throw e}),(function(e){throw e}));return r})),s.worker.send({id:o,method:_}),s.tracking[o].timeoutId=setTimeout((function(){s.tracking[o].resolver.reject(e)}),s.workerTerminateTimeout),s.tracking[o].resolver.promise;throw e}))},q.prototype.busy=function(){return this.cleaning||Object.keys(this.processing).length>0},q.prototype.terminate=function(e,r){var t=this;if(e){for(var n in this.processing)void 0!==this.processing[n]&&this.processing[n].resolver.reject(new Error("Worker terminated"));this.processing=Object.create(null)}for(var o=0,i=Object.values(t.tracking);o<i.length;o++){var s=i[o];clearTimeout(s.timeoutId),s.resolver.reject(new Error("Worker Terminating"))}if(t.tracking=Object.create(null),"function"==typeof r&&(this.terminationHandler=r),this.busy())this.terminating=!0;else{var u=function(e){if(t.terminated=!0,t.cleaning=!1,null!=t.worker&&t.worker.removeAllListeners&&t.worker.removeAllListeners("message"),t.worker=null,t.terminating=!1,t.terminationHandler)t.terminationHandler(e,t);else if(e)throw e};if(this.worker){if("function"==typeof this.worker.kill){if(this.worker.killed)return void u(new Error("worker already killed!"));var a=setTimeout((function(){t.worker&&t.worker.kill()}),this.workerTerminateTimeout);return this.worker.once("exit",(function(){clearTimeout(a),t.worker&&(t.worker.killed=!0),u()})),this.worker.ready?this.worker.send(W):this.requestQueue.push({message:W}),void(this.cleaning=!0)}if("function"!=typeof this.worker.terminate)throw new Error("Failed to terminate worker");this.worker.terminate(),this.worker.killed=!0}u()}},q.prototype.terminateAndNotify=function(e,r){var t=b.defer();return r&&t.promise.timeout(r),this.terminate(e,(function(e,r){e?t.reject(e):t.resolve(r)})),t.promise};var R=function(e){function r(e,t){var n;return function(e,r){if(!(e instanceof r))throw new TypeError("Cannot call a class as a function")}(this,r),(n=i(this,r,[e||"worker terminated"])).cause=t,n}return function(e,r){if("function"!=typeof r&&null!==r)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(r&&r.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),r&&p(e,r)}(r,e),t=r,Object.defineProperty(t,"prototype",{writable:!1}),t;var t}(l(Error));m.exports=q,m.exports._tryRequireWorkerThreads=A,m.exports._setupProcessWorker=M,m.exports._setupBrowserWorker=L,m.exports._setupWorkerThreadWorker=N,m.exports.ensureWorkerThreads=S,m.exports.TerminateError=R;var D,z,J,I,Q=m.exports;function B(){if(I)return J;I=1;var e=k().Promise,r=Q,t=n,o=new(function(){if(z)return D;function e(){this.ports=Object.create(null),this.length=0}return z=1,D=e,e.prototype.nextAvailableStartingAt=function(e){for(;!0===this.ports[e];)e++;if(e>=65535)throw new Error("WorkerPool debug port limit reached: "+e+">= 65535");return this.ports[e]=!0,this.length++,e},e.prototype.releasePort=function(e){delete this.ports[e],this.length--},D}());function i(e,n){"string"==typeof e?this.script=e||null:(this.script=null,n=e),this.workers=[],this.tasks=[],n=n||{},this.forkArgs=Object.freeze(n.forkArgs||[]),this.forkOpts=Object.freeze(n.forkOpts||{}),this.workerOpts=Object.freeze(n.workerOpts||{}),this.workerThreadOpts=Object.freeze(n.workerThreadOpts||{}),this.debugPortStart=n.debugPortStart||43210,this.nodeWorker=n.nodeWorker,this.workerType=n.workerType||n.nodeWorker||"auto",this.maxQueueSize=n.maxQueueSize||1/0,this.workerTerminateTimeout=n.workerTerminateTimeout||1e3,this.onCreateWorker=n.onCreateWorker||function(){return null},this.onTerminateWorker=n.onTerminateWorker||function(){return null},this.emitStdStreams=n.emitStdStreams||!1,n&&"maxWorkers"in n?(!function(e){if(!s(e)||!u(e)||e<1)throw new TypeError("Option maxWorkers must be an integer number >= 1")}(n.maxWorkers),this.maxWorkers=n.maxWorkers):this.maxWorkers=Math.max((t.cpus||4)-1,1),n&&"minWorkers"in n&&("max"===n.minWorkers?this.minWorkers=this.maxWorkers:(!function(e){if(!s(e)||!u(e)||e<0)throw new TypeError("Option minWorkers must be an integer number >= 0")}(n.minWorkers),this.minWorkers=n.minWorkers,this.maxWorkers=Math.max(this.minWorkers,this.maxWorkers)),this._ensureMinWorkers()),this._boundNext=this._next.bind(this),"thread"===this.workerType&&r.ensureWorkerThreads()}function s(e){return"number"==typeof e}function u(e){return Math.round(e)==e}return i.prototype.exec=function(r,t,n){if(t&&!Array.isArray(t))throw new TypeError('Array expected as argument "params"');if("string"==typeof r){var o=e.defer();if(this.tasks.length>=this.maxQueueSize)throw new Error("Max queue size of "+this.maxQueueSize+" reached");var i=this.tasks,s={method:r,params:t,resolver:o,timeout:null,options:n};i.push(s);var u=o.promise.timeout;return o.promise.timeout=function(e){return-1!==i.indexOf(s)?(s.timeout=e,o.promise):u.call(o.promise,e)},this._next(),o.promise}if("function"==typeof r)return this.exec("run",[String(r),t],n);throw new TypeError('Function or string expected as argument "method"')},i.prototype.proxy=function(){if(arguments.length>0)throw new Error("No arguments expected");var e=this;return this.exec("methods").then((function(r){var t={};return r.forEach((function(r){t[r]=function(){return e.exec(r,Array.prototype.slice.call(arguments))}})),t}))},i.prototype._next=function(){if(this.tasks.length>0){var e=this._getWorker();if(e){var r=this,t=this.tasks.shift();if(t.resolver.promise.pending){var n=e.exec(t.method,t.params,t.resolver,t.options).then(r._boundNext).catch((function(){if(e.terminated)return r._removeWorker(e)})).then((function(){r._next()}));"number"==typeof t.timeout&&n.timeout(t.timeout)}else r._next()}}},i.prototype._getWorker=function(){for(var e=this.workers,r=0;r<e.length;r++){var t=e[r];if(!1===t.busy())return t}return e.length<this.maxWorkers?(t=this._createWorkerHandler(),e.push(t),t):null},i.prototype._removeWorker=function(r){var t=this;return o.releasePort(r.debugPort),this._removeWorkerFromList(r),this._ensureMinWorkers(),new e((function(e,n){r.terminate(!1,(function(o){t.onTerminateWorker({forkArgs:r.forkArgs,forkOpts:r.forkOpts,workerThreadOpts:r.workerThreadOpts,script:r.script}),o?n(o):e(r)}))}))},i.prototype._removeWorkerFromList=function(e){var r=this.workers.indexOf(e);-1!==r&&this.workers.splice(r,1)},i.prototype.terminate=function(r,t){var n=this;this.tasks.forEach((function(e){e.resolver.reject(new Error("Pool terminated"))})),this.tasks.length=0;var i=function(e){o.releasePort(e.debugPort),this._removeWorkerFromList(e)}.bind(this),s=[];return this.workers.slice().forEach((function(e){var o=e.terminateAndNotify(r,t).then(i).always((function(){n.onTerminateWorker({forkArgs:e.forkArgs,forkOpts:e.forkOpts,workerThreadOpts:e.workerThreadOpts,script:e.script})}));s.push(o)})),e.all(s)},i.prototype.stats=function(){var e=this.workers.length,r=this.workers.filter((function(e){return e.busy()})).length;return{totalWorkers:e,busyWorkers:r,idleWorkers:e-r,pendingTasks:this.tasks.length,activeTasks:r}},i.prototype._ensureMinWorkers=function(){if(this.minWorkers)for(var e=this.workers.length;e<this.minWorkers;e++)this.workers.push(this._createWorkerHandler())},i.prototype._createWorkerHandler=function(){var e=this.onCreateWorker({forkArgs:this.forkArgs,forkOpts:this.forkOpts,workerOpts:this.workerOpts,workerThreadOpts:this.workerThreadOpts,script:this.script})||{};return new r(e.script||this.script,{forkArgs:e.forkArgs||this.forkArgs,forkOpts:e.forkOpts||this.forkOpts,workerOpts:e.workerOpts||this.workerOpts,workerThreadOpts:e.workerThreadOpts||this.workerThreadOpts,debugPort:o.nextAvailableStartingAt(this.debugPortStart),workerType:this.workerType,workerTerminateTimeout:this.workerTerminateTimeout,emitStdStreams:this.emitStdStreams})},J=i}var V,$,G,K={};function X(){if($)return V;return $=1,V=function(e,r){this.message=e,this.transfer=r}}function Y(){return G||(G=1,function(e){var r=X(),t=k().Promise,n="__workerpool-cleanup__",o={exit:function(){}},i={addAbortListener:function(e){o.abortListeners.push(e)},emit:o.emit};if("undefined"!=typeof self&&"function"==typeof postMessage&&"function"==typeof addEventListener)o.on=function(e,r){addEventListener(e,(function(e){r(e.data)}))},o.send=function(e,r){r?postMessage(e,r):postMessage(e)};else{if("undefined"==typeof process)throw new Error("Script must be executed as a worker");var s;try{s=require("worker_threads")}catch(e){if("object"!==d(e)||null===e||"MODULE_NOT_FOUND"!==e.code)throw e}if(s&&null!==s.parentPort){var u=s.parentPort;o.send=u.postMessage.bind(u),o.on=u.on.bind(u),o.exit=process.exit.bind(process)}else o.on=process.on.bind(process),o.send=function(e){process.send(e)},o.on("disconnect",(function(){process.exit(1)})),o.exit=process.exit.bind(process)}function a(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function c(e){return e&&"function"==typeof e.then&&"function"==typeof e.catch}o.methods={},o.methods.run=function(e,r){var t=new Function("return ("+e+").apply(this, arguments);");return t.worker=i,t.apply(t,r)},o.methods.methods=function(){return Object.keys(o.methods)},o.terminationHandler=void 0,o.abortListenerTimeout=1e3,o.abortListeners=[],o.terminateAndExit=function(e){var r=function(){o.exit(e)};if(!o.terminationHandler)return r();var n=o.terminationHandler(e);return c(n)?(n.then(r,r),n):(r(),new t((function(e,r){r(new Error("Worker terminating"))})))},o.cleanup=function(e){if(!o.abortListeners.length)return o.send({id:e,method:n,error:a(new Error("Worker terminating"))}),new t((function(e){e()}));var r,i=o.abortListeners.map((function(e){return e()})),s=new t((function(e,t){r=setTimeout((function(){t(new Error("Timeout occured waiting for abort handler, killing worker"))}),o.abortListenerTimeout)})),u=t.all(i).then((function(){clearTimeout(r),o.abortListeners.length||(o.abortListeners=[])}),(function(){clearTimeout(r),o.exit()}));return new t((function(e,r){u.then(e,r),s.then(e,r)})).then((function(){o.send({id:e,method:n,error:null})}),(function(r){o.send({id:e,method:n,error:r?a(r):null})}))};var f=null;o.on("message",(function(e){if("__workerpool-terminate__"===e)return o.terminateAndExit(0);if(e.method===n)return o.cleanup(e.id);try{var t=o.methods[e.method];if(!t)throw new Error('Unknown method "'+e.method+'"');f=e.id;var i=t.apply(t,e.params);c(i)?i.then((function(t){t instanceof r?o.send({id:e.id,result:t.message,error:null},t.transfer):o.send({id:e.id,result:t,error:null}),f=null})).catch((function(r){o.send({id:e.id,result:null,error:a(r)}),f=null})):(i instanceof r?o.send({id:e.id,result:i.message,error:null},i.transfer):o.send({id:e.id,result:i,error:null}),f=null)}catch(r){o.send({id:e.id,result:null,error:a(r)})}})),o.register=function(e,r){if(e)for(var t in e)e.hasOwnProperty(t)&&(o.methods[t]=e[t],o.methods[t].worker=i);r&&(o.terminationHandler=r.onTerminate,o.abortListenerTimeout=r.abortListenerTimeout||1e3),o.send("ready")},o.emit=function(e){if(f){if(e instanceof r)return void o.send({id:f,isEvent:!0,payload:e.message},e.transfer);o.send({id:f,isEvent:!0,payload:e})}},e.add=o.register,e.emit=o.emit}(K)),K}var Z=n.platform,ee=n.isMainThread,re=n.cpus,te=Q.TerminateError;var ne=r.pool=function(e,r){return new(B())(e,r)};var oe=r.worker=function(e,r){Y().add(e,r)};var ie=r.workerEmit=function(e){Y().emit(e)},se=k().Promise,ue=r.Promise=se,ae=r.Transfer=X(),ce=r.platform=Z,fe=r.isMainThread=ee,pe=r.cpus=re,de=r.TerminateError=te;e.Promise=ue,e.TerminateError=de,e.Transfer=ae,e.cpus=pe,e.default=r,e.isMainThread=fe,e.platform=ce,e.pool=ne,e.worker=oe,e.workerEmit=ie,Object.defineProperty(e,"__esModule",{value:!0})}));
 //# sourceMappingURL=workerpool.min.js.map
diff --git a/dist/workerpool.min.js.map b/dist/workerpool.min.js.map
index d3cc1c96311f79d903d31d48c4af3e20d1cdbce9..5b7208111bf4ef6f050398583d15f058d5cb4a9f 100644
--- a/dist/workerpool.min.js.map
+++ b/dist/workerpool.min.js.map
@@ -1 +1 @@
-{"version":3,"file":"workerpool.min.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/WorkerHandler.js","../src/generated/embeddedWorker.js","../src/Pool.js","../src/debug-port-allocator.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n  /**\n   * @readonly\n   */\n  this[Symbol.toStringTag] = 'Promise';\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n  * Execute given callback when the promise either resolves or rejects.\n  * Same semantics as Node's Promise.finally()\n  * @param {Function | null | undefined} [fn]\n  * @returns {Promise} promise\n  */\nPromise.prototype.finally = function (fn) {\n  const me = this;\n\n  const final = function() {\n    return new Promise((resolve) => resolve())\n      .then(fn)\n      .then(() => me);\n  };\n\n  return this.then(final, final);\n}\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n */\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  Object.values(handler.processing)\n    .forEach(task => task?.options?.on(payload));\n  \n  Object.values(handler.tracking)\n    .forEach(task => task?.options?.on(payload)); \n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      } else {\n        // if the task is not the current, it might be tracked for cleanup\n        var task = me.tracking[id];\n        if (task !== undefined) {\n          if (response.isEvent) {\n            if (task.options && typeof task.options.on === 'function') {\n              task.options.on(response.payload);\n            }\n          }\n        } \n      }\n\n      if (response.method === CLEANUP_METHOD_ID) {\n        var trackedTask = me.tracking[response.id];\n        if (trackedTask !== undefined) {\n          if (response.error) {\n            clearTimeout(trackedTask.timeoutId);\n            trackedTask.resolver.reject(objectToError(response.error))\n          } else {\n            me.tracking && clearTimeout(trackedTask.timeoutId);\n            // if we do not encounter an error wrap the the original timeout error and reject\n            trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));\n          }\n        }\n        delete me.tracking[id];\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    \n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error', onError);\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new Error(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n  this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new Error('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      me.tracking[id] = {\n        id,\n        resolver: Promise.defer(),\n        options: options,\n        error,\n      };\n      \n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function(err) {\n        delete me.tracking[id];\n\n        // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination\n        // as the response from the worker did not contain an error. We still wish to throw the original timeout error\n        // to the caller.\n        if (err instanceof WrappedTimeoutError) {\n          throw err.error;\n        }\n\n        var promise = me.terminateAndNotify(true)\n          .then(function() { \n            throw err;\n          }, function(err) {\n            throw err;\n          });\n\n        return promise;\n      });\n \n      me.worker.send({\n        id,\n        method: CLEANUP_METHOD_ID \n      });\n      \n      \n      /**\n        * Sets a timeout to reject the cleanup operation if the message sent to the worker\n        * does not receive a response. see worker.tryCleanup for worker cleanup operations.\n        * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.\n        * \n        * We need this timeout in either case of a Timeout or Cancellation Error as if\n        * the worker does not send a message we still need to give a window of time for a response.\n        * \n        * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup\n        * operations will occure.\n      */\n      me.tracking[id].timeoutId = setTimeout(function() {\n          me.tracking[id].resolver.reject(error);\n      }, me.workerTerminateTimeout);\n\n      return me.tracking[id].resolver.promise;\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  // If we are terminating, cancel all tracked task for cleanup\n  for (var task of Object.values(me.tracking)) {\n    clearTimeout(task.timeoutId);\n    task.resolver.reject(new Error('Worker Terminating'));\n  }\n\n  me.tracking = Object.create(null);\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\n/**\n* Wrapper error type to denote that a TimeoutError has already been proceesed\n* and we should skip cleanup operations\n* @param {Promise.TimeoutError} timeoutError\n*/\nfunction WrappedTimeoutError(timeoutError) {\n  this.error = timeoutError;\n  this.stack = (new Error()).stack;\n}\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError(\\\"Constructor must be called with the new operator\\\");if(\\\"function\\\"!=typeof e)throw new SyntaxError(\\\"Function parameter handler(resolve, reject) missing\\\");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]=\\\"Promise\\\";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c(\\\"Promise timed out after \\\"+e+\\\" ms\\\"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&\\\"function\\\"==typeof o.then&&\\\"function\\\"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||\\\"promise cancelled\\\",this.stack=(new Error).stack}function c(e){this.message=e||\\\"timeout exceeded\\\",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name=\\\"CancellationError\\\",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name=\\\"TimeoutError\\\",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s=\\\"__workerpool-cleanup__\\\",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var a;try{a=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on(\\\"disconnect\\\",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(this, arguments);\\\");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error(\\\"Worker terminating\\\"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error(\\\"Worker terminating\\\"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error(\\\"Timeout occured waiting for abort handler, killing worker\\\"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send(\\\"ready\\\")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\nvar Transfer = require('./transfer');\n\n/**\n * worker must handle async cleanup handlers. Use custom Promise implementation. \n*/\nvar Promise = require('./Promise').Promise;\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n*/\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n\nvar TIMEOUT_DEFAULT = 1_000;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\n\n// api for in worker communication with parent process\n// works in both node.js and the browser\nvar publicWorker = {\n  /**\n   * Registers listeners which will trigger when a task is timed out or cancled. If all listeners resolve, the worker executing the given task will not be terminated.\n   * *Note*: If there is a blocking operation within a listener, the worker will be terminated.\n   * @param {() => Promise<void>} listener\n  */\n  addAbortListener: function(listener) {\n    worker.abortListeners.push(listener);\n  },\n\n  /**\n    * Emit an event from the worker thread to the main thread.\n    * @param {any} payload\n  */\n  emit: worker.emit\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  if (error && error.toJSON) {\n    return JSON.parse(JSON.stringify(error));\n  }\n\n  // turn a class like Error (having non-enumerable properties) into a plain object\n  return JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(this, arguments);');\n  f.worker = publicWorker;\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\nworker.abortListenerTimeout = TIMEOUT_DEFAULT;\n\n/**\n * Abort handlers for resolving errors which may cause a timeout or cancellation\n * to occur from a worker context\n */\nworker.abortListeners = [];\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns {Promise<void>}\n */\nworker.terminateAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n  \n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n\n    return result;\n  } else {\n    _exit();\n    return new Promise(function (_resolve, reject) {\n      reject(new Error(\"Worker terminating\"));\n    });\n  }\n}\n\n\n\n/**\n  * Called within the worker message handler to run abort handlers if registered to perform cleanup operations.\n  * @param {Integer} [requestId] id of task which is currently executing in the worker\n  * @return {Promise<void>}\n*/\nworker.cleanup = function(requestId) {\n\n  if (!worker.abortListeners.length) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: convertError(new Error('Worker terminating')),\n    });\n\n    // If there are no handlers registered, reject the promise with an error as we want the handler to be notified\n    // that cleanup should begin and the handler should be GCed.\n    return new Promise(function(resolve) { resolve(); });\n  }\n  \n\n  var _exit = function() {\n    worker.exit();\n  }\n\n  var _abort = function() {\n    if (!worker.abortListeners.length) {\n      worker.abortListeners = [];\n    }\n  }\n\n  const promises = worker.abortListeners.map(listener => listener());\n  let timerId;\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    timerId = setTimeout(function () { \n      reject(new Error('Timeout occured waiting for abort handler, killing worker'));\n    }, worker.abortListenerTimeout);\n  });\n\n  // Once a promise settles we need to clear the timeout to prevet fulfulling the promise twice \n  const settlePromise = Promise.all(promises).then(function() {\n    clearTimeout(timerId);\n    _abort();\n  }, function() {\n    clearTimeout(timerId);\n    _exit();\n  });\n\n  // Returns a promise which will result in one of the following cases\n  // - Resolve once all handlers resolve\n  // - Reject if one or more handlers exceed the 'abortListenerTimeout' interval\n  // - Reject if one or more handlers reject\n  // Upon one of the above cases a message will be sent to the handler with the result of the handler execution\n  // which will either kill the worker if the result contains an error, or keep it in the pool if the result\n  // does not contain an error.\n  return new Promise(function(resolve, reject) {\n    settlePromise.then(resolve, reject);\n    timeoutPromise.then(resolve, reject);\n  }).then(function() {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: null,\n    });\n  }, function(err) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: err ? convertError(err) : null,\n    });\n  });\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.terminateAndExit(0);\n  }\n\n  if (request.method === CLEANUP_METHOD_ID) {\n    return worker.cleanup(request.id);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err),\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n        worker.methods[name].worker = publicWorker;\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n    // register listener timeout or default to 1 second\n    worker.abortListenerTimeout = options.abortListenerTimeout || TIMEOUT_DEFAULT;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\n"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","this","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","Symbol","toStringTag","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","message","stack","Error","prototype","finally","final","all","promises","remaining","results","p","i","defer","resolver","promise","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","require$$0","environment","require$$1","_require$$2","require$$2","TERMINATE_METHOD_ID","CLEANUP_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","setupBrowserWorker","script","workerOpts","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","setupWorkerThreadWorker","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","setupProcessWorker","child_process","forkOpts","fork","forkArgs","call","isChildProcess","resolveForkOptions","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","values","processing","task","_task$options","tracking","_task$options2","WorkerHandler","_options","onError","id","terminated","create","Blob","window","URL","createObjectURL","blob","embeddedWorker","type","__dirname","getDefaultWorker","workerType","setupWorker","workerTerminateTimeout","ready","requestQueue","toString","response","_step","_iterator","_createForOfIteratorHelper","splice","n","done","request","value","err","e","dispatchQueuedRequests","isEvent","terminating","method","trackedTask","timeoutId","WrappedTimeoutError","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","timeoutError","methods","exec","params","catch","terminateAndNotify","busy","force","_i","_Object$values","cleanup","removeAllListeners","killed","cleanExitTimeout","once","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","DEBUG_PORT_ALLOCATOR","DebugPortAllocator","ports","debugPortAllocator","nextAvailableStartingAt","starting","releasePort","port","require$$3","Pool","workers","tasks","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","maxWorkers","isNumber","isInteger","TypeError","validateMaxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","round","Array","isArray","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","shift","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","Pool_1","Transfer","exit","publicWorker","addAbortListener","listener","abortListeners","parentPort","convertError","toJSON","JSON","parse","stringify","getOwnPropertyNames","isPromise","run","args","Function","apply","abortListenerTimeout","terminateAndExit","_exit","requestId","timerId","map","timeoutPromise","settlePromise","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit_1","workerEmit","require$$4","platform_1","isMainThread_1","cpus_1"],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"workerpool.min.js","sources":["../src/environment.js","../src/Promise.js","../src/validateOptions.js","../src/WorkerHandler.js","../src/generated/embeddedWorker.js","../src/Pool.js","../src/debug-port-allocator.js","../src/transfer.js","../src/worker.js","../src/index.js"],"sourcesContent":["\n// source: https://github.com/flexdinesh/browser-or-node\n// source: https://github.com/mozilla/pdf.js/blob/7ea0e40e588864cd938d1836ec61f1928d3877d3/src/shared/util.js#L24\nvar isNode = function (nodeProcess) {\n  return (\n    typeof nodeProcess !== 'undefined' &&\n    nodeProcess.versions != null &&\n    nodeProcess.versions.node != null &&\n    nodeProcess + '' === '[object process]'\n  );\n}\nmodule.exports.isNode = isNode\n\n// determines the JavaScript platform: browser or node\nmodule.exports.platform = typeof process !== 'undefined' && isNode(process)\n  ? 'node'\n  : 'browser';\n\n// determines whether the code is running in main thread or not\n// note that in node.js we have to check both worker_thread and child_process\nvar worker_threads = module.exports.platform === 'node' && require('worker_threads');\nmodule.exports.isMainThread = module.exports.platform === 'node'\n  ? ((!worker_threads || worker_threads.isMainThread) && !process.connected)\n  : typeof Window !== 'undefined';\n\n// determines the number of cpus available\nmodule.exports.cpus = module.exports.platform === 'browser'\n  ? self.navigator.hardwareConcurrency\n  : require('os').cpus().length;\n\n","'use strict';\n\n/**\n * Promise\n *\n * Inspired by https://gist.github.com/RubaXa/8501359 from RubaXa <trash@rubaxa.org>\n * @template T\n * @template [E=Error]\n * @param {Function} handler   Called as handler(resolve: Function, reject: Function)\n * @param {Promise} [parent]   Parent promise for propagation of cancel and timeout\n */\nfunction Promise(handler, parent) {\n  var me = this;\n\n  if (!(this instanceof Promise)) {\n    throw new SyntaxError('Constructor must be called with the new operator');\n  }\n\n  if (typeof handler !== 'function') {\n    throw new SyntaxError('Function parameter handler(resolve, reject) missing');\n  }\n\n  var _onSuccess = [];\n  var _onFail = [];\n\n  // status\n  /**\n   * @readonly\n   */\n  this.resolved = false;\n  /**\n   * @readonly\n   */\n  this.rejected = false;\n  /**\n   * @readonly\n   */\n  this.pending = true;\n  /**\n   * @readonly\n   */\n  this[Symbol.toStringTag] = 'Promise';\n\n  /**\n   * Process onSuccess and onFail callbacks: add them to the queue.\n   * Once the promise is resolved, the function _promise is replace.\n   * @param {Function} onSuccess\n   * @param {Function} onFail\n   * @private\n   */\n  var _process = function (onSuccess, onFail) {\n    _onSuccess.push(onSuccess);\n    _onFail.push(onFail);\n  };\n\n  /**\n   * Add an onSuccess callback and optionally an onFail callback to the Promise\n   * @template TT\n   * @template [TE=never]\n   * @param {(r: T) => TT | PromiseLike<TT>} onSuccess\n   * @param {(r: E) => TE | PromiseLike<TE>} [onFail]\n   * @returns {Promise<TT | TE, any>} promise\n   */\n  this.then = function (onSuccess, onFail) {\n    return new Promise(function (resolve, reject) {\n      var s = onSuccess ? _then(onSuccess, resolve, reject) : resolve;\n      var f = onFail    ? _then(onFail,    resolve, reject) : reject;\n\n      _process(s, f);\n    }, me);\n  };\n\n  /**\n   * Resolve the promise\n   * @param {*} result\n   * @type {Function}\n   */\n  var _resolve = function (result) {\n    // update status\n    me.resolved = true;\n    me.rejected = false;\n    me.pending = false;\n\n    _onSuccess.forEach(function (fn) {\n      fn(result);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onSuccess(result);\n    };\n\n    _resolve = _reject = function () { };\n\n    return me;\n  };\n\n  /**\n   * Reject the promise\n   * @param {Error} error\n   * @type {Function}\n   */\n  var _reject = function (error) {\n    // update status\n    me.resolved = false;\n    me.rejected = true;\n    me.pending = false;\n\n    _onFail.forEach(function (fn) {\n      fn(error);\n    });\n\n    _process = function (onSuccess, onFail) {\n      onFail(error);\n    };\n\n    _resolve = _reject = function () { }\n\n    return me;\n  };\n\n  /**\n   * Cancel the promise. This will reject the promise with a CancellationError\n   * @returns {this} self\n   */\n  this.cancel = function () {\n    if (parent) {\n      parent.cancel();\n    }\n    else {\n      _reject(new CancellationError());\n    }\n\n    return me;\n  };\n\n  /**\n   * Set a timeout for the promise. If the promise is not resolved within\n   * the time, the promise will be cancelled and a TimeoutError is thrown.\n   * If the promise is resolved in time, the timeout is removed.\n   * @param {number} delay     Delay in milliseconds\n   * @returns {this} self\n   */\n  this.timeout = function (delay) {\n    if (parent) {\n      parent.timeout(delay);\n    }\n    else {\n      var timer = setTimeout(function () {\n        _reject(new TimeoutError('Promise timed out after ' + delay + ' ms'));\n      }, delay);\n\n      me.always(function () {\n        clearTimeout(timer);\n      });\n    }\n\n    return me;\n  };\n\n  // attach handler passing the resolve and reject functions\n  handler(function (result) {\n    _resolve(result);\n  }, function (error) {\n    _reject(error);\n  });\n}\n\n/**\n * Execute given callback, then call resolve/reject based on the returned result\n * @param {Function} callback\n * @param {Function} resolve\n * @param {Function} reject\n * @returns {Function}\n * @private\n */\nfunction _then(callback, resolve, reject) {\n  return function (result) {\n    try {\n      var res = callback(result);\n      if (res && typeof res.then === 'function' && typeof res['catch'] === 'function') {\n        // method returned a promise\n        res.then(resolve, reject);\n      }\n      else {\n        resolve(res);\n      }\n    }\n    catch (error) {\n      reject(error);\n    }\n  }\n}\n\n/**\n * Add an onFail callback to the Promise\n * @template TT\n * @param {(error: E) => TT | PromiseLike<TT>} onFail\n * @returns {Promise<T | TT>} promise\n */\nPromise.prototype['catch'] = function (onFail) {\n  return this.then(null, onFail);\n};\n\n// TODO: add support for Promise.catch(Error, callback)\n// TODO: add support for Promise.catch(Error, Error, callback)\n\n/**\n * Execute given callback when the promise either resolves or rejects.\n * @template TT\n * @param {() => Promise<TT>} fn\n * @returns {Promise<TT>} promise\n */\nPromise.prototype.always = function (fn) {\n  return this.then(fn, fn);\n};\n\n/**\n  * Execute given callback when the promise either resolves or rejects.\n  * Same semantics as Node's Promise.finally()\n  * @param {Function | null | undefined} [fn]\n  * @returns {Promise} promise\n  */\nPromise.prototype.finally = function (fn) {\n  const me = this;\n\n  const final = function() {\n    return new Promise((resolve) => resolve())\n      .then(fn)\n      .then(() => me);\n  };\n\n  return this.then(final, final);\n}\n\n/**\n * Create a promise which resolves when all provided promises are resolved,\n * and fails when any of the promises resolves.\n * @param {Promise[]} promises\n * @returns {Promise<any[], any>} promise\n */\nPromise.all = function (promises){\n  return new Promise(function (resolve, reject) {\n    var remaining = promises.length,\n        results = [];\n\n    if (remaining) {\n      promises.forEach(function (p, i) {\n        p.then(function (result) {\n          results[i] = result;\n          remaining--;\n          if (remaining == 0) {\n            resolve(results);\n          }\n        }, function (error) {\n          remaining = 0;\n          reject(error);\n        });\n      });\n    }\n    else {\n      resolve(results);\n    }\n  });\n};\n\n/**\n * Create a promise resolver\n * @returns {{promise: Promise, resolve: Function, reject: Function}} resolver\n */\nPromise.defer = function () {\n  var resolver = {};\n\n  resolver.promise = new Promise(function (resolve, reject) {\n    resolver.resolve = resolve;\n    resolver.reject = reject;\n  });\n\n  return resolver;\n};\n\n/**\n * Create a cancellation error\n * @param {String} [message]\n * @extends Error\n */\nfunction CancellationError(message) {\n  this.message = message || 'promise cancelled';\n  this.stack = (new Error()).stack;\n}\n\nCancellationError.prototype = new Error();\nCancellationError.prototype.constructor = Error;\nCancellationError.prototype.name = 'CancellationError';\n\nPromise.CancellationError = CancellationError;\n\n\n/**\n * Create a timeout error\n * @param {String} [message]\n * @extends Error\n */\nfunction TimeoutError(message) {\n  this.message = message || 'timeout exceeded';\n  this.stack = (new Error()).stack;\n}\n\nTimeoutError.prototype = new Error();\nTimeoutError.prototype.constructor = Error;\nTimeoutError.prototype.name = 'TimeoutError';\n\nPromise.TimeoutError = TimeoutError;\n\n\nexports.Promise = Promise;\n","/**\n * Validate that the object only contains known option names\n * - Throws an error when unknown options are detected\n * - Throws an error when some of the allowed options are attached\n * @param {Object | undefined} options\n * @param {string[]} allowedOptionNames\n * @param {string} objectName\n * @retrun {Object} Returns the original options\n */\nexports.validateOptions = function validateOptions(options, allowedOptionNames, objectName) {\n  if (!options) {\n    return\n  }\n\n  var optionNames = options ?  Object.keys(options) : []\n\n  // check for unknown properties\n  var unknownOptionName = optionNames.find(optionName => !allowedOptionNames.includes(optionName))\n  if (unknownOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an unknown option \"' + unknownOptionName + '\"')\n  }\n\n  // check for inherited properties which are not present on the object itself\n  var illegalOptionName = allowedOptionNames.find(allowedOptionName => {\n    return Object.prototype[allowedOptionName] && !optionNames.includes(allowedOptionName)\n  })\n  if (illegalOptionName) {\n    throw new Error('Object \"' + objectName + '\" contains an inherited option \"' + illegalOptionName + '\" which is ' +\n      'not defined in the object itself but in its prototype. Only plain objects are allowed. ' +\n      'Please remove the option from the prototype or override it with a value \"undefined\".')\n  }\n\n  return options\n}\n\n// source: https://developer.mozilla.org/en-US/docs/Web/API/Worker/Worker\nexports.workerOptsNames = [\n  'credentials', 'name', 'type' ]\n\n// source: https://nodejs.org/api/child_process.html#child_processforkmodulepath-args-options\nexports.forkOptsNames = [\n  'cwd', 'detached', 'env', 'execPath', 'execArgv', 'gid', 'serialization',\n  'signal', 'killSignal', 'silent', 'stdio', 'uid', 'windowsVerbatimArguments',\n  'timeout'\n]\n\n// source: https://nodejs.org/api/worker_threads.html#new-workerfilename-options\nexports.workerThreadOptsNames = [\n  'argv', 'env', 'eval', 'execArgv', 'stdin', 'stdout', 'stderr', 'workerData',\n  'trackUnmanagedFds', 'transferList', 'resourceLimits', 'name'\n]\n","'use strict';\n\nvar {Promise} = require('./Promise');\nvar environment = require('./environment');\nconst {validateOptions, forkOptsNames, workerThreadOptsNames, workerOptsNames} = require(\"./validateOptions\");\n\n/**\n * Special message sent by parent which causes a child process worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n */\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n\nfunction ensureWorkerThreads() {\n  var WorkerThreads = tryRequireWorkerThreads()\n  if (!WorkerThreads) {\n    throw new Error('WorkerPool: workerType = \\'thread\\' is not supported, Node >= 11.7.0 required')\n  }\n\n  return WorkerThreads;\n}\n\n// check whether Worker is supported by the browser\nfunction ensureWebWorker() {\n  // Workaround for a bug in PhantomJS (Or QtWebkit): https://github.com/ariya/phantomjs/issues/14534\n  if (typeof Worker !== 'function' && (typeof Worker !== 'object' || typeof Worker.prototype.constructor !== 'function')) {\n    throw new Error('WorkerPool: Web Workers not supported');\n  }\n}\n\nfunction tryRequireWorkerThreads() {\n  try {\n    return require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads available (old version of node.js)\n      return null;\n    } else {\n      throw error;\n    }\n  }\n}\n\n// get the default worker script\nfunction getDefaultWorker() {\n  if (environment.platform === 'browser') {\n    // test whether the browser supports all features that we need\n    if (typeof Blob === 'undefined') {\n      throw new Error('Blob not supported by the browser');\n    }\n    if (!window.URL || typeof window.URL.createObjectURL !== 'function') {\n      throw new Error('URL.createObjectURL not supported by the browser');\n    }\n\n    // use embedded worker.js\n    var blob = new Blob([require('./generated/embeddedWorker')], {type: 'text/javascript'});\n    return window.URL.createObjectURL(blob);\n  }\n  else {\n    // use external worker.js in current directory\n    return __dirname + '/worker.js';\n  }\n}\n\nfunction setupWorker(script, options) {\n  if (options.workerType === 'web') { // browser only\n    ensureWebWorker();\n    return setupBrowserWorker(script, options.workerOpts, Worker);\n  } else if (options.workerType === 'thread') { // node.js only\n    WorkerThreads = ensureWorkerThreads();\n    return setupWorkerThreadWorker(script, WorkerThreads, options);\n  } else if (options.workerType === 'process' || !options.workerType) { // node.js only\n    return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n  } else { // options.workerType === 'auto' or undefined\n    if (environment.platform === 'browser') {\n      ensureWebWorker();\n      return setupBrowserWorker(script, options.workerOpts, Worker);\n    }\n    else { // environment.platform === 'node'\n      var WorkerThreads = tryRequireWorkerThreads();\n      if (WorkerThreads) {\n        return setupWorkerThreadWorker(script, WorkerThreads, options);\n      } else {\n        return setupProcessWorker(script, resolveForkOptions(options), require('child_process'));\n      }\n    }\n  }\n}\n\nfunction setupBrowserWorker(script, workerOpts, Worker) {\n  // validate the options right before creating the worker (not when creating the pool)\n  validateOptions(workerOpts, workerOptsNames, 'workerOpts')\n\n  // create the web worker\n  var worker = new Worker(script, workerOpts);\n\n  worker.isBrowserWorker = true;\n  // add node.js API to the web worker\n  worker.on = function (event, callback) {\n    this.addEventListener(event, function (message) {\n      callback(message.data);\n    });\n  };\n  worker.send = function (message, transfer) {\n    this.postMessage(message, transfer);\n  };\n  return worker;\n}\n\nfunction setupWorkerThreadWorker(script, WorkerThreads, options) {\n  // validate the options right before creating the worker thread (not when creating the pool)\n  validateOptions(options?.workerThreadOpts, workerThreadOptsNames, 'workerThreadOpts')\n\n  var worker = new WorkerThreads.Worker(script, {\n    stdout: options?.emitStdStreams ?? false, // pipe worker.STDOUT to process.STDOUT if not requested\n    stderr: options?.emitStdStreams ?? false,  // pipe worker.STDERR to process.STDERR if not requested\n    ...options?.workerThreadOpts\n  });\n  worker.isWorkerThread = true;\n  worker.send = function(message, transfer) {\n    this.postMessage(message, transfer);\n  };\n\n  worker.kill = function() {\n    this.terminate();\n    return true;\n  };\n\n  worker.disconnect = function() {\n    this.terminate();\n  };\n\n  if (options?.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  return worker;\n}\n\nfunction setupProcessWorker(script, options, child_process) {\n  // validate the options right before creating the child process (not when creating the pool)\n  validateOptions(options.forkOpts, forkOptsNames, 'forkOpts')\n\n  // no WorkerThreads, fallback to sub-process based workers\n  var worker = child_process.fork(\n    script,\n    options.forkArgs,\n    options.forkOpts\n  );\n\n  // ignore transfer argument since it is not supported by process\n  var send = worker.send;\n  worker.send = function (message) {\n    return send.call(worker, message);\n  };\n\n  if (options.emitStdStreams) {\n    worker.stdout.on('data', (data) => worker.emit(\"stdout\", data))\n    worker.stderr.on('data', (data) => worker.emit(\"stderr\", data))\n  }\n\n  worker.isChildProcess = true;\n  return worker;\n}\n\n// add debug flags to child processes if the node inspector is active\nfunction resolveForkOptions(opts) {\n  opts = opts || {};\n\n  var processExecArgv = process.execArgv.join(' ');\n  var inspectorActive = processExecArgv.indexOf('--inspect') !== -1;\n  var debugBrk = processExecArgv.indexOf('--debug-brk') !== -1;\n\n  var execArgv = [];\n  if (inspectorActive) {\n    execArgv.push('--inspect=' + opts.debugPort);\n\n    if (debugBrk) {\n      execArgv.push('--debug-brk');\n    }\n  }\n\n  process.execArgv.forEach(function(arg) {\n    if (arg.indexOf('--max-old-space-size') > -1) {\n      execArgv.push(arg)\n    }\n  })\n\n  return Object.assign({}, opts, {\n    forkArgs: opts.forkArgs,\n    forkOpts: Object.assign({}, opts.forkOpts, {\n      execArgv: (opts.forkOpts && opts.forkOpts.execArgv || [])\n      .concat(execArgv),\n      stdio: opts.emitStdStreams ? \"pipe\": undefined\n    })\n  });\n}\n\n/**\n * Converts a serialized error to Error\n * @param {Object} obj Error that has been serialized and parsed to object\n * @return {Error} The equivalent Error.\n */\nfunction objectToError (obj) {\n  var temp = new Error('')\n  var props = Object.keys(obj)\n\n  for (var i = 0; i < props.length; i++) {\n    temp[props[i]] = obj[props[i]]\n  }\n\n  return temp\n}\n\nfunction handleEmittedStdPayload(handler, payload) {\n  // TODO: refactor if parallel task execution gets added\n  Object.values(handler.processing)\n    .forEach(task => task?.options?.on(payload));\n  \n  Object.values(handler.tracking)\n    .forEach(task => task?.options?.on(payload)); \n}\n\n/**\n * A WorkerHandler controls a single worker. This worker can be a child process\n * on node.js or a WebWorker in a browser environment.\n * @param {String} [script] If no script is provided, a default worker with a\n *                          function run will be created.\n * @param {import('./types.js').WorkerPoolOptions} [_options] See docs\n * @constructor\n */\nfunction WorkerHandler(script, _options) {\n  var me = this;\n  var options = _options || {};\n\n  this.script = script || getDefaultWorker();\n  this.worker = setupWorker(this.script, options);\n  this.debugPort = options.debugPort;\n  this.forkOpts = options.forkOpts;\n  this.forkArgs = options.forkArgs;\n  this.workerOpts = options.workerOpts;\n  this.workerThreadOpts = options.workerThreadOpts\n  this.workerTerminateTimeout = options.workerTerminateTimeout;\n\n  // The ready message is only sent if the worker.add method is called (And the default script is not used)\n  if (!script) {\n    this.worker.ready = true;\n  }\n\n  // queue for requests that are received before the worker is ready\n  this.requestQueue = [];\n\n  this.worker.on(\"stdout\", function (data) {\n    handleEmittedStdPayload(me, {\"stdout\": data.toString()})\n  })\n  this.worker.on(\"stderr\", function (data) {\n    handleEmittedStdPayload(me, {\"stderr\": data.toString()})\n  })\n\n  this.worker.on('message', function (response) {\n    if (me.terminated) {\n      return;\n    }\n    if (typeof response === 'string' && response === 'ready') {\n      me.worker.ready = true;\n      dispatchQueuedRequests();\n    } else {\n      // find the task from the processing queue, and run the tasks callback\n      var id = response.id;\n      var task = me.processing[id];\n      if (task !== undefined) {\n        if (response.isEvent) {\n          if (task.options && typeof task.options.on === 'function') {\n            task.options.on(response.payload);\n          }\n        } else {\n          // remove the task from the queue\n          delete me.processing[id];\n\n          // test if we need to terminate\n          if (me.terminating === true) {\n            // complete worker termination if all tasks are finished\n            me.terminate();\n          }\n\n          // resolve the task's promise\n          if (response.error) {\n            task.resolver.reject(objectToError(response.error));\n          }\n          else {\n            task.resolver.resolve(response.result);\n          }\n        }\n      } else {\n        // if the task is not the current, it might be tracked for cleanup\n        var task = me.tracking[id];\n        if (task !== undefined) {\n          if (response.isEvent) {\n            if (task.options && typeof task.options.on === 'function') {\n              task.options.on(response.payload);\n            }\n          }\n        } \n      }\n\n      if (response.method === CLEANUP_METHOD_ID) {\n        var trackedTask = me.tracking[response.id];\n        if (trackedTask !== undefined) {\n          if (response.error) {\n            clearTimeout(trackedTask.timeoutId);\n            trackedTask.resolver.reject(objectToError(response.error))\n          } else {\n            me.tracking && clearTimeout(trackedTask.timeoutId);\n            // if we do not encounter an error wrap the the original timeout error and reject\n            trackedTask.resolver.reject(new WrappedTimeoutError(trackedTask.error));\n          }\n        }\n        delete me.tracking[id];\n      }\n    }\n  });\n\n  // reject all running tasks on worker error\n  function onError(error) {\n    me.terminated = true;\n\n    for (var id in me.processing) {\n      if (me.processing[id] !== undefined) {\n        me.processing[id].resolver.reject(error);\n      }\n    }\n    \n    me.processing = Object.create(null);\n  }\n\n  // send all queued requests to worker\n  function dispatchQueuedRequests()\n  {\n    for(const request of me.requestQueue.splice(0)) {\n      me.worker.send(request.message, request.transfer);\n    }\n  }\n\n  var worker = this.worker;\n  // listen for worker messages error and exit\n  this.worker.on('error',function (error) {\n    onError(new TerminateError('Workerpool Worker error: ' + error.message, error))\n  });\n  this.worker.on('exit', function (exitCode, signalCode) {\n    var message = 'Workerpool Worker terminated Unexpectedly\\n';\n\n    message += '    exitCode: `' + exitCode + '`\\n';\n    message += '    signalCode: `' + signalCode + '`\\n';\n\n    message += '    workerpool.script: `' +  me.script + '`\\n';\n    message += '    spawnArgs: `' +  worker.spawnargs + '`\\n';\n    message += '    spawnfile: `' + worker.spawnfile + '`\\n'\n\n    message += '    stdout: `' + worker.stdout + '`\\n'\n    message += '    stderr: `' + worker.stderr + '`\\n'\n\n    onError(new TerminateError(message));\n  });\n\n  this.processing = Object.create(null); // queue with tasks currently in progress\n  this.tracking = Object.create(null); // queue with tasks being monitored for cleanup status\n  this.terminating = false;\n  this.terminated = false;\n  this.cleaning = false;\n  this.terminationHandler = null;\n  this.lastId = 0;\n}\n\n/**\n * Get a list with methods available on the worker.\n * @return {Promise.<String[], Error>} methods\n */\nWorkerHandler.prototype.methods = function () {\n  return this.exec('methods');\n};\n\n/**\n * Execute a method with given parameters on the worker\n * @param {String} method\n * @param {Array} [params]\n * @param {{resolve: Function, reject: Function}} [resolver]\n * @param {import('./types.js').ExecOptions}  [options]\n * @return {Promise.<*, Error>} result\n */\nWorkerHandler.prototype.exec = function(method, params, resolver, options) {\n  if (!resolver) {\n    resolver = Promise.defer();\n  }\n\n  // generate a unique id for the task\n  var id = ++this.lastId;\n\n  // register a new task as being in progress\n  this.processing[id] = {\n    id: id,\n    resolver: resolver,\n    options: options\n  };\n\n  // build a JSON-RPC request\n  var request = {\n    message: {\n      id: id,\n      method: method,\n      params: params\n    },\n    transfer: options && options.transfer\n  };\n\n  if (this.terminated) {\n    resolver.reject(new TerminateError('Worker is terminated'));\n  } else if (this.worker.ready) {\n    // send the request to the worker\n    this.worker.send(request.message, request.transfer);\n  } else {\n    this.requestQueue.push(request);\n  }\n\n  // on cancellation, force the worker to terminate\n  var me = this;\n  return resolver.promise.catch(function (error) {\n    if (error instanceof Promise.CancellationError || error instanceof Promise.TimeoutError) {\n      me.tracking[id] = {\n        id,\n        resolver: Promise.defer(),\n        options: options,\n        error,\n      };\n      \n      // remove this task from the queue. It is already rejected (hence this\n      // catch event), and else it will be rejected again when terminating\n      delete me.processing[id];\n\n      me.tracking[id].resolver.promise = me.tracking[id].resolver.promise.catch(function(err) {\n        delete me.tracking[id];\n\n        // if we find the error is an instance of WrappedTimeoutError we know the error should not cause termination\n        // as the response from the worker did not contain an error. We still wish to throw the original timeout error\n        // to the caller.\n        if (err instanceof WrappedTimeoutError) {\n          throw err.error;\n        }\n\n        var promise = me.terminateAndNotify(true)\n          .then(function() { \n            throw err;\n          }, function(err) {\n            throw err;\n          });\n\n        return promise;\n      });\n \n      me.worker.send({\n        id,\n        method: CLEANUP_METHOD_ID \n      });\n      \n      \n      /**\n        * Sets a timeout to reject the cleanup operation if the message sent to the worker\n        * does not receive a response. see worker.tryCleanup for worker cleanup operations.\n        * Here we use the workerTerminateTimeout as the worker will be terminated if the timeout does invoke.\n        * \n        * We need this timeout in either case of a Timeout or Cancellation Error as if\n        * the worker does not send a message we still need to give a window of time for a response.\n        * \n        * The workerTermniateTimeout is used here if this promise is rejected the worker cleanup\n        * operations will occure.\n      */\n      me.tracking[id].timeoutId = setTimeout(function() {\n          me.tracking[id].resolver.reject(error);\n      }, me.workerTerminateTimeout);\n\n      return me.tracking[id].resolver.promise;\n    } else {\n      throw error;\n    }\n  })\n};\n\n/**\n * Test whether the worker is processing any tasks or cleaning up before termination.\n * @return {boolean} Returns true if the worker is busy\n */\nWorkerHandler.prototype.busy = function () {\n  return this.cleaning || Object.keys(this.processing).length > 0;\n};\n\n/**\n * Terminate the worker.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {function} [callback=null] If provided, will be called when process terminates.\n */\nWorkerHandler.prototype.terminate = function (force, callback) {\n  var me = this;\n  if (force) {\n    // cancel all tasks in progress\n    for (var id in this.processing) {\n      if (this.processing[id] !== undefined) {\n        this.processing[id].resolver.reject(new Error('Worker terminated'));\n      }\n    }\n\n    this.processing = Object.create(null);\n  }\n\n  // If we are terminating, cancel all tracked task for cleanup\n  for (var task of Object.values(me.tracking)) {\n    clearTimeout(task.timeoutId);\n    task.resolver.reject(new Error('Worker Terminating'));\n  }\n\n  me.tracking = Object.create(null);\n\n  if (typeof callback === 'function') {\n    this.terminationHandler = callback;\n  }\n  if (!this.busy()) {\n    // all tasks are finished. kill the worker\n    var cleanup = function(err) {\n      me.terminated = true;\n      me.cleaning = false;\n\n      if (me.worker != null && me.worker.removeAllListeners) {\n        // removeAllListeners is only available for child_process\n        me.worker.removeAllListeners('message');\n      }\n      me.worker = null;\n      me.terminating = false;\n      if (me.terminationHandler) {\n        me.terminationHandler(err, me);\n      } else if (err) {\n        throw err;\n      }\n    }\n\n    if (this.worker) {\n      if (typeof this.worker.kill === 'function') {\n        if (this.worker.killed) {\n          cleanup(new Error('worker already killed!'));\n          return;\n        }\n\n        // child process and worker threads\n        var cleanExitTimeout = setTimeout(function() {\n          if (me.worker) {\n            me.worker.kill();\n          }\n        }, this.workerTerminateTimeout);\n\n        this.worker.once('exit', function() {\n          clearTimeout(cleanExitTimeout);\n          if (me.worker) {\n            me.worker.killed = true;\n          }\n          cleanup();\n        });\n\n        if (this.worker.ready) {\n          this.worker.send(TERMINATE_METHOD_ID);\n        } else {\n          this.requestQueue.push({ message: TERMINATE_METHOD_ID });\n        }\n\n        // mark that the worker is cleaning up resources\n        // to prevent new tasks from being executed\n        this.cleaning = true;\n        return;\n      }\n      else if (typeof this.worker.terminate === 'function') {\n        this.worker.terminate(); // web worker\n        this.worker.killed = true;\n      }\n      else {\n        throw new Error('Failed to terminate worker');\n      }\n    }\n    cleanup();\n  }\n  else {\n    // we can't terminate immediately, there are still tasks being executed\n    this.terminating = true;\n  }\n};\n\n/**\n * Terminate the worker, returning a Promise that resolves when the termination has been done.\n * @param {boolean} [force=false]   If false (default), the worker is terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the worker will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<WorkerHandler, Error>}\n */\nWorkerHandler.prototype.terminateAndNotify = function (force, timeout) {\n  var resolver = Promise.defer();\n  if (timeout) {\n    resolver.promise.timeout(timeout);\n  }\n  this.terminate(force, function(err, worker) {\n    if (err) {\n      resolver.reject(err);\n    } else {\n      resolver.resolve(worker);\n    }\n  });\n  return resolver.promise;\n};\n\n/**\n* Wrapper error type to denote that a TimeoutError has already been proceesed\n* and we should skip cleanup operations\n* @param {Promise.TimeoutError} timeoutError\n*/\nfunction WrappedTimeoutError(timeoutError) {\n  this.error = timeoutError;\n  this.stack = (new Error()).stack;\n}\n\nclass TerminateError extends Error {\n  /**\n   * Create a timeout error\n   * @param {String} [message]\n   * @param {Error=} [cause]\n   */\n  constructor(message, cause) {\n    super(message || 'worker terminated');\n    this.cause = cause;\n  }\n}\n\nmodule.exports = WorkerHandler;\nmodule.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;\nmodule.exports._setupProcessWorker = setupProcessWorker;\nmodule.exports._setupBrowserWorker = setupBrowserWorker;\nmodule.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;\nmodule.exports.ensureWorkerThreads = ensureWorkerThreads;\nmodule.exports.TerminateError = TerminateError\n\n","/**\n * embeddedWorker.js contains an embedded version of worker.js.\n * This file is automatically generated,\n * changes made in this file will be overwritten.\n */\nmodule.exports = \"!function(e,n){\\\"object\\\"==typeof exports&&\\\"undefined\\\"!=typeof module?module.exports=n():\\\"function\\\"==typeof define&&define.amd?define(n):(e=\\\"undefined\\\"!=typeof globalThis?globalThis:e||self).worker=n()}(this,(function(){\\\"use strict\\\";function e(n){return e=\\\"function\\\"==typeof Symbol&&\\\"symbol\\\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\\\"function\\\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\\\"symbol\\\":typeof e},e(n)}function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\\\"default\\\")?e.default:e}var t={};var r=function(e,n){this.message=e,this.transfer=n},o={};function i(e,n){var t=this;if(!(this instanceof i))throw new SyntaxError(\\\"Constructor must be called with the new operator\\\");if(\\\"function\\\"!=typeof e)throw new SyntaxError(\\\"Function parameter handler(resolve, reject) missing\\\");var r=[],o=[];this.resolved=!1,this.rejected=!1,this.pending=!0,this[Symbol.toStringTag]=\\\"Promise\\\";var a=function(e,n){r.push(e),o.push(n)};this.then=function(e,n){return new i((function(t,r){var o=e?s(e,t,r):t,i=n?s(n,t,r):r;a(o,i)}),t)};var f=function(e){return t.resolved=!0,t.rejected=!1,t.pending=!1,r.forEach((function(n){n(e)})),a=function(n,t){n(e)},f=d=function(){},t},d=function(e){return t.resolved=!1,t.rejected=!0,t.pending=!1,o.forEach((function(n){n(e)})),a=function(n,t){t(e)},f=d=function(){},t};this.cancel=function(){return n?n.cancel():d(new u),t},this.timeout=function(e){if(n)n.timeout(e);else{var r=setTimeout((function(){d(new c(\\\"Promise timed out after \\\"+e+\\\" ms\\\"))}),e);t.always((function(){clearTimeout(r)}))}return t},e((function(e){f(e)}),(function(e){d(e)}))}function s(e,n,t){return function(r){try{var o=e(r);o&&\\\"function\\\"==typeof o.then&&\\\"function\\\"==typeof o.catch?o.then(n,t):n(o)}catch(e){t(e)}}}function u(e){this.message=e||\\\"promise cancelled\\\",this.stack=(new Error).stack}function c(e){this.message=e||\\\"timeout exceeded\\\",this.stack=(new Error).stack}return i.prototype.catch=function(e){return this.then(null,e)},i.prototype.always=function(e){return this.then(e,e)},i.prototype.finally=function(e){var n=this,t=function(){return new i((function(e){return e()})).then(e).then((function(){return n}))};return this.then(t,t)},i.all=function(e){return new i((function(n,t){var r=e.length,o=[];r?e.forEach((function(e,i){e.then((function(e){o[i]=e,0==--r&&n(o)}),(function(e){r=0,t(e)}))})):n(o)}))},i.defer=function(){var e={};return e.promise=new i((function(n,t){e.resolve=n,e.reject=t})),e},u.prototype=new Error,u.prototype.constructor=Error,u.prototype.name=\\\"CancellationError\\\",i.CancellationError=u,c.prototype=new Error,c.prototype.constructor=Error,c.prototype.name=\\\"TimeoutError\\\",i.TimeoutError=c,o.Promise=i,function(n){var t=r,i=o.Promise,s=\\\"__workerpool-cleanup__\\\",u={exit:function(){}},c={addAbortListener:function(e){u.abortListeners.push(e)},emit:u.emit};if(\\\"undefined\\\"!=typeof self&&\\\"function\\\"==typeof postMessage&&\\\"function\\\"==typeof addEventListener)u.on=function(e,n){addEventListener(e,(function(e){n(e.data)}))},u.send=function(e,n){n?postMessage(e,n):postMessage(e)};else{if(\\\"undefined\\\"==typeof process)throw new Error(\\\"Script must be executed as a worker\\\");var a;try{a=require(\\\"worker_threads\\\")}catch(n){if(\\\"object\\\"!==e(n)||null===n||\\\"MODULE_NOT_FOUND\\\"!==n.code)throw n}if(a&&null!==a.parentPort){var f=a.parentPort;u.send=f.postMessage.bind(f),u.on=f.on.bind(f),u.exit=process.exit.bind(process)}else u.on=process.on.bind(process),u.send=function(e){process.send(e)},u.on(\\\"disconnect\\\",(function(){process.exit(1)})),u.exit=process.exit.bind(process)}function d(e){return e&&e.toJSON?JSON.parse(JSON.stringify(e)):JSON.parse(JSON.stringify(e,Object.getOwnPropertyNames(e)))}function l(e){return e&&\\\"function\\\"==typeof e.then&&\\\"function\\\"==typeof e.catch}u.methods={},u.methods.run=function(e,n){var t=new Function(\\\"return (\\\"+e+\\\").apply(this, arguments);\\\");return t.worker=c,t.apply(t,n)},u.methods.methods=function(){return Object.keys(u.methods)},u.terminationHandler=void 0,u.abortListenerTimeout=1e3,u.abortListeners=[],u.terminateAndExit=function(e){var n=function(){u.exit(e)};if(!u.terminationHandler)return n();var t=u.terminationHandler(e);return l(t)?(t.then(n,n),t):(n(),new i((function(e,n){n(new Error(\\\"Worker terminating\\\"))})))},u.cleanup=function(e){if(!u.abortListeners.length)return u.send({id:e,method:s,error:d(new Error(\\\"Worker terminating\\\"))}),new i((function(e){e()}));var n,t=u.abortListeners.map((function(e){return e()})),r=new i((function(e,t){n=setTimeout((function(){t(new Error(\\\"Timeout occured waiting for abort handler, killing worker\\\"))}),u.abortListenerTimeout)})),o=i.all(t).then((function(){clearTimeout(n),u.abortListeners.length||(u.abortListeners=[])}),(function(){clearTimeout(n),u.exit()}));return new i((function(e,n){o.then(e,n),r.then(e,n)})).then((function(){u.send({id:e,method:s,error:null})}),(function(n){u.send({id:e,method:s,error:n?d(n):null})}))};var p=null;u.on(\\\"message\\\",(function(e){if(\\\"__workerpool-terminate__\\\"===e)return u.terminateAndExit(0);if(e.method===s)return u.cleanup(e.id);try{var n=u.methods[e.method];if(!n)throw new Error('Unknown method \\\"'+e.method+'\\\"');p=e.id;var r=n.apply(n,e.params);l(r)?r.then((function(n){n instanceof t?u.send({id:e.id,result:n.message,error:null},n.transfer):u.send({id:e.id,result:n,error:null}),p=null})).catch((function(n){u.send({id:e.id,result:null,error:d(n)}),p=null})):(r instanceof t?u.send({id:e.id,result:r.message,error:null},r.transfer):u.send({id:e.id,result:r,error:null}),p=null)}catch(n){u.send({id:e.id,result:null,error:d(n)})}})),u.register=function(e,n){if(e)for(var t in e)e.hasOwnProperty(t)&&(u.methods[t]=e[t],u.methods[t].worker=c);n&&(u.terminationHandler=n.onTerminate,u.abortListenerTimeout=n.abortListenerTimeout||1e3),u.send(\\\"ready\\\")},u.emit=function(e){if(p){if(e instanceof t)return void u.send({id:p,isEvent:!0,payload:e.message},e.transfer);u.send({id:p,isEvent:!0,payload:e})}},n.add=u.register,n.emit=u.emit}(t),n(t)}));\\n//# sourceMappingURL=worker.min.js.map\\n\";\n","var {Promise} = require('./Promise');\nvar WorkerHandler = require('./WorkerHandler');\nvar environment = require('./environment');\nvar DebugPortAllocator = require('./debug-port-allocator');\nvar DEBUG_PORT_ALLOCATOR = new DebugPortAllocator();\n/**\n * A pool to manage workers, which can be created using the function workerpool.pool.\n *\n * @param {String} [script]   Optional worker script\n * @param {import('./types.js').WorkerPoolOptions} [options]  See docs\n * @constructor\n */\nfunction Pool(script, options) {\n  if (typeof script === 'string') {\n    /** @readonly */\n    this.script = script || null;\n  }\n  else {\n    this.script = null;\n    options = script;\n  }\n\n  /** @private */\n  this.workers = [];  // queue with all workers\n  /** @private */\n  this.tasks = [];    // queue with tasks awaiting execution\n\n  options = options || {};\n\n  /** @readonly */\n  this.forkArgs = Object.freeze(options.forkArgs || []);\n  /** @readonly */\n  this.forkOpts = Object.freeze(options.forkOpts || {});\n  /** @readonly */\n  this.workerOpts = Object.freeze(options.workerOpts || {});\n  /** @readonly */\n  this.workerThreadOpts = Object.freeze(options.workerThreadOpts || {})\n  /** @private */\n  this.debugPortStart = (options.debugPortStart || 43210);\n  /** @readonly @deprecated */\n  this.nodeWorker = options.nodeWorker;\n  /** @readonly\n   * @type {'auto' | 'web' | 'process' | 'thread'}\n   */\n  this.workerType = options.workerType || options.nodeWorker || 'auto'\n  /** @readonly */\n  this.maxQueueSize = options.maxQueueSize || Infinity;\n  /** @readonly */\n  this.workerTerminateTimeout = options.workerTerminateTimeout || 1000;\n\n  /** @readonly */\n  this.onCreateWorker = options.onCreateWorker || (() => null);\n  /** @readonly */\n  this.onTerminateWorker = options.onTerminateWorker || (() => null);\n\n  /** @readonly */\n  this.emitStdStreams = options.emitStdStreams || false\n\n  // configuration\n  if (options && 'maxWorkers' in options) {\n    validateMaxWorkers(options.maxWorkers);\n    /** @readonly */\n    this.maxWorkers = options.maxWorkers;\n  }\n  else {\n    this.maxWorkers = Math.max((environment.cpus || 4) - 1, 1);\n  }\n\n  if (options && 'minWorkers' in options) {\n    if(options.minWorkers === 'max') {\n      /** @readonly */\n      this.minWorkers = this.maxWorkers;\n    } else {\n      validateMinWorkers(options.minWorkers);\n      this.minWorkers = options.minWorkers;\n      this.maxWorkers = Math.max(this.minWorkers, this.maxWorkers);     // in case minWorkers is higher than maxWorkers\n    }\n    this._ensureMinWorkers();\n  }\n\n  /** @private */\n  this._boundNext = this._next.bind(this);\n\n\n  if (this.workerType === 'thread') {\n    WorkerHandler.ensureWorkerThreads();\n  }\n}\n\n\n/**\n * Execute a function on a worker.\n *\n * Example usage:\n *\n *   var pool = new Pool()\n *\n *   // call a function available on the worker\n *   pool.exec('fibonacci', [6])\n *\n *   // offload a function\n *   function add(a, b) {\n *     return a + b\n *   };\n *   pool.exec(add, [2, 4])\n *       .then(function (result) {\n *         console.log(result); // outputs 6\n *       })\n *       .catch(function(error) {\n *         console.log(error);\n *       });\n * @template { (...args: any[]) => any } T\n * @param {String | T} method  Function name or function.\n *                                    If `method` is a string, the corresponding\n *                                    method on the worker will be executed\n *                                    If `method` is a Function, the function\n *                                    will be stringified and executed via the\n *                                    workers built-in function `run(fn, args)`.\n * @param {Parameters<T> | null} [params]  Function arguments applied when calling the function\n * @param {import('./types.js').ExecOptions} [options]  Options\n * @return {Promise<ReturnType<T>>}\n */\nPool.prototype.exec = function (method, params, options) {\n  // validate type of arguments\n  if (params && !Array.isArray(params)) {\n    throw new TypeError('Array expected as argument \"params\"');\n  }\n\n  if (typeof method === 'string') {\n    var resolver = Promise.defer();\n\n    if (this.tasks.length >= this.maxQueueSize) {\n      throw new Error('Max queue size of ' + this.maxQueueSize + ' reached');\n    }\n\n    // add a new task to the queue\n    var tasks = this.tasks;\n    var task = {\n      method:  method,\n      params:  params,\n      resolver: resolver,\n      timeout: null,\n      options: options\n    };\n    tasks.push(task);\n\n    // replace the timeout method of the Promise with our own,\n    // which starts the timer as soon as the task is actually started\n    var originalTimeout = resolver.promise.timeout;\n    resolver.promise.timeout = function timeout (delay) {\n      if (tasks.indexOf(task) !== -1) {\n        // task is still queued -> start the timer later on\n        task.timeout = delay;\n        return resolver.promise;\n      }\n      else {\n        // task is already being executed -> start timer immediately\n        return originalTimeout.call(resolver.promise, delay);\n      }\n    };\n\n    // trigger task execution\n    this._next();\n\n    return resolver.promise;\n  }\n  else if (typeof method === 'function') {\n    // send stringified function and function arguments to worker\n    return this.exec('run', [String(method), params], options);\n  }\n  else {\n    throw new TypeError('Function or string expected as argument \"method\"');\n  }\n};\n\n/**\n * Create a proxy for current worker. Returns an object containing all\n * methods available on the worker. All methods return promises resolving the methods result.\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @return {Promise<import('./types.js').Proxy<T>, Error>} Returns a promise which resolves with a proxy object\n */\nPool.prototype.proxy = function () {\n  if (arguments.length > 0) {\n    throw new Error('No arguments expected');\n  }\n\n  var pool = this;\n  return this.exec('methods')\n      .then(function (methods) {\n        var proxy = {};\n\n        methods.forEach(function (method) {\n          proxy[method] = function () {\n            return pool.exec(method, Array.prototype.slice.call(arguments));\n          }\n        });\n\n        return proxy;\n      });\n};\n\n/**\n * Creates new array with the results of calling a provided callback function\n * on every element in this array.\n * @param {Array} array\n * @param {function} callback  Function taking two arguments:\n *                             `callback(currentValue, index)`\n * @return {Promise.<Array>} Returns a promise which resolves  with an Array\n *                           containing the results of the callback function\n *                           executed for each of the array elements.\n */\n/* TODO: implement map\nPool.prototype.map = function (array, callback) {\n};\n*/\n\n/**\n * Grab the first task from the queue, find a free worker, and assign the\n * worker to the task.\n * @private\n */\nPool.prototype._next = function () {\n  if (this.tasks.length > 0) {\n    // there are tasks in the queue\n\n    // find an available worker\n    var worker = this._getWorker();\n    if (worker) {\n      // get the first task from the queue\n      var me = this;\n      var task = this.tasks.shift();\n\n      // check if the task is still pending (and not cancelled -> promise rejected)\n      if (task.resolver.promise.pending) {\n        // send the request to the worker\n        var promise = worker.exec(task.method, task.params, task.resolver, task.options)\n          .then(me._boundNext)\n          .catch(function () {\n            // if the worker crashed and terminated, remove it from the pool\n            if (worker.terminated) {\n              return me._removeWorker(worker);\n            }\n          }).then(function() {\n            me._next(); // trigger next task in the queue\n          });\n\n        // start queued timer now\n        if (typeof task.timeout === 'number') {\n          promise.timeout(task.timeout);\n        }\n      } else {\n        // The task taken was already complete (either rejected or resolved), so just trigger next task in the queue\n        me._next();\n      }\n    }\n  }\n};\n\n/**\n * Get an available worker. If no worker is available and the maximum number\n * of workers isn't yet reached, a new worker will be created and returned.\n * If no worker is available and the maximum number of workers is reached,\n * null will be returned.\n *\n * @return {WorkerHandler | null} worker\n * @private\n */\nPool.prototype._getWorker = function() {\n  // find a non-busy worker\n  var workers = this.workers;\n  for (var i = 0; i < workers.length; i++) {\n    var worker = workers[i];\n    if (worker.busy() === false) {\n      return worker;\n    }\n  }\n\n  if (workers.length < this.maxWorkers) {\n    // create a new worker\n    worker = this._createWorkerHandler();\n    workers.push(worker);\n    return worker;\n  }\n\n  return null;\n};\n\n/**\n * Remove a worker from the pool.\n * Attempts to terminate worker if not already terminated, and ensures the minimum\n * pool size is met.\n * @param {WorkerHandler} worker\n * @return {Promise<WorkerHandler>}\n * @private\n */\nPool.prototype._removeWorker = function(worker) {\n  var me = this;\n\n  DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n  // _removeWorker will call this, but we need it to be removed synchronously\n  this._removeWorkerFromList(worker);\n  // If minWorkers set, spin up new workers to replace the crashed ones\n  this._ensureMinWorkers();\n  // terminate the worker (if not already terminated)\n  return new Promise(function(resolve, reject) {\n    worker.terminate(false, function(err) {\n      me.onTerminateWorker({\n        forkArgs: worker.forkArgs,\n        forkOpts: worker.forkOpts,\n        workerThreadOpts: worker.workerThreadOpts,\n        script: worker.script\n      });\n      if (err) {\n        reject(err);\n      } else {\n        resolve(worker);\n      }\n    });\n  });\n};\n\n/**\n * Remove a worker from the pool list.\n * @param {WorkerHandler} worker\n * @private\n */\nPool.prototype._removeWorkerFromList = function(worker) {\n  // remove from the list with workers\n  var index = this.workers.indexOf(worker);\n  if (index !== -1) {\n    this.workers.splice(index, 1);\n  }\n};\n\n/**\n * Close all active workers. Tasks currently being executed will be finished first.\n * @param {boolean} [force=false]   If false (default), the workers are terminated\n *                                  after finishing all tasks currently in\n *                                  progress. If true, the workers will be\n *                                  terminated immediately.\n * @param {number} [timeout]        If provided and non-zero, worker termination promise will be rejected\n *                                  after timeout if worker process has not been terminated.\n * @return {Promise.<void, Error>}\n */\nPool.prototype.terminate = function (force, timeout) {\n  var me = this;\n\n  // cancel any pending tasks\n  this.tasks.forEach(function (task) {\n    task.resolver.reject(new Error('Pool terminated'));\n  });\n  this.tasks.length = 0;\n\n  var f = function (worker) {\n    DEBUG_PORT_ALLOCATOR.releasePort(worker.debugPort);\n    this._removeWorkerFromList(worker);\n  };\n  var removeWorker = f.bind(this);\n\n  var promises = [];\n  var workers = this.workers.slice();\n  workers.forEach(function (worker) {\n    var termPromise = worker.terminateAndNotify(force, timeout)\n      .then(removeWorker)\n      .always(function() {\n        me.onTerminateWorker({\n          forkArgs: worker.forkArgs,\n          forkOpts: worker.forkOpts,\n          workerThreadOpts: worker.workerThreadOpts,\n          script: worker.script\n        });\n      });\n    promises.push(termPromise);\n  });\n  return Promise.all(promises);\n};\n\n/**\n * Retrieve statistics on tasks and workers.\n * @return {{totalWorkers: number, busyWorkers: number, idleWorkers: number, pendingTasks: number, activeTasks: number}} Returns an object with statistics\n */\nPool.prototype.stats = function () {\n  var totalWorkers = this.workers.length;\n  var busyWorkers = this.workers.filter(function (worker) {\n    return worker.busy();\n  }).length;\n\n  return {\n    totalWorkers:  totalWorkers,\n    busyWorkers:   busyWorkers,\n    idleWorkers:   totalWorkers - busyWorkers,\n\n    pendingTasks:  this.tasks.length,\n    activeTasks:   busyWorkers\n  };\n};\n\n/**\n * Ensures that a minimum of minWorkers is up and running\n * @private\n */\nPool.prototype._ensureMinWorkers = function() {\n  if (this.minWorkers) {\n    for(var i = this.workers.length; i < this.minWorkers; i++) {\n      this.workers.push(this._createWorkerHandler());\n    }\n  }\n};\n\n/**\n * Helper function to create a new WorkerHandler and pass all options.\n * @return {WorkerHandler}\n * @private\n */\nPool.prototype._createWorkerHandler = function () {\n  const overriddenParams = this.onCreateWorker({\n    forkArgs: this.forkArgs,\n    forkOpts: this.forkOpts,\n    workerOpts: this.workerOpts,\n    workerThreadOpts: this.workerThreadOpts,\n    script: this.script\n  }) || {};\n\n  return new WorkerHandler(overriddenParams.script || this.script, {\n    forkArgs: overriddenParams.forkArgs || this.forkArgs,\n    forkOpts: overriddenParams.forkOpts || this.forkOpts,\n    workerOpts: overriddenParams.workerOpts || this.workerOpts,\n    workerThreadOpts: overriddenParams.workerThreadOpts || this.workerThreadOpts,\n    debugPort: DEBUG_PORT_ALLOCATOR.nextAvailableStartingAt(this.debugPortStart),\n    workerType: this.workerType,\n    workerTerminateTimeout: this.workerTerminateTimeout,\n    emitStdStreams: this.emitStdStreams,\n  });\n}\n\n/**\n * Ensure that the maxWorkers option is an integer >= 1\n * @param {*} maxWorkers\n * @returns {boolean} returns true maxWorkers has a valid value\n */\nfunction validateMaxWorkers(maxWorkers) {\n  if (!isNumber(maxWorkers) || !isInteger(maxWorkers) || maxWorkers < 1) {\n    throw new TypeError('Option maxWorkers must be an integer number >= 1');\n  }\n}\n\n/**\n * Ensure that the minWorkers option is an integer >= 0\n * @param {*} minWorkers\n * @returns {boolean} returns true when minWorkers has a valid value\n */\nfunction validateMinWorkers(minWorkers) {\n  if (!isNumber(minWorkers) || !isInteger(minWorkers) || minWorkers < 0) {\n    throw new TypeError('Option minWorkers must be an integer number >= 0');\n  }\n}\n\n/**\n * Test whether a variable is a number\n * @param {*} value\n * @returns {boolean} returns true when value is a number\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Test whether a number is an integer\n * @param {number} value\n * @returns {boolean} Returns true if value is an integer\n */\nfunction isInteger(value) {\n  return Math.round(value) == value;\n}\n\nmodule.exports = Pool;\n","'use strict';\n\nvar MAX_PORTS = 65535;\nmodule.exports = DebugPortAllocator;\nfunction DebugPortAllocator() {\n  this.ports = Object.create(null);\n  this.length = 0;\n}\n\nDebugPortAllocator.prototype.nextAvailableStartingAt = function(starting) {\n  while (this.ports[starting] === true) {\n    starting++;\n  }\n\n  if (starting >= MAX_PORTS) {\n    throw new Error('WorkerPool debug port limit reached: ' + starting + '>= ' + MAX_PORTS );\n  }\n\n  this.ports[starting] = true;\n  this.length++;\n  return starting;\n};\n\nDebugPortAllocator.prototype.releasePort = function(port) {\n  delete this.ports[port];\n  this.length--;\n};\n\n","/**\n * The helper class for transferring data from the worker to the main thread.\n *\n * @param {Object} message The object to deliver to the main thread.\n * @param {Object[]} transfer An array of transferable Objects to transfer ownership of.\n */\nfunction Transfer(message, transfer) {\n  this.message = message;\n  this.transfer = transfer;\n}\n\nmodule.exports = Transfer;\n","/**\n * worker must be started as a child process or a web worker.\n * It listens for RPC messages from the parent process.\n */\n\nvar Transfer = require('./transfer');\n\n/**\n * worker must handle async cleanup handlers. Use custom Promise implementation. \n*/\nvar Promise = require('./Promise').Promise;\n/**\n * Special message sent by parent which causes the worker to terminate itself.\n * Not a \"message object\"; this string is the entire message.\n */\nvar TERMINATE_METHOD_ID = '__workerpool-terminate__';\n\n/**\n * Special message by parent which causes a child process worker to perform cleaup\n * steps before determining if the child process worker should be terminated.\n*/\nvar CLEANUP_METHOD_ID = '__workerpool-cleanup__';\n// var nodeOSPlatform = require('./environment').nodeOSPlatform;\n\n\nvar TIMEOUT_DEFAULT = 1_000;\n\n// create a worker API for sending and receiving messages which works both on\n// node.js and in the browser\nvar worker = {\n  exit: function() {}\n};\n\n// api for in worker communication with parent process\n// works in both node.js and the browser\nvar publicWorker = {\n  /**\n   * Registers listeners which will trigger when a task is timed out or cancled. If all listeners resolve, the worker executing the given task will not be terminated.\n   * *Note*: If there is a blocking operation within a listener, the worker will be terminated.\n   * @param {() => Promise<void>} listener\n  */\n  addAbortListener: function(listener) {\n    worker.abortListeners.push(listener);\n  },\n\n  /**\n    * Emit an event from the worker thread to the main thread.\n    * @param {any} payload\n  */\n  emit: worker.emit\n};\n\nif (typeof self !== 'undefined' && typeof postMessage === 'function' && typeof addEventListener === 'function') {\n  // worker in the browser\n  worker.on = function (event, callback) {\n    addEventListener(event, function (message) {\n      callback(message.data);\n    })\n  };\n  worker.send = function (message, transfer) {\n     transfer ? postMessage(message, transfer) : postMessage (message);\n  };\n}\nelse if (typeof process !== 'undefined') {\n  // node.js\n\n  var WorkerThreads;\n  try {\n    WorkerThreads = require('worker_threads');\n  } catch(error) {\n    if (typeof error === 'object' && error !== null && error.code === 'MODULE_NOT_FOUND') {\n      // no worker_threads, fallback to sub-process based workers\n    } else {\n      throw error;\n    }\n  }\n\n  if (WorkerThreads &&\n    /* if there is a parentPort, we are in a WorkerThread */\n    WorkerThreads.parentPort !== null) {\n    var parentPort  = WorkerThreads.parentPort;\n    worker.send = parentPort.postMessage.bind(parentPort);\n    worker.on = parentPort.on.bind(parentPort);\n    worker.exit = process.exit.bind(process);\n  } else {\n    worker.on = process.on.bind(process);\n    // ignore transfer argument since it is not supported by process\n    worker.send = function (message) {\n      process.send(message);\n    };\n    // register disconnect handler only for subprocess worker to exit when parent is killed unexpectedly\n    worker.on('disconnect', function () {\n      process.exit(1);\n    });\n    worker.exit = process.exit.bind(process);\n  }\n}\nelse {\n  throw new Error('Script must be executed as a worker');\n}\n\nfunction convertError(error) {\n  if (error && error.toJSON) {\n    return JSON.parse(JSON.stringify(error));\n  }\n\n  // turn a class like Error (having non-enumerable properties) into a plain object\n  return JSON.parse(JSON.stringify(error, Object.getOwnPropertyNames(error)));\n}\n\n/**\n * Test whether a value is a Promise via duck typing.\n * @param {*} value\n * @returns {boolean} Returns true when given value is an object\n *                    having functions `then` and `catch`.\n */\nfunction isPromise(value) {\n  return value && (typeof value.then === 'function') && (typeof value.catch === 'function');\n}\n\n// functions available externally\nworker.methods = {};\n\n/**\n * Execute a function with provided arguments\n * @param {String} fn     Stringified function\n * @param {Array} [args]  Function arguments\n * @returns {*}\n */\nworker.methods.run = function run(fn, args) {\n  var f = new Function('return (' + fn + ').apply(this, arguments);');\n  f.worker = publicWorker;\n  return f.apply(f, args);\n};\n\n/**\n * Get a list with methods available on this worker\n * @return {String[]} methods\n */\nworker.methods.methods = function methods() {\n  return Object.keys(worker.methods);\n};\n\n/**\n * Custom handler for when the worker is terminated.\n */\nworker.terminationHandler = undefined;\n\nworker.abortListenerTimeout = TIMEOUT_DEFAULT;\n\n/**\n * Abort handlers for resolving errors which may cause a timeout or cancellation\n * to occur from a worker context\n */\nworker.abortListeners = [];\n\n/**\n * Cleanup and exit the worker.\n * @param {Number} code \n * @returns {Promise<void>}\n */\nworker.terminateAndExit = function(code) {\n  var _exit = function() {\n    worker.exit(code);\n  }\n\n  if(!worker.terminationHandler) {\n    return _exit();\n  }\n  \n  var result = worker.terminationHandler(code);\n  if (isPromise(result)) {\n    result.then(_exit, _exit);\n\n    return result;\n  } else {\n    _exit();\n    return new Promise(function (_resolve, reject) {\n      reject(new Error(\"Worker terminating\"));\n    });\n  }\n}\n\n\n\n/**\n  * Called within the worker message handler to run abort handlers if registered to perform cleanup operations.\n  * @param {Integer} [requestId] id of task which is currently executing in the worker\n  * @return {Promise<void>}\n*/\nworker.cleanup = function(requestId) {\n\n  if (!worker.abortListeners.length) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: convertError(new Error('Worker terminating')),\n    });\n\n    // If there are no handlers registered, reject the promise with an error as we want the handler to be notified\n    // that cleanup should begin and the handler should be GCed.\n    return new Promise(function(resolve) { resolve(); });\n  }\n  \n\n  var _exit = function() {\n    worker.exit();\n  }\n\n  var _abort = function() {\n    if (!worker.abortListeners.length) {\n      worker.abortListeners = [];\n    }\n  }\n\n  const promises = worker.abortListeners.map(listener => listener());\n  let timerId;\n  const timeoutPromise = new Promise((_resolve, reject) => {\n    timerId = setTimeout(function () { \n      reject(new Error('Timeout occured waiting for abort handler, killing worker'));\n    }, worker.abortListenerTimeout);\n  });\n\n  // Once a promise settles we need to clear the timeout to prevet fulfulling the promise twice \n  const settlePromise = Promise.all(promises).then(function() {\n    clearTimeout(timerId);\n    _abort();\n  }, function() {\n    clearTimeout(timerId);\n    _exit();\n  });\n\n  // Returns a promise which will result in one of the following cases\n  // - Resolve once all handlers resolve\n  // - Reject if one or more handlers exceed the 'abortListenerTimeout' interval\n  // - Reject if one or more handlers reject\n  // Upon one of the above cases a message will be sent to the handler with the result of the handler execution\n  // which will either kill the worker if the result contains an error, or keep it in the pool if the result\n  // does not contain an error.\n  return new Promise(function(resolve, reject) {\n    settlePromise.then(resolve, reject);\n    timeoutPromise.then(resolve, reject);\n  }).then(function() {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: null,\n    });\n  }, function(err) {\n    worker.send({\n      id: requestId,\n      method: CLEANUP_METHOD_ID,\n      error: err ? convertError(err) : null,\n    });\n  });\n}\n\nvar currentRequestId = null;\n\nworker.on('message', function (request) {\n  if (request === TERMINATE_METHOD_ID) {\n    return worker.terminateAndExit(0);\n  }\n\n  if (request.method === CLEANUP_METHOD_ID) {\n    return worker.cleanup(request.id);\n  }\n\n  try {\n    var method = worker.methods[request.method];\n\n    if (method) {\n      currentRequestId = request.id;\n      \n      // execute the function\n      var result = method.apply(method, request.params);\n\n      if (isPromise(result)) {\n        // promise returned, resolve this and then return\n        result\n            .then(function (result) {\n              if (result instanceof Transfer) {\n                worker.send({\n                  id: request.id,\n                  result: result.message,\n                  error: null\n                }, result.transfer);\n              } else {\n                worker.send({\n                  id: request.id,\n                  result: result,\n                  error: null\n                });\n              }\n              currentRequestId = null;\n            })\n            .catch(function (err) {\n              worker.send({\n                id: request.id,\n                result: null,\n                error: convertError(err),\n              });\n              currentRequestId = null;\n            });\n      }\n      else {\n        // immediate result\n        if (result instanceof Transfer) {\n          worker.send({\n            id: request.id,\n            result: result.message,\n            error: null\n          }, result.transfer);\n        } else {\n          worker.send({\n            id: request.id,\n            result: result,\n            error: null\n          });\n        }\n\n        currentRequestId = null;\n      }\n    }\n    else {\n      throw new Error('Unknown method \"' + request.method + '\"');\n    }\n  }\n  catch (err) {\n    worker.send({\n      id: request.id,\n      result: null,\n      error: convertError(err)\n    });\n  }\n});\n\n/**\n * Register methods to the worker\n * @param {Object} [methods]\n * @param {import('./types.js').WorkerRegisterOptions} [options]\n */\nworker.register = function (methods, options) {\n\n  if (methods) {\n    for (var name in methods) {\n      if (methods.hasOwnProperty(name)) {\n        worker.methods[name] = methods[name];\n        worker.methods[name].worker = publicWorker;\n      }\n    }\n  }\n\n  if (options) {\n    worker.terminationHandler = options.onTerminate;\n    // register listener timeout or default to 1 second\n    worker.abortListenerTimeout = options.abortListenerTimeout || TIMEOUT_DEFAULT;\n  }\n\n  worker.send('ready');\n};\n\nworker.emit = function (payload) {\n  if (currentRequestId) {\n    if (payload instanceof Transfer) {\n      worker.send({\n        id: currentRequestId,\n        isEvent: true,\n        payload: payload.message\n      }, payload.transfer);\n      return;\n    }\n\n    worker.send({\n      id: currentRequestId,\n      isEvent: true,\n      payload\n    });\n  }\n};\n\n\nif (typeof exports !== 'undefined') {\n  exports.add = worker.register;\n  exports.emit = worker.emit;\n}\n","const {platform, isMainThread, cpus} = require('./environment');\nconst {TerminateError} = require('./WorkerHandler');\n\n/** @typedef {import(\"./Pool\")} Pool */\n/** @typedef {import(\"./types.js\").WorkerPoolOptions} WorkerPoolOptions */\n/** @typedef {import(\"./types.js\").WorkerRegisterOptions} WorkerRegisterOptions */\n\n/**\n * @template { { [k: string]: (...args: any[]) => any } } T\n * @typedef {import('./types.js').Proxy<T>} Proxy<T>\n */\n\n/**\n * @overload\n * Create a new worker pool\n * @param {WorkerPoolOptions} [script]\n * @returns {Pool} pool\n */\n/**\n * @overload\n * Create a new worker pool\n * @param {string} [script]\n * @param {WorkerPoolOptions} [options]\n * @returns {Pool} pool\n */\nfunction pool(script, options) {\n  var Pool = require('./Pool');\n\n  return new Pool(script, options);\n};\nexports.pool = pool;\n\n/**\n * Create a worker and optionally register a set of methods to the worker.\n * @param {{ [k: string]: (...args: any[]) => any }} [methods]\n * @param {WorkerRegisterOptions} [options]\n */\nfunction worker(methods, options) {\n  var worker = require('./worker');\n  worker.add(methods, options);\n};\nexports.worker = worker;\n\n/**\n * Sends an event to the parent worker pool.\n * @param {any} payload \n */\nfunction workerEmit(payload) {\n  var worker = require('./worker');\n  worker.emit(payload);\n};\nexports.workerEmit = workerEmit;\n\nconst {Promise} = require('./Promise');\nexports.Promise = Promise;\n\nexports.Transfer = require('./transfer');\n\nexports.platform = platform;\nexports.isMainThread = isMainThread;\nexports.cpus = cpus;\nexports.TerminateError = TerminateError;"],"names":["isNode","nodeProcess","versions","node","module","exports","platform","process","worker_threads","require","isMainThread","connected","Window","cpus","self","navigator","hardwareConcurrency","length","Promise","handler","parent","me","this","SyntaxError","_onSuccess","_onFail","resolved","rejected","pending","Symbol","toStringTag","_process","onSuccess","onFail","push","then","resolve","reject","s","_then","f","_resolve","result","forEach","fn","_reject","error","cancel","CancellationError","timeout","delay","timer","setTimeout","TimeoutError","always","clearTimeout","callback","res","message","stack","Error","prototype","finally","final","all","promises","remaining","results","p","i","defer","resolver","promise","constructor","name","_Promise","validateOptions","options","allowedOptionNames","objectName","optionNames","Object","keys","unknownOptionName","find","optionName","includes","illegalOptionName","allowedOptionName","workerOptsNames","forkOptsNames","workerThreadOptsNames","require$$0","environment","require$$1","require$$2","TERMINATE_METHOD_ID","CLEANUP_METHOD_ID","ensureWorkerThreads","WorkerThreads","tryRequireWorkerThreads","ensureWebWorker","Worker","_typeof","code","setupBrowserWorker","script","workerOpts","worker","isBrowserWorker","on","event","addEventListener","data","send","transfer","postMessage","setupWorkerThreadWorker","_options$emitStdStrea","_options$emitStdStrea2","workerThreadOpts","_objectSpread","stdout","emitStdStreams","stderr","isWorkerThread","kill","terminate","disconnect","emit","setupProcessWorker","child_process","forkOpts","fork","forkArgs","call","isChildProcess","resolveForkOptions","opts","processExecArgv","execArgv","join","inspectorActive","indexOf","debugBrk","debugPort","arg","assign","concat","stdio","undefined","objectToError","obj","temp","props","handleEmittedStdPayload","payload","values","processing","task","_task$options","tracking","_task$options2","WorkerHandler","_options","onError","id","terminated","create","Blob","window","URL","createObjectURL","blob","embeddedWorker","type","__dirname","getDefaultWorker","workerType","setupWorker","workerTerminateTimeout","ready","requestQueue","toString","response","_step","_iterator","_createForOfIteratorHelper","splice","n","done","request","value","err","e","dispatchQueuedRequests","isEvent","terminating","method","trackedTask","timeoutId","WrappedTimeoutError","TerminateError","exitCode","signalCode","spawnargs","spawnfile","cleaning","terminationHandler","lastId","timeoutError","methods","exec","params","catch","terminateAndNotify","busy","force","_i","_Object$values","cleanup","removeAllListeners","killed","cleanExitTimeout","once","_Error","cause","_this","_classCallCheck","_callSuper","_inherits","_wrapNativeSuper","WorkerHandlerModule","_tryRequireWorkerThreads","_setupProcessWorker","_setupBrowserWorker","_setupWorkerThreadWorker","DEBUG_PORT_ALLOCATOR","DebugPortAllocator","ports","debugPortAllocator","nextAvailableStartingAt","starting","releasePort","port","require$$3","Pool","workers","tasks","freeze","debugPortStart","nodeWorker","maxQueueSize","Infinity","onCreateWorker","onTerminateWorker","maxWorkers","isNumber","isInteger","TypeError","validateMaxWorkers","Math","max","minWorkers","validateMinWorkers","_ensureMinWorkers","_boundNext","_next","bind","round","Array","isArray","originalTimeout","String","proxy","arguments","pool","slice","_getWorker","shift","_removeWorker","_createWorkerHandler","_removeWorkerFromList","index","removeWorker","termPromise","stats","totalWorkers","busyWorkers","filter","idleWorkers","pendingTasks","activeTasks","overriddenParams","Pool_1","Transfer","exit","publicWorker","addAbortListener","listener","abortListeners","parentPort","convertError","toJSON","JSON","parse","stringify","getOwnPropertyNames","isPromise","run","args","Function","apply","abortListenerTimeout","terminateAndExit","_exit","requestId","timerId","map","timeoutPromise","settlePromise","currentRequestId","register","hasOwnProperty","onTerminate","add","pool_1","src","worker_1","workerEmit_1","workerEmit","require$$4","require$$5","platform_1","isMainThread_1","cpus_1","TerminateError_1"],"mappings":"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"}
\ No newline at end of file
diff --git a/src/WorkerHandler.js b/src/WorkerHandler.js
index 6390d092e850355a9ab33f96ca987a574c4c58ee..a0efb8c2d32d41d32c6fc605a6f3289d9ef9234a 100644
--- a/src/WorkerHandler.js
+++ b/src/WorkerHandler.js
@@ -349,7 +349,9 @@ function WorkerHandler(script, _options) {
 
   var worker = this.worker;
   // listen for worker messages error and exit
-  this.worker.on('error', onError);
+  this.worker.on('error',function (error) {
+    onError(new TerminateError('Workerpool Worker error: ' + error.message, error))
+  });
   this.worker.on('exit', function (exitCode, signalCode) {
     var message = 'Workerpool Worker terminated Unexpectedly\n';
 
@@ -363,7 +365,7 @@ function WorkerHandler(script, _options) {
     message += '    stdout: `' + worker.stdout + '`\n'
     message += '    stderr: `' + worker.stderr + '`\n'
 
-    onError(new Error(message));
+    onError(new TerminateError(message));
   });
 
   this.processing = Object.create(null); // queue with tasks currently in progress
@@ -417,7 +419,7 @@ WorkerHandler.prototype.exec = function(method, params, resolver, options) {
   };
 
   if (this.terminated) {
-    resolver.reject(new Error('Worker is terminated'));
+    resolver.reject(new TerminateError('Worker is terminated'));
   } else if (this.worker.ready) {
     // send the request to the worker
     this.worker.send(request.message, request.transfer);
@@ -631,9 +633,23 @@ function WrappedTimeoutError(timeoutError) {
   this.stack = (new Error()).stack;
 }
 
+class TerminateError extends Error {
+  /**
+   * Create a timeout error
+   * @param {String} [message]
+   * @param {Error=} [cause]
+   */
+  constructor(message, cause) {
+    super(message || 'worker terminated');
+    this.cause = cause;
+  }
+}
+
 module.exports = WorkerHandler;
 module.exports._tryRequireWorkerThreads = tryRequireWorkerThreads;
 module.exports._setupProcessWorker = setupProcessWorker;
 module.exports._setupBrowserWorker = setupBrowserWorker;
 module.exports._setupWorkerThreadWorker = setupWorkerThreadWorker;
 module.exports.ensureWorkerThreads = ensureWorkerThreads;
+module.exports.TerminateError = TerminateError
+
diff --git a/src/generated/.gitignore b/src/generated/.gitignore
new file mode 100644
index 0000000000000000000000000000000000000000..a6c7c2852d068ff1fef480ac369459598a62f82e
--- /dev/null
+++ b/src/generated/.gitignore
@@ -0,0 +1 @@
+*.js
diff --git a/src/generated/.npmignore b/src/generated/.npmignore
new file mode 100644
index 0000000000000000000000000000000000000000..67fbd248adbb7181df15633f784579fcbed21c45
--- /dev/null
+++ b/src/generated/.npmignore
@@ -0,0 +1,2 @@
+# the src/generated files must be excluded from git,
+# but included in the npm package.
diff --git a/src/index.js b/src/index.js
index c1e1a594d33734f229a47949be5c58f66e7efe72..f68ff1c82218229c218d31aeaf537eb3c24b787b 100644
--- a/src/index.js
+++ b/src/index.js
@@ -1,4 +1,5 @@
 const {platform, isMainThread, cpus} = require('./environment');
+const {TerminateError} = require('./WorkerHandler');
 
 /** @typedef {import("./Pool")} Pool */
 /** @typedef {import("./types.js").WorkerPoolOptions} WorkerPoolOptions */
@@ -58,3 +59,4 @@ exports.Transfer = require('./transfer');
 exports.platform = platform;
 exports.isMainThread = isMainThread;
 exports.cpus = cpus;
+exports.TerminateError = TerminateError;
\ No newline at end of file
diff --git a/types/WorkerHandler.d.ts b/types/WorkerHandler.d.ts
index 552eb4273fe78687ff7e2ee6dfdb2e2efcea809d..2355fd5bb4724740ee0a6328c46eecb2a757d4c1 100644
--- a/types/WorkerHandler.d.ts
+++ b/types/WorkerHandler.d.ts
@@ -78,7 +78,7 @@ declare class WorkerHandler {
     terminateAndNotify(force?: boolean, timeout?: number): Promise<WorkerHandler, Error>;
 }
 declare namespace WorkerHandler {
-    export { tryRequireWorkerThreads as _tryRequireWorkerThreads, setupProcessWorker as _setupProcessWorker, setupBrowserWorker as _setupBrowserWorker, setupWorkerThreadWorker as _setupWorkerThreadWorker, ensureWorkerThreads };
+    export { tryRequireWorkerThreads as _tryRequireWorkerThreads, setupProcessWorker as _setupProcessWorker, setupBrowserWorker as _setupBrowserWorker, setupWorkerThreadWorker as _setupWorkerThreadWorker, ensureWorkerThreads, TerminateError };
 }
 import { Promise } from "./Promise";
 declare function tryRequireWorkerThreads(): typeof import("worker_threads") | null;
@@ -86,3 +86,12 @@ declare function setupProcessWorker(script: any, options: any, child_process: an
 declare function setupBrowserWorker(script: any, workerOpts: any, Worker: any): any;
 declare function setupWorkerThreadWorker(script: any, WorkerThreads: any, options: any): any;
 declare function ensureWorkerThreads(): typeof import("worker_threads");
+declare class TerminateError extends Error {
+    /**
+     * Create a timeout error
+     * @param {String} [message]
+     * @param {Error=} [cause]
+     */
+    constructor(message?: string, cause?: Error | undefined);
+    cause: Error | undefined;
+}
diff --git a/types/index.d.ts b/types/index.d.ts
index 3b61751cd251d0075d52591b93f60a399f3d0c59..bcb059cacd38f83d408d5d2c46f89976c7a90728 100644
--- a/types/index.d.ts
+++ b/types/index.d.ts
@@ -40,4 +40,5 @@ import { Promise } from "./Promise";
 import { platform } from "./environment";
 import { isMainThread } from "./environment";
 import { cpus } from "./environment";
-export { Promise, platform, isMainThread, cpus };
+import { TerminateError } from "./WorkerHandler";
+export { Promise, platform, isMainThread, cpus, TerminateError };
diff --git a/types/test.ts b/types/test.ts
deleted file mode 100644
index 8872e1c169bcd8f3c8c815f80559419c11ed1c62..0000000000000000000000000000000000000000
--- a/types/test.ts
+++ /dev/null
@@ -1,11 +0,0 @@
-import { pool } from '..'
-
-async function run() {
-
-  const p = pool('./worker.js')
-
-  const res = await p.exec('add', [2, 3])
-
-  const b = res +2
-
-}
